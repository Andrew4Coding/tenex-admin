
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `GameDeveloper` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model GameDeveloper
 * 
 */
export type GameDeveloperModel = runtime.Types.Result.DefaultSelection<Prisma.$GameDeveloperPayload>

export type AggregateGameDeveloper = {
  _count: GameDeveloperCountAggregateOutputType | null
  _min: GameDeveloperMinAggregateOutputType | null
  _max: GameDeveloperMaxAggregateOutputType | null
}

export type GameDeveloperMinAggregateOutputType = {
  id: string | null
  name: string | null
  description: string | null
  imageUrl: string | null
  instagramUrl: string | null
  linkedInUrl: string | null
  gameId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type GameDeveloperMaxAggregateOutputType = {
  id: string | null
  name: string | null
  description: string | null
  imageUrl: string | null
  instagramUrl: string | null
  linkedInUrl: string | null
  gameId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type GameDeveloperCountAggregateOutputType = {
  id: number
  name: number
  description: number
  imageUrl: number
  instagramUrl: number
  linkedInUrl: number
  gameId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type GameDeveloperMinAggregateInputType = {
  id?: true
  name?: true
  description?: true
  imageUrl?: true
  instagramUrl?: true
  linkedInUrl?: true
  gameId?: true
  createdAt?: true
  updatedAt?: true
}

export type GameDeveloperMaxAggregateInputType = {
  id?: true
  name?: true
  description?: true
  imageUrl?: true
  instagramUrl?: true
  linkedInUrl?: true
  gameId?: true
  createdAt?: true
  updatedAt?: true
}

export type GameDeveloperCountAggregateInputType = {
  id?: true
  name?: true
  description?: true
  imageUrl?: true
  instagramUrl?: true
  linkedInUrl?: true
  gameId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type GameDeveloperAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which GameDeveloper to aggregate.
   */
  where?: Prisma.GameDeveloperWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of GameDevelopers to fetch.
   */
  orderBy?: Prisma.GameDeveloperOrderByWithRelationInput | Prisma.GameDeveloperOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.GameDeveloperWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` GameDevelopers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` GameDevelopers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned GameDevelopers
  **/
  _count?: true | GameDeveloperCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: GameDeveloperMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: GameDeveloperMaxAggregateInputType
}

export type GetGameDeveloperAggregateType<T extends GameDeveloperAggregateArgs> = {
      [P in keyof T & keyof AggregateGameDeveloper]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateGameDeveloper[P]>
    : Prisma.GetScalarType<T[P], AggregateGameDeveloper[P]>
}




export type GameDeveloperGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.GameDeveloperWhereInput
  orderBy?: Prisma.GameDeveloperOrderByWithAggregationInput | Prisma.GameDeveloperOrderByWithAggregationInput[]
  by: Prisma.GameDeveloperScalarFieldEnum[] | Prisma.GameDeveloperScalarFieldEnum
  having?: Prisma.GameDeveloperScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: GameDeveloperCountAggregateInputType | true
  _min?: GameDeveloperMinAggregateInputType
  _max?: GameDeveloperMaxAggregateInputType
}

export type GameDeveloperGroupByOutputType = {
  id: string
  name: string
  description: string | null
  imageUrl: string | null
  instagramUrl: string | null
  linkedInUrl: string | null
  gameId: string
  createdAt: Date
  updatedAt: Date
  _count: GameDeveloperCountAggregateOutputType | null
  _min: GameDeveloperMinAggregateOutputType | null
  _max: GameDeveloperMaxAggregateOutputType | null
}

type GetGameDeveloperGroupByPayload<T extends GameDeveloperGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<GameDeveloperGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof GameDeveloperGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], GameDeveloperGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], GameDeveloperGroupByOutputType[P]>
      }
    >
  > 



export type GameDeveloperWhereInput = {
  AND?: Prisma.GameDeveloperWhereInput | Prisma.GameDeveloperWhereInput[]
  OR?: Prisma.GameDeveloperWhereInput[]
  NOT?: Prisma.GameDeveloperWhereInput | Prisma.GameDeveloperWhereInput[]
  id?: Prisma.StringFilter<"GameDeveloper"> | string
  name?: Prisma.StringFilter<"GameDeveloper"> | string
  description?: Prisma.StringNullableFilter<"GameDeveloper"> | string | null
  imageUrl?: Prisma.StringNullableFilter<"GameDeveloper"> | string | null
  instagramUrl?: Prisma.StringNullableFilter<"GameDeveloper"> | string | null
  linkedInUrl?: Prisma.StringNullableFilter<"GameDeveloper"> | string | null
  gameId?: Prisma.StringFilter<"GameDeveloper"> | string
  createdAt?: Prisma.DateTimeFilter<"GameDeveloper"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"GameDeveloper"> | Date | string
  Game?: Prisma.XOR<Prisma.GameScalarRelationFilter, Prisma.GameWhereInput>
}

export type GameDeveloperOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  imageUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  instagramUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  linkedInUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  gameId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  Game?: Prisma.GameOrderByWithRelationInput
}

export type GameDeveloperWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.GameDeveloperWhereInput | Prisma.GameDeveloperWhereInput[]
  OR?: Prisma.GameDeveloperWhereInput[]
  NOT?: Prisma.GameDeveloperWhereInput | Prisma.GameDeveloperWhereInput[]
  name?: Prisma.StringFilter<"GameDeveloper"> | string
  description?: Prisma.StringNullableFilter<"GameDeveloper"> | string | null
  imageUrl?: Prisma.StringNullableFilter<"GameDeveloper"> | string | null
  instagramUrl?: Prisma.StringNullableFilter<"GameDeveloper"> | string | null
  linkedInUrl?: Prisma.StringNullableFilter<"GameDeveloper"> | string | null
  gameId?: Prisma.StringFilter<"GameDeveloper"> | string
  createdAt?: Prisma.DateTimeFilter<"GameDeveloper"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"GameDeveloper"> | Date | string
  Game?: Prisma.XOR<Prisma.GameScalarRelationFilter, Prisma.GameWhereInput>
}, "id">

export type GameDeveloperOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  imageUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  instagramUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  linkedInUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  gameId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.GameDeveloperCountOrderByAggregateInput
  _max?: Prisma.GameDeveloperMaxOrderByAggregateInput
  _min?: Prisma.GameDeveloperMinOrderByAggregateInput
}

export type GameDeveloperScalarWhereWithAggregatesInput = {
  AND?: Prisma.GameDeveloperScalarWhereWithAggregatesInput | Prisma.GameDeveloperScalarWhereWithAggregatesInput[]
  OR?: Prisma.GameDeveloperScalarWhereWithAggregatesInput[]
  NOT?: Prisma.GameDeveloperScalarWhereWithAggregatesInput | Prisma.GameDeveloperScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"GameDeveloper"> | string
  name?: Prisma.StringWithAggregatesFilter<"GameDeveloper"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"GameDeveloper"> | string | null
  imageUrl?: Prisma.StringNullableWithAggregatesFilter<"GameDeveloper"> | string | null
  instagramUrl?: Prisma.StringNullableWithAggregatesFilter<"GameDeveloper"> | string | null
  linkedInUrl?: Prisma.StringNullableWithAggregatesFilter<"GameDeveloper"> | string | null
  gameId?: Prisma.StringWithAggregatesFilter<"GameDeveloper"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"GameDeveloper"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"GameDeveloper"> | Date | string
}

export type GameDeveloperCreateInput = {
  id: string
  name: string
  description?: string | null
  imageUrl?: string | null
  instagramUrl?: string | null
  linkedInUrl?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  Game: Prisma.GameCreateNestedOneWithoutGameDeveloperInput
}

export type GameDeveloperUncheckedCreateInput = {
  id: string
  name: string
  description?: string | null
  imageUrl?: string | null
  instagramUrl?: string | null
  linkedInUrl?: string | null
  gameId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type GameDeveloperUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  instagramUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedInUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Game?: Prisma.GameUpdateOneRequiredWithoutGameDeveloperNestedInput
}

export type GameDeveloperUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  instagramUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedInUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gameId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GameDeveloperCreateManyInput = {
  id: string
  name: string
  description?: string | null
  imageUrl?: string | null
  instagramUrl?: string | null
  linkedInUrl?: string | null
  gameId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type GameDeveloperUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  instagramUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedInUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GameDeveloperUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  instagramUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedInUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gameId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GameDeveloperListRelationFilter = {
  every?: Prisma.GameDeveloperWhereInput
  some?: Prisma.GameDeveloperWhereInput
  none?: Prisma.GameDeveloperWhereInput
}

export type GameDeveloperOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type GameDeveloperCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  instagramUrl?: Prisma.SortOrder
  linkedInUrl?: Prisma.SortOrder
  gameId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type GameDeveloperMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  instagramUrl?: Prisma.SortOrder
  linkedInUrl?: Prisma.SortOrder
  gameId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type GameDeveloperMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  instagramUrl?: Prisma.SortOrder
  linkedInUrl?: Prisma.SortOrder
  gameId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type GameDeveloperCreateNestedManyWithoutGameInput = {
  create?: Prisma.XOR<Prisma.GameDeveloperCreateWithoutGameInput, Prisma.GameDeveloperUncheckedCreateWithoutGameInput> | Prisma.GameDeveloperCreateWithoutGameInput[] | Prisma.GameDeveloperUncheckedCreateWithoutGameInput[]
  connectOrCreate?: Prisma.GameDeveloperCreateOrConnectWithoutGameInput | Prisma.GameDeveloperCreateOrConnectWithoutGameInput[]
  createMany?: Prisma.GameDeveloperCreateManyGameInputEnvelope
  connect?: Prisma.GameDeveloperWhereUniqueInput | Prisma.GameDeveloperWhereUniqueInput[]
}

export type GameDeveloperUncheckedCreateNestedManyWithoutGameInput = {
  create?: Prisma.XOR<Prisma.GameDeveloperCreateWithoutGameInput, Prisma.GameDeveloperUncheckedCreateWithoutGameInput> | Prisma.GameDeveloperCreateWithoutGameInput[] | Prisma.GameDeveloperUncheckedCreateWithoutGameInput[]
  connectOrCreate?: Prisma.GameDeveloperCreateOrConnectWithoutGameInput | Prisma.GameDeveloperCreateOrConnectWithoutGameInput[]
  createMany?: Prisma.GameDeveloperCreateManyGameInputEnvelope
  connect?: Prisma.GameDeveloperWhereUniqueInput | Prisma.GameDeveloperWhereUniqueInput[]
}

export type GameDeveloperUpdateManyWithoutGameNestedInput = {
  create?: Prisma.XOR<Prisma.GameDeveloperCreateWithoutGameInput, Prisma.GameDeveloperUncheckedCreateWithoutGameInput> | Prisma.GameDeveloperCreateWithoutGameInput[] | Prisma.GameDeveloperUncheckedCreateWithoutGameInput[]
  connectOrCreate?: Prisma.GameDeveloperCreateOrConnectWithoutGameInput | Prisma.GameDeveloperCreateOrConnectWithoutGameInput[]
  upsert?: Prisma.GameDeveloperUpsertWithWhereUniqueWithoutGameInput | Prisma.GameDeveloperUpsertWithWhereUniqueWithoutGameInput[]
  createMany?: Prisma.GameDeveloperCreateManyGameInputEnvelope
  set?: Prisma.GameDeveloperWhereUniqueInput | Prisma.GameDeveloperWhereUniqueInput[]
  disconnect?: Prisma.GameDeveloperWhereUniqueInput | Prisma.GameDeveloperWhereUniqueInput[]
  delete?: Prisma.GameDeveloperWhereUniqueInput | Prisma.GameDeveloperWhereUniqueInput[]
  connect?: Prisma.GameDeveloperWhereUniqueInput | Prisma.GameDeveloperWhereUniqueInput[]
  update?: Prisma.GameDeveloperUpdateWithWhereUniqueWithoutGameInput | Prisma.GameDeveloperUpdateWithWhereUniqueWithoutGameInput[]
  updateMany?: Prisma.GameDeveloperUpdateManyWithWhereWithoutGameInput | Prisma.GameDeveloperUpdateManyWithWhereWithoutGameInput[]
  deleteMany?: Prisma.GameDeveloperScalarWhereInput | Prisma.GameDeveloperScalarWhereInput[]
}

export type GameDeveloperUncheckedUpdateManyWithoutGameNestedInput = {
  create?: Prisma.XOR<Prisma.GameDeveloperCreateWithoutGameInput, Prisma.GameDeveloperUncheckedCreateWithoutGameInput> | Prisma.GameDeveloperCreateWithoutGameInput[] | Prisma.GameDeveloperUncheckedCreateWithoutGameInput[]
  connectOrCreate?: Prisma.GameDeveloperCreateOrConnectWithoutGameInput | Prisma.GameDeveloperCreateOrConnectWithoutGameInput[]
  upsert?: Prisma.GameDeveloperUpsertWithWhereUniqueWithoutGameInput | Prisma.GameDeveloperUpsertWithWhereUniqueWithoutGameInput[]
  createMany?: Prisma.GameDeveloperCreateManyGameInputEnvelope
  set?: Prisma.GameDeveloperWhereUniqueInput | Prisma.GameDeveloperWhereUniqueInput[]
  disconnect?: Prisma.GameDeveloperWhereUniqueInput | Prisma.GameDeveloperWhereUniqueInput[]
  delete?: Prisma.GameDeveloperWhereUniqueInput | Prisma.GameDeveloperWhereUniqueInput[]
  connect?: Prisma.GameDeveloperWhereUniqueInput | Prisma.GameDeveloperWhereUniqueInput[]
  update?: Prisma.GameDeveloperUpdateWithWhereUniqueWithoutGameInput | Prisma.GameDeveloperUpdateWithWhereUniqueWithoutGameInput[]
  updateMany?: Prisma.GameDeveloperUpdateManyWithWhereWithoutGameInput | Prisma.GameDeveloperUpdateManyWithWhereWithoutGameInput[]
  deleteMany?: Prisma.GameDeveloperScalarWhereInput | Prisma.GameDeveloperScalarWhereInput[]
}

export type GameDeveloperCreateWithoutGameInput = {
  id: string
  name: string
  description?: string | null
  imageUrl?: string | null
  instagramUrl?: string | null
  linkedInUrl?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
}

export type GameDeveloperUncheckedCreateWithoutGameInput = {
  id: string
  name: string
  description?: string | null
  imageUrl?: string | null
  instagramUrl?: string | null
  linkedInUrl?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
}

export type GameDeveloperCreateOrConnectWithoutGameInput = {
  where: Prisma.GameDeveloperWhereUniqueInput
  create: Prisma.XOR<Prisma.GameDeveloperCreateWithoutGameInput, Prisma.GameDeveloperUncheckedCreateWithoutGameInput>
}

export type GameDeveloperCreateManyGameInputEnvelope = {
  data: Prisma.GameDeveloperCreateManyGameInput | Prisma.GameDeveloperCreateManyGameInput[]
  skipDuplicates?: boolean
}

export type GameDeveloperUpsertWithWhereUniqueWithoutGameInput = {
  where: Prisma.GameDeveloperWhereUniqueInput
  update: Prisma.XOR<Prisma.GameDeveloperUpdateWithoutGameInput, Prisma.GameDeveloperUncheckedUpdateWithoutGameInput>
  create: Prisma.XOR<Prisma.GameDeveloperCreateWithoutGameInput, Prisma.GameDeveloperUncheckedCreateWithoutGameInput>
}

export type GameDeveloperUpdateWithWhereUniqueWithoutGameInput = {
  where: Prisma.GameDeveloperWhereUniqueInput
  data: Prisma.XOR<Prisma.GameDeveloperUpdateWithoutGameInput, Prisma.GameDeveloperUncheckedUpdateWithoutGameInput>
}

export type GameDeveloperUpdateManyWithWhereWithoutGameInput = {
  where: Prisma.GameDeveloperScalarWhereInput
  data: Prisma.XOR<Prisma.GameDeveloperUpdateManyMutationInput, Prisma.GameDeveloperUncheckedUpdateManyWithoutGameInput>
}

export type GameDeveloperScalarWhereInput = {
  AND?: Prisma.GameDeveloperScalarWhereInput | Prisma.GameDeveloperScalarWhereInput[]
  OR?: Prisma.GameDeveloperScalarWhereInput[]
  NOT?: Prisma.GameDeveloperScalarWhereInput | Prisma.GameDeveloperScalarWhereInput[]
  id?: Prisma.StringFilter<"GameDeveloper"> | string
  name?: Prisma.StringFilter<"GameDeveloper"> | string
  description?: Prisma.StringNullableFilter<"GameDeveloper"> | string | null
  imageUrl?: Prisma.StringNullableFilter<"GameDeveloper"> | string | null
  instagramUrl?: Prisma.StringNullableFilter<"GameDeveloper"> | string | null
  linkedInUrl?: Prisma.StringNullableFilter<"GameDeveloper"> | string | null
  gameId?: Prisma.StringFilter<"GameDeveloper"> | string
  createdAt?: Prisma.DateTimeFilter<"GameDeveloper"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"GameDeveloper"> | Date | string
}

export type GameDeveloperCreateManyGameInput = {
  id: string
  name: string
  description?: string | null
  imageUrl?: string | null
  instagramUrl?: string | null
  linkedInUrl?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
}

export type GameDeveloperUpdateWithoutGameInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  instagramUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedInUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GameDeveloperUncheckedUpdateWithoutGameInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  instagramUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedInUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type GameDeveloperUncheckedUpdateManyWithoutGameInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  instagramUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  linkedInUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type GameDeveloperSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  imageUrl?: boolean
  instagramUrl?: boolean
  linkedInUrl?: boolean
  gameId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Game?: boolean | Prisma.GameDefaultArgs<ExtArgs>
}, ExtArgs["result"]["gameDeveloper"]>

export type GameDeveloperSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  imageUrl?: boolean
  instagramUrl?: boolean
  linkedInUrl?: boolean
  gameId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Game?: boolean | Prisma.GameDefaultArgs<ExtArgs>
}, ExtArgs["result"]["gameDeveloper"]>

export type GameDeveloperSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  imageUrl?: boolean
  instagramUrl?: boolean
  linkedInUrl?: boolean
  gameId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Game?: boolean | Prisma.GameDefaultArgs<ExtArgs>
}, ExtArgs["result"]["gameDeveloper"]>

export type GameDeveloperSelectScalar = {
  id?: boolean
  name?: boolean
  description?: boolean
  imageUrl?: boolean
  instagramUrl?: boolean
  linkedInUrl?: boolean
  gameId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type GameDeveloperOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "description" | "imageUrl" | "instagramUrl" | "linkedInUrl" | "gameId" | "createdAt" | "updatedAt", ExtArgs["result"]["gameDeveloper"]>
export type GameDeveloperInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Game?: boolean | Prisma.GameDefaultArgs<ExtArgs>
}
export type GameDeveloperIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Game?: boolean | Prisma.GameDefaultArgs<ExtArgs>
}
export type GameDeveloperIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Game?: boolean | Prisma.GameDefaultArgs<ExtArgs>
}

export type $GameDeveloperPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "GameDeveloper"
  objects: {
    Game: Prisma.$GamePayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    description: string | null
    imageUrl: string | null
    instagramUrl: string | null
    linkedInUrl: string | null
    gameId: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["gameDeveloper"]>
  composites: {}
}

export type GameDeveloperGetPayload<S extends boolean | null | undefined | GameDeveloperDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$GameDeveloperPayload, S>

export type GameDeveloperCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<GameDeveloperFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: GameDeveloperCountAggregateInputType | true
  }

export interface GameDeveloperDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['GameDeveloper'], meta: { name: 'GameDeveloper' } }
  /**
   * Find zero or one GameDeveloper that matches the filter.
   * @param {GameDeveloperFindUniqueArgs} args - Arguments to find a GameDeveloper
   * @example
   * // Get one GameDeveloper
   * const gameDeveloper = await prisma.gameDeveloper.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends GameDeveloperFindUniqueArgs>(args: Prisma.SelectSubset<T, GameDeveloperFindUniqueArgs<ExtArgs>>): Prisma.Prisma__GameDeveloperClient<runtime.Types.Result.GetResult<Prisma.$GameDeveloperPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one GameDeveloper that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {GameDeveloperFindUniqueOrThrowArgs} args - Arguments to find a GameDeveloper
   * @example
   * // Get one GameDeveloper
   * const gameDeveloper = await prisma.gameDeveloper.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends GameDeveloperFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, GameDeveloperFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__GameDeveloperClient<runtime.Types.Result.GetResult<Prisma.$GameDeveloperPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first GameDeveloper that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GameDeveloperFindFirstArgs} args - Arguments to find a GameDeveloper
   * @example
   * // Get one GameDeveloper
   * const gameDeveloper = await prisma.gameDeveloper.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends GameDeveloperFindFirstArgs>(args?: Prisma.SelectSubset<T, GameDeveloperFindFirstArgs<ExtArgs>>): Prisma.Prisma__GameDeveloperClient<runtime.Types.Result.GetResult<Prisma.$GameDeveloperPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first GameDeveloper that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GameDeveloperFindFirstOrThrowArgs} args - Arguments to find a GameDeveloper
   * @example
   * // Get one GameDeveloper
   * const gameDeveloper = await prisma.gameDeveloper.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends GameDeveloperFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, GameDeveloperFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__GameDeveloperClient<runtime.Types.Result.GetResult<Prisma.$GameDeveloperPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more GameDevelopers that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GameDeveloperFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all GameDevelopers
   * const gameDevelopers = await prisma.gameDeveloper.findMany()
   * 
   * // Get first 10 GameDevelopers
   * const gameDevelopers = await prisma.gameDeveloper.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const gameDeveloperWithIdOnly = await prisma.gameDeveloper.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends GameDeveloperFindManyArgs>(args?: Prisma.SelectSubset<T, GameDeveloperFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GameDeveloperPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a GameDeveloper.
   * @param {GameDeveloperCreateArgs} args - Arguments to create a GameDeveloper.
   * @example
   * // Create one GameDeveloper
   * const GameDeveloper = await prisma.gameDeveloper.create({
   *   data: {
   *     // ... data to create a GameDeveloper
   *   }
   * })
   * 
   */
  create<T extends GameDeveloperCreateArgs>(args: Prisma.SelectSubset<T, GameDeveloperCreateArgs<ExtArgs>>): Prisma.Prisma__GameDeveloperClient<runtime.Types.Result.GetResult<Prisma.$GameDeveloperPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many GameDevelopers.
   * @param {GameDeveloperCreateManyArgs} args - Arguments to create many GameDevelopers.
   * @example
   * // Create many GameDevelopers
   * const gameDeveloper = await prisma.gameDeveloper.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends GameDeveloperCreateManyArgs>(args?: Prisma.SelectSubset<T, GameDeveloperCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many GameDevelopers and returns the data saved in the database.
   * @param {GameDeveloperCreateManyAndReturnArgs} args - Arguments to create many GameDevelopers.
   * @example
   * // Create many GameDevelopers
   * const gameDeveloper = await prisma.gameDeveloper.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many GameDevelopers and only return the `id`
   * const gameDeveloperWithIdOnly = await prisma.gameDeveloper.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends GameDeveloperCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, GameDeveloperCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GameDeveloperPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a GameDeveloper.
   * @param {GameDeveloperDeleteArgs} args - Arguments to delete one GameDeveloper.
   * @example
   * // Delete one GameDeveloper
   * const GameDeveloper = await prisma.gameDeveloper.delete({
   *   where: {
   *     // ... filter to delete one GameDeveloper
   *   }
   * })
   * 
   */
  delete<T extends GameDeveloperDeleteArgs>(args: Prisma.SelectSubset<T, GameDeveloperDeleteArgs<ExtArgs>>): Prisma.Prisma__GameDeveloperClient<runtime.Types.Result.GetResult<Prisma.$GameDeveloperPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one GameDeveloper.
   * @param {GameDeveloperUpdateArgs} args - Arguments to update one GameDeveloper.
   * @example
   * // Update one GameDeveloper
   * const gameDeveloper = await prisma.gameDeveloper.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends GameDeveloperUpdateArgs>(args: Prisma.SelectSubset<T, GameDeveloperUpdateArgs<ExtArgs>>): Prisma.Prisma__GameDeveloperClient<runtime.Types.Result.GetResult<Prisma.$GameDeveloperPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more GameDevelopers.
   * @param {GameDeveloperDeleteManyArgs} args - Arguments to filter GameDevelopers to delete.
   * @example
   * // Delete a few GameDevelopers
   * const { count } = await prisma.gameDeveloper.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends GameDeveloperDeleteManyArgs>(args?: Prisma.SelectSubset<T, GameDeveloperDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more GameDevelopers.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GameDeveloperUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many GameDevelopers
   * const gameDeveloper = await prisma.gameDeveloper.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends GameDeveloperUpdateManyArgs>(args: Prisma.SelectSubset<T, GameDeveloperUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more GameDevelopers and returns the data updated in the database.
   * @param {GameDeveloperUpdateManyAndReturnArgs} args - Arguments to update many GameDevelopers.
   * @example
   * // Update many GameDevelopers
   * const gameDeveloper = await prisma.gameDeveloper.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more GameDevelopers and only return the `id`
   * const gameDeveloperWithIdOnly = await prisma.gameDeveloper.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends GameDeveloperUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, GameDeveloperUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GameDeveloperPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one GameDeveloper.
   * @param {GameDeveloperUpsertArgs} args - Arguments to update or create a GameDeveloper.
   * @example
   * // Update or create a GameDeveloper
   * const gameDeveloper = await prisma.gameDeveloper.upsert({
   *   create: {
   *     // ... data to create a GameDeveloper
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the GameDeveloper we want to update
   *   }
   * })
   */
  upsert<T extends GameDeveloperUpsertArgs>(args: Prisma.SelectSubset<T, GameDeveloperUpsertArgs<ExtArgs>>): Prisma.Prisma__GameDeveloperClient<runtime.Types.Result.GetResult<Prisma.$GameDeveloperPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of GameDevelopers.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GameDeveloperCountArgs} args - Arguments to filter GameDevelopers to count.
   * @example
   * // Count the number of GameDevelopers
   * const count = await prisma.gameDeveloper.count({
   *   where: {
   *     // ... the filter for the GameDevelopers we want to count
   *   }
   * })
  **/
  count<T extends GameDeveloperCountArgs>(
    args?: Prisma.Subset<T, GameDeveloperCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], GameDeveloperCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a GameDeveloper.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GameDeveloperAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends GameDeveloperAggregateArgs>(args: Prisma.Subset<T, GameDeveloperAggregateArgs>): Prisma.PrismaPromise<GetGameDeveloperAggregateType<T>>

  /**
   * Group by GameDeveloper.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {GameDeveloperGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends GameDeveloperGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: GameDeveloperGroupByArgs['orderBy'] }
      : { orderBy?: GameDeveloperGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, GameDeveloperGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGameDeveloperGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the GameDeveloper model
 */
readonly fields: GameDeveloperFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for GameDeveloper.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__GameDeveloperClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Game<T extends Prisma.GameDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.GameDefaultArgs<ExtArgs>>): Prisma.Prisma__GameClient<runtime.Types.Result.GetResult<Prisma.$GamePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the GameDeveloper model
 */
export interface GameDeveloperFieldRefs {
  readonly id: Prisma.FieldRef<"GameDeveloper", 'String'>
  readonly name: Prisma.FieldRef<"GameDeveloper", 'String'>
  readonly description: Prisma.FieldRef<"GameDeveloper", 'String'>
  readonly imageUrl: Prisma.FieldRef<"GameDeveloper", 'String'>
  readonly instagramUrl: Prisma.FieldRef<"GameDeveloper", 'String'>
  readonly linkedInUrl: Prisma.FieldRef<"GameDeveloper", 'String'>
  readonly gameId: Prisma.FieldRef<"GameDeveloper", 'String'>
  readonly createdAt: Prisma.FieldRef<"GameDeveloper", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"GameDeveloper", 'DateTime'>
}
    

// Custom InputTypes
/**
 * GameDeveloper findUnique
 */
export type GameDeveloperFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameDeveloper
   */
  select?: Prisma.GameDeveloperSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GameDeveloper
   */
  omit?: Prisma.GameDeveloperOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameDeveloperInclude<ExtArgs> | null
  /**
   * Filter, which GameDeveloper to fetch.
   */
  where: Prisma.GameDeveloperWhereUniqueInput
}

/**
 * GameDeveloper findUniqueOrThrow
 */
export type GameDeveloperFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameDeveloper
   */
  select?: Prisma.GameDeveloperSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GameDeveloper
   */
  omit?: Prisma.GameDeveloperOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameDeveloperInclude<ExtArgs> | null
  /**
   * Filter, which GameDeveloper to fetch.
   */
  where: Prisma.GameDeveloperWhereUniqueInput
}

/**
 * GameDeveloper findFirst
 */
export type GameDeveloperFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameDeveloper
   */
  select?: Prisma.GameDeveloperSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GameDeveloper
   */
  omit?: Prisma.GameDeveloperOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameDeveloperInclude<ExtArgs> | null
  /**
   * Filter, which GameDeveloper to fetch.
   */
  where?: Prisma.GameDeveloperWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of GameDevelopers to fetch.
   */
  orderBy?: Prisma.GameDeveloperOrderByWithRelationInput | Prisma.GameDeveloperOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for GameDevelopers.
   */
  cursor?: Prisma.GameDeveloperWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` GameDevelopers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` GameDevelopers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of GameDevelopers.
   */
  distinct?: Prisma.GameDeveloperScalarFieldEnum | Prisma.GameDeveloperScalarFieldEnum[]
}

/**
 * GameDeveloper findFirstOrThrow
 */
export type GameDeveloperFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameDeveloper
   */
  select?: Prisma.GameDeveloperSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GameDeveloper
   */
  omit?: Prisma.GameDeveloperOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameDeveloperInclude<ExtArgs> | null
  /**
   * Filter, which GameDeveloper to fetch.
   */
  where?: Prisma.GameDeveloperWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of GameDevelopers to fetch.
   */
  orderBy?: Prisma.GameDeveloperOrderByWithRelationInput | Prisma.GameDeveloperOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for GameDevelopers.
   */
  cursor?: Prisma.GameDeveloperWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` GameDevelopers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` GameDevelopers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of GameDevelopers.
   */
  distinct?: Prisma.GameDeveloperScalarFieldEnum | Prisma.GameDeveloperScalarFieldEnum[]
}

/**
 * GameDeveloper findMany
 */
export type GameDeveloperFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameDeveloper
   */
  select?: Prisma.GameDeveloperSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GameDeveloper
   */
  omit?: Prisma.GameDeveloperOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameDeveloperInclude<ExtArgs> | null
  /**
   * Filter, which GameDevelopers to fetch.
   */
  where?: Prisma.GameDeveloperWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of GameDevelopers to fetch.
   */
  orderBy?: Prisma.GameDeveloperOrderByWithRelationInput | Prisma.GameDeveloperOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing GameDevelopers.
   */
  cursor?: Prisma.GameDeveloperWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` GameDevelopers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` GameDevelopers.
   */
  skip?: number
  distinct?: Prisma.GameDeveloperScalarFieldEnum | Prisma.GameDeveloperScalarFieldEnum[]
}

/**
 * GameDeveloper create
 */
export type GameDeveloperCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameDeveloper
   */
  select?: Prisma.GameDeveloperSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GameDeveloper
   */
  omit?: Prisma.GameDeveloperOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameDeveloperInclude<ExtArgs> | null
  /**
   * The data needed to create a GameDeveloper.
   */
  data: Prisma.XOR<Prisma.GameDeveloperCreateInput, Prisma.GameDeveloperUncheckedCreateInput>
}

/**
 * GameDeveloper createMany
 */
export type GameDeveloperCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many GameDevelopers.
   */
  data: Prisma.GameDeveloperCreateManyInput | Prisma.GameDeveloperCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * GameDeveloper createManyAndReturn
 */
export type GameDeveloperCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameDeveloper
   */
  select?: Prisma.GameDeveloperSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the GameDeveloper
   */
  omit?: Prisma.GameDeveloperOmit<ExtArgs> | null
  /**
   * The data used to create many GameDevelopers.
   */
  data: Prisma.GameDeveloperCreateManyInput | Prisma.GameDeveloperCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameDeveloperIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * GameDeveloper update
 */
export type GameDeveloperUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameDeveloper
   */
  select?: Prisma.GameDeveloperSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GameDeveloper
   */
  omit?: Prisma.GameDeveloperOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameDeveloperInclude<ExtArgs> | null
  /**
   * The data needed to update a GameDeveloper.
   */
  data: Prisma.XOR<Prisma.GameDeveloperUpdateInput, Prisma.GameDeveloperUncheckedUpdateInput>
  /**
   * Choose, which GameDeveloper to update.
   */
  where: Prisma.GameDeveloperWhereUniqueInput
}

/**
 * GameDeveloper updateMany
 */
export type GameDeveloperUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update GameDevelopers.
   */
  data: Prisma.XOR<Prisma.GameDeveloperUpdateManyMutationInput, Prisma.GameDeveloperUncheckedUpdateManyInput>
  /**
   * Filter which GameDevelopers to update
   */
  where?: Prisma.GameDeveloperWhereInput
  /**
   * Limit how many GameDevelopers to update.
   */
  limit?: number
}

/**
 * GameDeveloper updateManyAndReturn
 */
export type GameDeveloperUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameDeveloper
   */
  select?: Prisma.GameDeveloperSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the GameDeveloper
   */
  omit?: Prisma.GameDeveloperOmit<ExtArgs> | null
  /**
   * The data used to update GameDevelopers.
   */
  data: Prisma.XOR<Prisma.GameDeveloperUpdateManyMutationInput, Prisma.GameDeveloperUncheckedUpdateManyInput>
  /**
   * Filter which GameDevelopers to update
   */
  where?: Prisma.GameDeveloperWhereInput
  /**
   * Limit how many GameDevelopers to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameDeveloperIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * GameDeveloper upsert
 */
export type GameDeveloperUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameDeveloper
   */
  select?: Prisma.GameDeveloperSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GameDeveloper
   */
  omit?: Prisma.GameDeveloperOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameDeveloperInclude<ExtArgs> | null
  /**
   * The filter to search for the GameDeveloper to update in case it exists.
   */
  where: Prisma.GameDeveloperWhereUniqueInput
  /**
   * In case the GameDeveloper found by the `where` argument doesn't exist, create a new GameDeveloper with this data.
   */
  create: Prisma.XOR<Prisma.GameDeveloperCreateInput, Prisma.GameDeveloperUncheckedCreateInput>
  /**
   * In case the GameDeveloper was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.GameDeveloperUpdateInput, Prisma.GameDeveloperUncheckedUpdateInput>
}

/**
 * GameDeveloper delete
 */
export type GameDeveloperDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameDeveloper
   */
  select?: Prisma.GameDeveloperSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GameDeveloper
   */
  omit?: Prisma.GameDeveloperOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameDeveloperInclude<ExtArgs> | null
  /**
   * Filter which GameDeveloper to delete.
   */
  where: Prisma.GameDeveloperWhereUniqueInput
}

/**
 * GameDeveloper deleteMany
 */
export type GameDeveloperDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which GameDevelopers to delete
   */
  where?: Prisma.GameDeveloperWhereInput
  /**
   * Limit how many GameDevelopers to delete.
   */
  limit?: number
}

/**
 * GameDeveloper without action
 */
export type GameDeveloperDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameDeveloper
   */
  select?: Prisma.GameDeveloperSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GameDeveloper
   */
  omit?: Prisma.GameDeveloperOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameDeveloperInclude<ExtArgs> | null
}
