
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ProgramTask` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ProgramTask
 * 
 */
export type ProgramTaskModel = runtime.Types.Result.DefaultSelection<Prisma.$ProgramTaskPayload>

export type AggregateProgramTask = {
  _count: ProgramTaskCountAggregateOutputType | null
  _min: ProgramTaskMinAggregateOutputType | null
  _max: ProgramTaskMaxAggregateOutputType | null
}

export type ProgramTaskMinAggregateOutputType = {
  id: string | null
  title: string | null
  deadline: Date | null
  description: string | null
  guideBookUrl: string | null
  type: $Enums.PROGRAM_TASK_TYPE | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProgramTaskMaxAggregateOutputType = {
  id: string | null
  title: string | null
  deadline: Date | null
  description: string | null
  guideBookUrl: string | null
  type: $Enums.PROGRAM_TASK_TYPE | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProgramTaskCountAggregateOutputType = {
  id: number
  title: number
  deadline: number
  description: number
  guideBookUrl: number
  type: number
  createdAt: number
  updatedAt: number
  acceptedFileTypes: number
  _all: number
}


export type ProgramTaskMinAggregateInputType = {
  id?: true
  title?: true
  deadline?: true
  description?: true
  guideBookUrl?: true
  type?: true
  createdAt?: true
  updatedAt?: true
}

export type ProgramTaskMaxAggregateInputType = {
  id?: true
  title?: true
  deadline?: true
  description?: true
  guideBookUrl?: true
  type?: true
  createdAt?: true
  updatedAt?: true
}

export type ProgramTaskCountAggregateInputType = {
  id?: true
  title?: true
  deadline?: true
  description?: true
  guideBookUrl?: true
  type?: true
  createdAt?: true
  updatedAt?: true
  acceptedFileTypes?: true
  _all?: true
}

export type ProgramTaskAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProgramTask to aggregate.
   */
  where?: Prisma.ProgramTaskWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramTasks to fetch.
   */
  orderBy?: Prisma.ProgramTaskOrderByWithRelationInput | Prisma.ProgramTaskOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ProgramTaskWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramTasks from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramTasks.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ProgramTasks
  **/
  _count?: true | ProgramTaskCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProgramTaskMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProgramTaskMaxAggregateInputType
}

export type GetProgramTaskAggregateType<T extends ProgramTaskAggregateArgs> = {
      [P in keyof T & keyof AggregateProgramTask]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProgramTask[P]>
    : Prisma.GetScalarType<T[P], AggregateProgramTask[P]>
}




export type ProgramTaskGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProgramTaskWhereInput
  orderBy?: Prisma.ProgramTaskOrderByWithAggregationInput | Prisma.ProgramTaskOrderByWithAggregationInput[]
  by: Prisma.ProgramTaskScalarFieldEnum[] | Prisma.ProgramTaskScalarFieldEnum
  having?: Prisma.ProgramTaskScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProgramTaskCountAggregateInputType | true
  _min?: ProgramTaskMinAggregateInputType
  _max?: ProgramTaskMaxAggregateInputType
}

export type ProgramTaskGroupByOutputType = {
  id: string
  title: string
  deadline: Date
  description: string
  guideBookUrl: string | null
  type: $Enums.PROGRAM_TASK_TYPE
  createdAt: Date
  updatedAt: Date
  acceptedFileTypes: $Enums.FILE_TYPE[]
  _count: ProgramTaskCountAggregateOutputType | null
  _min: ProgramTaskMinAggregateOutputType | null
  _max: ProgramTaskMaxAggregateOutputType | null
}

type GetProgramTaskGroupByPayload<T extends ProgramTaskGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProgramTaskGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProgramTaskGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProgramTaskGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProgramTaskGroupByOutputType[P]>
      }
    >
  > 



export type ProgramTaskWhereInput = {
  AND?: Prisma.ProgramTaskWhereInput | Prisma.ProgramTaskWhereInput[]
  OR?: Prisma.ProgramTaskWhereInput[]
  NOT?: Prisma.ProgramTaskWhereInput | Prisma.ProgramTaskWhereInput[]
  id?: Prisma.StringFilter<"ProgramTask"> | string
  title?: Prisma.StringFilter<"ProgramTask"> | string
  deadline?: Prisma.DateTimeFilter<"ProgramTask"> | Date | string
  description?: Prisma.StringFilter<"ProgramTask"> | string
  guideBookUrl?: Prisma.StringNullableFilter<"ProgramTask"> | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFilter<"ProgramTask"> | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFilter<"ProgramTask"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProgramTask"> | Date | string
  acceptedFileTypes?: Prisma.EnumFILE_TYPENullableListFilter<"ProgramTask">
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionListRelationFilter
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionListRelationFilter
  Program?: Prisma.ProgramListRelationFilter
}

export type ProgramTaskOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  deadline?: Prisma.SortOrder
  description?: Prisma.SortOrder
  guideBookUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  type?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  acceptedFileTypes?: Prisma.SortOrder
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionOrderByRelationAggregateInput
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionOrderByRelationAggregateInput
  Program?: Prisma.ProgramOrderByRelationAggregateInput
}

export type ProgramTaskWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ProgramTaskWhereInput | Prisma.ProgramTaskWhereInput[]
  OR?: Prisma.ProgramTaskWhereInput[]
  NOT?: Prisma.ProgramTaskWhereInput | Prisma.ProgramTaskWhereInput[]
  title?: Prisma.StringFilter<"ProgramTask"> | string
  deadline?: Prisma.DateTimeFilter<"ProgramTask"> | Date | string
  description?: Prisma.StringFilter<"ProgramTask"> | string
  guideBookUrl?: Prisma.StringNullableFilter<"ProgramTask"> | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFilter<"ProgramTask"> | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFilter<"ProgramTask"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProgramTask"> | Date | string
  acceptedFileTypes?: Prisma.EnumFILE_TYPENullableListFilter<"ProgramTask">
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionListRelationFilter
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionListRelationFilter
  Program?: Prisma.ProgramListRelationFilter
}, "id">

export type ProgramTaskOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  deadline?: Prisma.SortOrder
  description?: Prisma.SortOrder
  guideBookUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  type?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  acceptedFileTypes?: Prisma.SortOrder
  _count?: Prisma.ProgramTaskCountOrderByAggregateInput
  _max?: Prisma.ProgramTaskMaxOrderByAggregateInput
  _min?: Prisma.ProgramTaskMinOrderByAggregateInput
}

export type ProgramTaskScalarWhereWithAggregatesInput = {
  AND?: Prisma.ProgramTaskScalarWhereWithAggregatesInput | Prisma.ProgramTaskScalarWhereWithAggregatesInput[]
  OR?: Prisma.ProgramTaskScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ProgramTaskScalarWhereWithAggregatesInput | Prisma.ProgramTaskScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ProgramTask"> | string
  title?: Prisma.StringWithAggregatesFilter<"ProgramTask"> | string
  deadline?: Prisma.DateTimeWithAggregatesFilter<"ProgramTask"> | Date | string
  description?: Prisma.StringWithAggregatesFilter<"ProgramTask"> | string
  guideBookUrl?: Prisma.StringNullableWithAggregatesFilter<"ProgramTask"> | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEWithAggregatesFilter<"ProgramTask"> | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ProgramTask"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ProgramTask"> | Date | string
  acceptedFileTypes?: Prisma.EnumFILE_TYPENullableListFilter<"ProgramTask">
}

export type ProgramTaskCreateInput = {
  id: string
  title: string
  deadline: Date | string
  description: string
  guideBookUrl?: string | null
  type?: $Enums.PROGRAM_TASK_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  acceptedFileTypes?: Prisma.ProgramTaskCreateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionCreateNestedManyWithoutProgramTaskInput
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionCreateNestedManyWithoutProgramTaskInput
  Program?: Prisma.ProgramCreateNestedManyWithoutProgramTaskInput
}

export type ProgramTaskUncheckedCreateInput = {
  id: string
  title: string
  deadline: Date | string
  description: string
  guideBookUrl?: string | null
  type?: $Enums.PROGRAM_TASK_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  acceptedFileTypes?: Prisma.ProgramTaskCreateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionUncheckedCreateNestedManyWithoutProgramTaskInput
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionUncheckedCreateNestedManyWithoutProgramTaskInput
  Program?: Prisma.ProgramUncheckedCreateNestedManyWithoutProgramTaskInput
}

export type ProgramTaskUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  deadline?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  guideBookUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFieldUpdateOperationsInput | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedFileTypes?: Prisma.ProgramTaskUpdateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionUpdateManyWithoutProgramTaskNestedInput
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionUpdateManyWithoutProgramTaskNestedInput
  Program?: Prisma.ProgramUpdateManyWithoutProgramTaskNestedInput
}

export type ProgramTaskUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  deadline?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  guideBookUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFieldUpdateOperationsInput | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedFileTypes?: Prisma.ProgramTaskUpdateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionUncheckedUpdateManyWithoutProgramTaskNestedInput
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionUncheckedUpdateManyWithoutProgramTaskNestedInput
  Program?: Prisma.ProgramUncheckedUpdateManyWithoutProgramTaskNestedInput
}

export type ProgramTaskCreateManyInput = {
  id: string
  title: string
  deadline: Date | string
  description: string
  guideBookUrl?: string | null
  type?: $Enums.PROGRAM_TASK_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  acceptedFileTypes?: Prisma.ProgramTaskCreateacceptedFileTypesInput | $Enums.FILE_TYPE[]
}

export type ProgramTaskUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  deadline?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  guideBookUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFieldUpdateOperationsInput | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedFileTypes?: Prisma.ProgramTaskUpdateacceptedFileTypesInput | $Enums.FILE_TYPE[]
}

export type ProgramTaskUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  deadline?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  guideBookUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFieldUpdateOperationsInput | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedFileTypes?: Prisma.ProgramTaskUpdateacceptedFileTypesInput | $Enums.FILE_TYPE[]
}

export type ProgramTaskListRelationFilter = {
  every?: Prisma.ProgramTaskWhereInput
  some?: Prisma.ProgramTaskWhereInput
  none?: Prisma.ProgramTaskWhereInput
}

export type ProgramTaskOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type EnumFILE_TYPENullableListFilter<$PrismaModel = never> = {
  equals?: $Enums.FILE_TYPE[] | Prisma.ListEnumFILE_TYPEFieldRefInput<$PrismaModel> | null
  has?: $Enums.FILE_TYPE | Prisma.EnumFILE_TYPEFieldRefInput<$PrismaModel> | null
  hasEvery?: $Enums.FILE_TYPE[] | Prisma.ListEnumFILE_TYPEFieldRefInput<$PrismaModel>
  hasSome?: $Enums.FILE_TYPE[] | Prisma.ListEnumFILE_TYPEFieldRefInput<$PrismaModel>
  isEmpty?: boolean
}

export type ProgramTaskCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  deadline?: Prisma.SortOrder
  description?: Prisma.SortOrder
  guideBookUrl?: Prisma.SortOrder
  type?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  acceptedFileTypes?: Prisma.SortOrder
}

export type ProgramTaskMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  deadline?: Prisma.SortOrder
  description?: Prisma.SortOrder
  guideBookUrl?: Prisma.SortOrder
  type?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProgramTaskMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  deadline?: Prisma.SortOrder
  description?: Prisma.SortOrder
  guideBookUrl?: Prisma.SortOrder
  type?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProgramTaskScalarRelationFilter = {
  is?: Prisma.ProgramTaskWhereInput
  isNot?: Prisma.ProgramTaskWhereInput
}

export type ProgramTaskCreateNestedManyWithoutProgramInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramInput> | Prisma.ProgramTaskCreateWithoutProgramInput[] | Prisma.ProgramTaskUncheckedCreateWithoutProgramInput[]
  connectOrCreate?: Prisma.ProgramTaskCreateOrConnectWithoutProgramInput | Prisma.ProgramTaskCreateOrConnectWithoutProgramInput[]
  connect?: Prisma.ProgramTaskWhereUniqueInput | Prisma.ProgramTaskWhereUniqueInput[]
}

export type ProgramTaskUncheckedCreateNestedManyWithoutProgramInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramInput> | Prisma.ProgramTaskCreateWithoutProgramInput[] | Prisma.ProgramTaskUncheckedCreateWithoutProgramInput[]
  connectOrCreate?: Prisma.ProgramTaskCreateOrConnectWithoutProgramInput | Prisma.ProgramTaskCreateOrConnectWithoutProgramInput[]
  connect?: Prisma.ProgramTaskWhereUniqueInput | Prisma.ProgramTaskWhereUniqueInput[]
}

export type ProgramTaskUpdateManyWithoutProgramNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramInput> | Prisma.ProgramTaskCreateWithoutProgramInput[] | Prisma.ProgramTaskUncheckedCreateWithoutProgramInput[]
  connectOrCreate?: Prisma.ProgramTaskCreateOrConnectWithoutProgramInput | Prisma.ProgramTaskCreateOrConnectWithoutProgramInput[]
  upsert?: Prisma.ProgramTaskUpsertWithWhereUniqueWithoutProgramInput | Prisma.ProgramTaskUpsertWithWhereUniqueWithoutProgramInput[]
  set?: Prisma.ProgramTaskWhereUniqueInput | Prisma.ProgramTaskWhereUniqueInput[]
  disconnect?: Prisma.ProgramTaskWhereUniqueInput | Prisma.ProgramTaskWhereUniqueInput[]
  delete?: Prisma.ProgramTaskWhereUniqueInput | Prisma.ProgramTaskWhereUniqueInput[]
  connect?: Prisma.ProgramTaskWhereUniqueInput | Prisma.ProgramTaskWhereUniqueInput[]
  update?: Prisma.ProgramTaskUpdateWithWhereUniqueWithoutProgramInput | Prisma.ProgramTaskUpdateWithWhereUniqueWithoutProgramInput[]
  updateMany?: Prisma.ProgramTaskUpdateManyWithWhereWithoutProgramInput | Prisma.ProgramTaskUpdateManyWithWhereWithoutProgramInput[]
  deleteMany?: Prisma.ProgramTaskScalarWhereInput | Prisma.ProgramTaskScalarWhereInput[]
}

export type ProgramTaskUncheckedUpdateManyWithoutProgramNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramInput> | Prisma.ProgramTaskCreateWithoutProgramInput[] | Prisma.ProgramTaskUncheckedCreateWithoutProgramInput[]
  connectOrCreate?: Prisma.ProgramTaskCreateOrConnectWithoutProgramInput | Prisma.ProgramTaskCreateOrConnectWithoutProgramInput[]
  upsert?: Prisma.ProgramTaskUpsertWithWhereUniqueWithoutProgramInput | Prisma.ProgramTaskUpsertWithWhereUniqueWithoutProgramInput[]
  set?: Prisma.ProgramTaskWhereUniqueInput | Prisma.ProgramTaskWhereUniqueInput[]
  disconnect?: Prisma.ProgramTaskWhereUniqueInput | Prisma.ProgramTaskWhereUniqueInput[]
  delete?: Prisma.ProgramTaskWhereUniqueInput | Prisma.ProgramTaskWhereUniqueInput[]
  connect?: Prisma.ProgramTaskWhereUniqueInput | Prisma.ProgramTaskWhereUniqueInput[]
  update?: Prisma.ProgramTaskUpdateWithWhereUniqueWithoutProgramInput | Prisma.ProgramTaskUpdateWithWhereUniqueWithoutProgramInput[]
  updateMany?: Prisma.ProgramTaskUpdateManyWithWhereWithoutProgramInput | Prisma.ProgramTaskUpdateManyWithWhereWithoutProgramInput[]
  deleteMany?: Prisma.ProgramTaskScalarWhereInput | Prisma.ProgramTaskScalarWhereInput[]
}

export type ProgramTaskCreateacceptedFileTypesInput = {
  set: $Enums.FILE_TYPE[]
}

export type EnumPROGRAM_TASK_TYPEFieldUpdateOperationsInput = {
  set?: $Enums.PROGRAM_TASK_TYPE
}

export type ProgramTaskUpdateacceptedFileTypesInput = {
  set?: $Enums.FILE_TYPE[]
  push?: $Enums.FILE_TYPE | $Enums.FILE_TYPE[]
}

export type ProgramTaskCreateNestedOneWithoutProgramTaskExtraDescriptionInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramTaskExtraDescriptionInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramTaskExtraDescriptionInput>
  connectOrCreate?: Prisma.ProgramTaskCreateOrConnectWithoutProgramTaskExtraDescriptionInput
  connect?: Prisma.ProgramTaskWhereUniqueInput
}

export type ProgramTaskUpdateOneRequiredWithoutProgramTaskExtraDescriptionNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramTaskExtraDescriptionInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramTaskExtraDescriptionInput>
  connectOrCreate?: Prisma.ProgramTaskCreateOrConnectWithoutProgramTaskExtraDescriptionInput
  upsert?: Prisma.ProgramTaskUpsertWithoutProgramTaskExtraDescriptionInput
  connect?: Prisma.ProgramTaskWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProgramTaskUpdateToOneWithWhereWithoutProgramTaskExtraDescriptionInput, Prisma.ProgramTaskUpdateWithoutProgramTaskExtraDescriptionInput>, Prisma.ProgramTaskUncheckedUpdateWithoutProgramTaskExtraDescriptionInput>
}

export type ProgramTaskCreateNestedOneWithoutProgramTaskSubmissionInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramTaskSubmissionInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramTaskSubmissionInput>
  connectOrCreate?: Prisma.ProgramTaskCreateOrConnectWithoutProgramTaskSubmissionInput
  connect?: Prisma.ProgramTaskWhereUniqueInput
}

export type ProgramTaskUpdateOneRequiredWithoutProgramTaskSubmissionNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramTaskSubmissionInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramTaskSubmissionInput>
  connectOrCreate?: Prisma.ProgramTaskCreateOrConnectWithoutProgramTaskSubmissionInput
  upsert?: Prisma.ProgramTaskUpsertWithoutProgramTaskSubmissionInput
  connect?: Prisma.ProgramTaskWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProgramTaskUpdateToOneWithWhereWithoutProgramTaskSubmissionInput, Prisma.ProgramTaskUpdateWithoutProgramTaskSubmissionInput>, Prisma.ProgramTaskUncheckedUpdateWithoutProgramTaskSubmissionInput>
}

export type ProgramTaskCreateWithoutProgramInput = {
  id: string
  title: string
  deadline: Date | string
  description: string
  guideBookUrl?: string | null
  type?: $Enums.PROGRAM_TASK_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  acceptedFileTypes?: Prisma.ProgramTaskCreateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionCreateNestedManyWithoutProgramTaskInput
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionCreateNestedManyWithoutProgramTaskInput
}

export type ProgramTaskUncheckedCreateWithoutProgramInput = {
  id: string
  title: string
  deadline: Date | string
  description: string
  guideBookUrl?: string | null
  type?: $Enums.PROGRAM_TASK_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  acceptedFileTypes?: Prisma.ProgramTaskCreateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionUncheckedCreateNestedManyWithoutProgramTaskInput
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionUncheckedCreateNestedManyWithoutProgramTaskInput
}

export type ProgramTaskCreateOrConnectWithoutProgramInput = {
  where: Prisma.ProgramTaskWhereUniqueInput
  create: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramInput>
}

export type ProgramTaskUpsertWithWhereUniqueWithoutProgramInput = {
  where: Prisma.ProgramTaskWhereUniqueInput
  update: Prisma.XOR<Prisma.ProgramTaskUpdateWithoutProgramInput, Prisma.ProgramTaskUncheckedUpdateWithoutProgramInput>
  create: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramInput>
}

export type ProgramTaskUpdateWithWhereUniqueWithoutProgramInput = {
  where: Prisma.ProgramTaskWhereUniqueInput
  data: Prisma.XOR<Prisma.ProgramTaskUpdateWithoutProgramInput, Prisma.ProgramTaskUncheckedUpdateWithoutProgramInput>
}

export type ProgramTaskUpdateManyWithWhereWithoutProgramInput = {
  where: Prisma.ProgramTaskScalarWhereInput
  data: Prisma.XOR<Prisma.ProgramTaskUpdateManyMutationInput, Prisma.ProgramTaskUncheckedUpdateManyWithoutProgramInput>
}

export type ProgramTaskScalarWhereInput = {
  AND?: Prisma.ProgramTaskScalarWhereInput | Prisma.ProgramTaskScalarWhereInput[]
  OR?: Prisma.ProgramTaskScalarWhereInput[]
  NOT?: Prisma.ProgramTaskScalarWhereInput | Prisma.ProgramTaskScalarWhereInput[]
  id?: Prisma.StringFilter<"ProgramTask"> | string
  title?: Prisma.StringFilter<"ProgramTask"> | string
  deadline?: Prisma.DateTimeFilter<"ProgramTask"> | Date | string
  description?: Prisma.StringFilter<"ProgramTask"> | string
  guideBookUrl?: Prisma.StringNullableFilter<"ProgramTask"> | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFilter<"ProgramTask"> | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFilter<"ProgramTask"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProgramTask"> | Date | string
  acceptedFileTypes?: Prisma.EnumFILE_TYPENullableListFilter<"ProgramTask">
}

export type ProgramTaskCreateWithoutProgramTaskExtraDescriptionInput = {
  id: string
  title: string
  deadline: Date | string
  description: string
  guideBookUrl?: string | null
  type?: $Enums.PROGRAM_TASK_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  acceptedFileTypes?: Prisma.ProgramTaskCreateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionCreateNestedManyWithoutProgramTaskInput
  Program?: Prisma.ProgramCreateNestedManyWithoutProgramTaskInput
}

export type ProgramTaskUncheckedCreateWithoutProgramTaskExtraDescriptionInput = {
  id: string
  title: string
  deadline: Date | string
  description: string
  guideBookUrl?: string | null
  type?: $Enums.PROGRAM_TASK_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  acceptedFileTypes?: Prisma.ProgramTaskCreateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionUncheckedCreateNestedManyWithoutProgramTaskInput
  Program?: Prisma.ProgramUncheckedCreateNestedManyWithoutProgramTaskInput
}

export type ProgramTaskCreateOrConnectWithoutProgramTaskExtraDescriptionInput = {
  where: Prisma.ProgramTaskWhereUniqueInput
  create: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramTaskExtraDescriptionInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramTaskExtraDescriptionInput>
}

export type ProgramTaskUpsertWithoutProgramTaskExtraDescriptionInput = {
  update: Prisma.XOR<Prisma.ProgramTaskUpdateWithoutProgramTaskExtraDescriptionInput, Prisma.ProgramTaskUncheckedUpdateWithoutProgramTaskExtraDescriptionInput>
  create: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramTaskExtraDescriptionInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramTaskExtraDescriptionInput>
  where?: Prisma.ProgramTaskWhereInput
}

export type ProgramTaskUpdateToOneWithWhereWithoutProgramTaskExtraDescriptionInput = {
  where?: Prisma.ProgramTaskWhereInput
  data: Prisma.XOR<Prisma.ProgramTaskUpdateWithoutProgramTaskExtraDescriptionInput, Prisma.ProgramTaskUncheckedUpdateWithoutProgramTaskExtraDescriptionInput>
}

export type ProgramTaskUpdateWithoutProgramTaskExtraDescriptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  deadline?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  guideBookUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFieldUpdateOperationsInput | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedFileTypes?: Prisma.ProgramTaskUpdateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionUpdateManyWithoutProgramTaskNestedInput
  Program?: Prisma.ProgramUpdateManyWithoutProgramTaskNestedInput
}

export type ProgramTaskUncheckedUpdateWithoutProgramTaskExtraDescriptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  deadline?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  guideBookUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFieldUpdateOperationsInput | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedFileTypes?: Prisma.ProgramTaskUpdateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionUncheckedUpdateManyWithoutProgramTaskNestedInput
  Program?: Prisma.ProgramUncheckedUpdateManyWithoutProgramTaskNestedInput
}

export type ProgramTaskCreateWithoutProgramTaskSubmissionInput = {
  id: string
  title: string
  deadline: Date | string
  description: string
  guideBookUrl?: string | null
  type?: $Enums.PROGRAM_TASK_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  acceptedFileTypes?: Prisma.ProgramTaskCreateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionCreateNestedManyWithoutProgramTaskInput
  Program?: Prisma.ProgramCreateNestedManyWithoutProgramTaskInput
}

export type ProgramTaskUncheckedCreateWithoutProgramTaskSubmissionInput = {
  id: string
  title: string
  deadline: Date | string
  description: string
  guideBookUrl?: string | null
  type?: $Enums.PROGRAM_TASK_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  acceptedFileTypes?: Prisma.ProgramTaskCreateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionUncheckedCreateNestedManyWithoutProgramTaskInput
  Program?: Prisma.ProgramUncheckedCreateNestedManyWithoutProgramTaskInput
}

export type ProgramTaskCreateOrConnectWithoutProgramTaskSubmissionInput = {
  where: Prisma.ProgramTaskWhereUniqueInput
  create: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramTaskSubmissionInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramTaskSubmissionInput>
}

export type ProgramTaskUpsertWithoutProgramTaskSubmissionInput = {
  update: Prisma.XOR<Prisma.ProgramTaskUpdateWithoutProgramTaskSubmissionInput, Prisma.ProgramTaskUncheckedUpdateWithoutProgramTaskSubmissionInput>
  create: Prisma.XOR<Prisma.ProgramTaskCreateWithoutProgramTaskSubmissionInput, Prisma.ProgramTaskUncheckedCreateWithoutProgramTaskSubmissionInput>
  where?: Prisma.ProgramTaskWhereInput
}

export type ProgramTaskUpdateToOneWithWhereWithoutProgramTaskSubmissionInput = {
  where?: Prisma.ProgramTaskWhereInput
  data: Prisma.XOR<Prisma.ProgramTaskUpdateWithoutProgramTaskSubmissionInput, Prisma.ProgramTaskUncheckedUpdateWithoutProgramTaskSubmissionInput>
}

export type ProgramTaskUpdateWithoutProgramTaskSubmissionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  deadline?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  guideBookUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFieldUpdateOperationsInput | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedFileTypes?: Prisma.ProgramTaskUpdateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionUpdateManyWithoutProgramTaskNestedInput
  Program?: Prisma.ProgramUpdateManyWithoutProgramTaskNestedInput
}

export type ProgramTaskUncheckedUpdateWithoutProgramTaskSubmissionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  deadline?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  guideBookUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFieldUpdateOperationsInput | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedFileTypes?: Prisma.ProgramTaskUpdateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionUncheckedUpdateManyWithoutProgramTaskNestedInput
  Program?: Prisma.ProgramUncheckedUpdateManyWithoutProgramTaskNestedInput
}

export type ProgramTaskUpdateWithoutProgramInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  deadline?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  guideBookUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFieldUpdateOperationsInput | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedFileTypes?: Prisma.ProgramTaskUpdateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionUpdateManyWithoutProgramTaskNestedInput
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionUpdateManyWithoutProgramTaskNestedInput
}

export type ProgramTaskUncheckedUpdateWithoutProgramInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  deadline?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  guideBookUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFieldUpdateOperationsInput | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedFileTypes?: Prisma.ProgramTaskUpdateacceptedFileTypesInput | $Enums.FILE_TYPE[]
  ProgramTaskExtraDescription?: Prisma.ProgramTaskExtraDescriptionUncheckedUpdateManyWithoutProgramTaskNestedInput
  ProgramTaskSubmission?: Prisma.ProgramTaskSubmissionUncheckedUpdateManyWithoutProgramTaskNestedInput
}

export type ProgramTaskUncheckedUpdateManyWithoutProgramInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  deadline?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  guideBookUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  type?: Prisma.EnumPROGRAM_TASK_TYPEFieldUpdateOperationsInput | $Enums.PROGRAM_TASK_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedFileTypes?: Prisma.ProgramTaskUpdateacceptedFileTypesInput | $Enums.FILE_TYPE[]
}


/**
 * Count Type ProgramTaskCountOutputType
 */

export type ProgramTaskCountOutputType = {
  ProgramTaskExtraDescription: number
  ProgramTaskSubmission: number
  Program: number
}

export type ProgramTaskCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ProgramTaskExtraDescription?: boolean | ProgramTaskCountOutputTypeCountProgramTaskExtraDescriptionArgs
  ProgramTaskSubmission?: boolean | ProgramTaskCountOutputTypeCountProgramTaskSubmissionArgs
  Program?: boolean | ProgramTaskCountOutputTypeCountProgramArgs
}

/**
 * ProgramTaskCountOutputType without action
 */
export type ProgramTaskCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskCountOutputType
   */
  select?: Prisma.ProgramTaskCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ProgramTaskCountOutputType without action
 */
export type ProgramTaskCountOutputTypeCountProgramTaskExtraDescriptionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProgramTaskExtraDescriptionWhereInput
}

/**
 * ProgramTaskCountOutputType without action
 */
export type ProgramTaskCountOutputTypeCountProgramTaskSubmissionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProgramTaskSubmissionWhereInput
}

/**
 * ProgramTaskCountOutputType without action
 */
export type ProgramTaskCountOutputTypeCountProgramArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProgramWhereInput
}


export type ProgramTaskSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  deadline?: boolean
  description?: boolean
  guideBookUrl?: boolean
  type?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  acceptedFileTypes?: boolean
  ProgramTaskExtraDescription?: boolean | Prisma.ProgramTask$ProgramTaskExtraDescriptionArgs<ExtArgs>
  ProgramTaskSubmission?: boolean | Prisma.ProgramTask$ProgramTaskSubmissionArgs<ExtArgs>
  Program?: boolean | Prisma.ProgramTask$ProgramArgs<ExtArgs>
  _count?: boolean | Prisma.ProgramTaskCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["programTask"]>

export type ProgramTaskSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  deadline?: boolean
  description?: boolean
  guideBookUrl?: boolean
  type?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  acceptedFileTypes?: boolean
}, ExtArgs["result"]["programTask"]>

export type ProgramTaskSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  deadline?: boolean
  description?: boolean
  guideBookUrl?: boolean
  type?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  acceptedFileTypes?: boolean
}, ExtArgs["result"]["programTask"]>

export type ProgramTaskSelectScalar = {
  id?: boolean
  title?: boolean
  deadline?: boolean
  description?: boolean
  guideBookUrl?: boolean
  type?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  acceptedFileTypes?: boolean
}

export type ProgramTaskOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "title" | "deadline" | "description" | "guideBookUrl" | "type" | "createdAt" | "updatedAt" | "acceptedFileTypes", ExtArgs["result"]["programTask"]>
export type ProgramTaskInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ProgramTaskExtraDescription?: boolean | Prisma.ProgramTask$ProgramTaskExtraDescriptionArgs<ExtArgs>
  ProgramTaskSubmission?: boolean | Prisma.ProgramTask$ProgramTaskSubmissionArgs<ExtArgs>
  Program?: boolean | Prisma.ProgramTask$ProgramArgs<ExtArgs>
  _count?: boolean | Prisma.ProgramTaskCountOutputTypeDefaultArgs<ExtArgs>
}
export type ProgramTaskIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type ProgramTaskIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $ProgramTaskPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ProgramTask"
  objects: {
    ProgramTaskExtraDescription: Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>[]
    ProgramTaskSubmission: Prisma.$ProgramTaskSubmissionPayload<ExtArgs>[]
    Program: Prisma.$ProgramPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    title: string
    deadline: Date
    description: string
    guideBookUrl: string | null
    type: $Enums.PROGRAM_TASK_TYPE
    createdAt: Date
    updatedAt: Date
    acceptedFileTypes: $Enums.FILE_TYPE[]
  }, ExtArgs["result"]["programTask"]>
  composites: {}
}

export type ProgramTaskGetPayload<S extends boolean | null | undefined | ProgramTaskDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload, S>

export type ProgramTaskCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ProgramTaskFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ProgramTaskCountAggregateInputType | true
  }

export interface ProgramTaskDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProgramTask'], meta: { name: 'ProgramTask' } }
  /**
   * Find zero or one ProgramTask that matches the filter.
   * @param {ProgramTaskFindUniqueArgs} args - Arguments to find a ProgramTask
   * @example
   * // Get one ProgramTask
   * const programTask = await prisma.programTask.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ProgramTaskFindUniqueArgs>(args: Prisma.SelectSubset<T, ProgramTaskFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ProgramTask that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ProgramTaskFindUniqueOrThrowArgs} args - Arguments to find a ProgramTask
   * @example
   * // Get one ProgramTask
   * const programTask = await prisma.programTask.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ProgramTaskFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ProgramTaskFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProgramTask that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskFindFirstArgs} args - Arguments to find a ProgramTask
   * @example
   * // Get one ProgramTask
   * const programTask = await prisma.programTask.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ProgramTaskFindFirstArgs>(args?: Prisma.SelectSubset<T, ProgramTaskFindFirstArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProgramTask that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskFindFirstOrThrowArgs} args - Arguments to find a ProgramTask
   * @example
   * // Get one ProgramTask
   * const programTask = await prisma.programTask.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ProgramTaskFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ProgramTaskFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ProgramTasks that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ProgramTasks
   * const programTasks = await prisma.programTask.findMany()
   * 
   * // Get first 10 ProgramTasks
   * const programTasks = await prisma.programTask.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const programTaskWithIdOnly = await prisma.programTask.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ProgramTaskFindManyArgs>(args?: Prisma.SelectSubset<T, ProgramTaskFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ProgramTask.
   * @param {ProgramTaskCreateArgs} args - Arguments to create a ProgramTask.
   * @example
   * // Create one ProgramTask
   * const ProgramTask = await prisma.programTask.create({
   *   data: {
   *     // ... data to create a ProgramTask
   *   }
   * })
   * 
   */
  create<T extends ProgramTaskCreateArgs>(args: Prisma.SelectSubset<T, ProgramTaskCreateArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ProgramTasks.
   * @param {ProgramTaskCreateManyArgs} args - Arguments to create many ProgramTasks.
   * @example
   * // Create many ProgramTasks
   * const programTask = await prisma.programTask.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ProgramTaskCreateManyArgs>(args?: Prisma.SelectSubset<T, ProgramTaskCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ProgramTasks and returns the data saved in the database.
   * @param {ProgramTaskCreateManyAndReturnArgs} args - Arguments to create many ProgramTasks.
   * @example
   * // Create many ProgramTasks
   * const programTask = await prisma.programTask.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ProgramTasks and only return the `id`
   * const programTaskWithIdOnly = await prisma.programTask.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ProgramTaskCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ProgramTaskCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ProgramTask.
   * @param {ProgramTaskDeleteArgs} args - Arguments to delete one ProgramTask.
   * @example
   * // Delete one ProgramTask
   * const ProgramTask = await prisma.programTask.delete({
   *   where: {
   *     // ... filter to delete one ProgramTask
   *   }
   * })
   * 
   */
  delete<T extends ProgramTaskDeleteArgs>(args: Prisma.SelectSubset<T, ProgramTaskDeleteArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ProgramTask.
   * @param {ProgramTaskUpdateArgs} args - Arguments to update one ProgramTask.
   * @example
   * // Update one ProgramTask
   * const programTask = await prisma.programTask.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ProgramTaskUpdateArgs>(args: Prisma.SelectSubset<T, ProgramTaskUpdateArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ProgramTasks.
   * @param {ProgramTaskDeleteManyArgs} args - Arguments to filter ProgramTasks to delete.
   * @example
   * // Delete a few ProgramTasks
   * const { count } = await prisma.programTask.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ProgramTaskDeleteManyArgs>(args?: Prisma.SelectSubset<T, ProgramTaskDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProgramTasks.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ProgramTasks
   * const programTask = await prisma.programTask.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ProgramTaskUpdateManyArgs>(args: Prisma.SelectSubset<T, ProgramTaskUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProgramTasks and returns the data updated in the database.
   * @param {ProgramTaskUpdateManyAndReturnArgs} args - Arguments to update many ProgramTasks.
   * @example
   * // Update many ProgramTasks
   * const programTask = await prisma.programTask.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ProgramTasks and only return the `id`
   * const programTaskWithIdOnly = await prisma.programTask.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ProgramTaskUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ProgramTaskUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ProgramTask.
   * @param {ProgramTaskUpsertArgs} args - Arguments to update or create a ProgramTask.
   * @example
   * // Update or create a ProgramTask
   * const programTask = await prisma.programTask.upsert({
   *   create: {
   *     // ... data to create a ProgramTask
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ProgramTask we want to update
   *   }
   * })
   */
  upsert<T extends ProgramTaskUpsertArgs>(args: Prisma.SelectSubset<T, ProgramTaskUpsertArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ProgramTasks.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskCountArgs} args - Arguments to filter ProgramTasks to count.
   * @example
   * // Count the number of ProgramTasks
   * const count = await prisma.programTask.count({
   *   where: {
   *     // ... the filter for the ProgramTasks we want to count
   *   }
   * })
  **/
  count<T extends ProgramTaskCountArgs>(
    args?: Prisma.Subset<T, ProgramTaskCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProgramTaskCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ProgramTask.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProgramTaskAggregateArgs>(args: Prisma.Subset<T, ProgramTaskAggregateArgs>): Prisma.PrismaPromise<GetProgramTaskAggregateType<T>>

  /**
   * Group by ProgramTask.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ProgramTaskGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ProgramTaskGroupByArgs['orderBy'] }
      : { orderBy?: ProgramTaskGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ProgramTaskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgramTaskGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ProgramTask model
 */
readonly fields: ProgramTaskFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ProgramTask.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProgramTaskClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  ProgramTaskExtraDescription<T extends Prisma.ProgramTask$ProgramTaskExtraDescriptionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProgramTask$ProgramTaskExtraDescriptionArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  ProgramTaskSubmission<T extends Prisma.ProgramTask$ProgramTaskSubmissionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProgramTask$ProgramTaskSubmissionArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Program<T extends Prisma.ProgramTask$ProgramArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProgramTask$ProgramArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ProgramTask model
 */
export interface ProgramTaskFieldRefs {
  readonly id: Prisma.FieldRef<"ProgramTask", 'String'>
  readonly title: Prisma.FieldRef<"ProgramTask", 'String'>
  readonly deadline: Prisma.FieldRef<"ProgramTask", 'DateTime'>
  readonly description: Prisma.FieldRef<"ProgramTask", 'String'>
  readonly guideBookUrl: Prisma.FieldRef<"ProgramTask", 'String'>
  readonly type: Prisma.FieldRef<"ProgramTask", 'PROGRAM_TASK_TYPE'>
  readonly createdAt: Prisma.FieldRef<"ProgramTask", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ProgramTask", 'DateTime'>
  readonly acceptedFileTypes: Prisma.FieldRef<"ProgramTask", 'FILE_TYPE[]'>
}
    

// Custom InputTypes
/**
 * ProgramTask findUnique
 */
export type ProgramTaskFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTask
   */
  select?: Prisma.ProgramTaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTask
   */
  omit?: Prisma.ProgramTaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTask to fetch.
   */
  where: Prisma.ProgramTaskWhereUniqueInput
}

/**
 * ProgramTask findUniqueOrThrow
 */
export type ProgramTaskFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTask
   */
  select?: Prisma.ProgramTaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTask
   */
  omit?: Prisma.ProgramTaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTask to fetch.
   */
  where: Prisma.ProgramTaskWhereUniqueInput
}

/**
 * ProgramTask findFirst
 */
export type ProgramTaskFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTask
   */
  select?: Prisma.ProgramTaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTask
   */
  omit?: Prisma.ProgramTaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTask to fetch.
   */
  where?: Prisma.ProgramTaskWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramTasks to fetch.
   */
  orderBy?: Prisma.ProgramTaskOrderByWithRelationInput | Prisma.ProgramTaskOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProgramTasks.
   */
  cursor?: Prisma.ProgramTaskWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramTasks from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramTasks.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProgramTasks.
   */
  distinct?: Prisma.ProgramTaskScalarFieldEnum | Prisma.ProgramTaskScalarFieldEnum[]
}

/**
 * ProgramTask findFirstOrThrow
 */
export type ProgramTaskFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTask
   */
  select?: Prisma.ProgramTaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTask
   */
  omit?: Prisma.ProgramTaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTask to fetch.
   */
  where?: Prisma.ProgramTaskWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramTasks to fetch.
   */
  orderBy?: Prisma.ProgramTaskOrderByWithRelationInput | Prisma.ProgramTaskOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProgramTasks.
   */
  cursor?: Prisma.ProgramTaskWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramTasks from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramTasks.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProgramTasks.
   */
  distinct?: Prisma.ProgramTaskScalarFieldEnum | Prisma.ProgramTaskScalarFieldEnum[]
}

/**
 * ProgramTask findMany
 */
export type ProgramTaskFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTask
   */
  select?: Prisma.ProgramTaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTask
   */
  omit?: Prisma.ProgramTaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTasks to fetch.
   */
  where?: Prisma.ProgramTaskWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramTasks to fetch.
   */
  orderBy?: Prisma.ProgramTaskOrderByWithRelationInput | Prisma.ProgramTaskOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ProgramTasks.
   */
  cursor?: Prisma.ProgramTaskWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramTasks from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramTasks.
   */
  skip?: number
  distinct?: Prisma.ProgramTaskScalarFieldEnum | Prisma.ProgramTaskScalarFieldEnum[]
}

/**
 * ProgramTask create
 */
export type ProgramTaskCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTask
   */
  select?: Prisma.ProgramTaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTask
   */
  omit?: Prisma.ProgramTaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskInclude<ExtArgs> | null
  /**
   * The data needed to create a ProgramTask.
   */
  data: Prisma.XOR<Prisma.ProgramTaskCreateInput, Prisma.ProgramTaskUncheckedCreateInput>
}

/**
 * ProgramTask createMany
 */
export type ProgramTaskCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ProgramTasks.
   */
  data: Prisma.ProgramTaskCreateManyInput | Prisma.ProgramTaskCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ProgramTask createManyAndReturn
 */
export type ProgramTaskCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTask
   */
  select?: Prisma.ProgramTaskSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTask
   */
  omit?: Prisma.ProgramTaskOmit<ExtArgs> | null
  /**
   * The data used to create many ProgramTasks.
   */
  data: Prisma.ProgramTaskCreateManyInput | Prisma.ProgramTaskCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ProgramTask update
 */
export type ProgramTaskUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTask
   */
  select?: Prisma.ProgramTaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTask
   */
  omit?: Prisma.ProgramTaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskInclude<ExtArgs> | null
  /**
   * The data needed to update a ProgramTask.
   */
  data: Prisma.XOR<Prisma.ProgramTaskUpdateInput, Prisma.ProgramTaskUncheckedUpdateInput>
  /**
   * Choose, which ProgramTask to update.
   */
  where: Prisma.ProgramTaskWhereUniqueInput
}

/**
 * ProgramTask updateMany
 */
export type ProgramTaskUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ProgramTasks.
   */
  data: Prisma.XOR<Prisma.ProgramTaskUpdateManyMutationInput, Prisma.ProgramTaskUncheckedUpdateManyInput>
  /**
   * Filter which ProgramTasks to update
   */
  where?: Prisma.ProgramTaskWhereInput
  /**
   * Limit how many ProgramTasks to update.
   */
  limit?: number
}

/**
 * ProgramTask updateManyAndReturn
 */
export type ProgramTaskUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTask
   */
  select?: Prisma.ProgramTaskSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTask
   */
  omit?: Prisma.ProgramTaskOmit<ExtArgs> | null
  /**
   * The data used to update ProgramTasks.
   */
  data: Prisma.XOR<Prisma.ProgramTaskUpdateManyMutationInput, Prisma.ProgramTaskUncheckedUpdateManyInput>
  /**
   * Filter which ProgramTasks to update
   */
  where?: Prisma.ProgramTaskWhereInput
  /**
   * Limit how many ProgramTasks to update.
   */
  limit?: number
}

/**
 * ProgramTask upsert
 */
export type ProgramTaskUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTask
   */
  select?: Prisma.ProgramTaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTask
   */
  omit?: Prisma.ProgramTaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskInclude<ExtArgs> | null
  /**
   * The filter to search for the ProgramTask to update in case it exists.
   */
  where: Prisma.ProgramTaskWhereUniqueInput
  /**
   * In case the ProgramTask found by the `where` argument doesn't exist, create a new ProgramTask with this data.
   */
  create: Prisma.XOR<Prisma.ProgramTaskCreateInput, Prisma.ProgramTaskUncheckedCreateInput>
  /**
   * In case the ProgramTask was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ProgramTaskUpdateInput, Prisma.ProgramTaskUncheckedUpdateInput>
}

/**
 * ProgramTask delete
 */
export type ProgramTaskDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTask
   */
  select?: Prisma.ProgramTaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTask
   */
  omit?: Prisma.ProgramTaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskInclude<ExtArgs> | null
  /**
   * Filter which ProgramTask to delete.
   */
  where: Prisma.ProgramTaskWhereUniqueInput
}

/**
 * ProgramTask deleteMany
 */
export type ProgramTaskDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProgramTasks to delete
   */
  where?: Prisma.ProgramTaskWhereInput
  /**
   * Limit how many ProgramTasks to delete.
   */
  limit?: number
}

/**
 * ProgramTask.ProgramTaskExtraDescription
 */
export type ProgramTask$ProgramTaskExtraDescriptionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionInclude<ExtArgs> | null
  where?: Prisma.ProgramTaskExtraDescriptionWhereInput
  orderBy?: Prisma.ProgramTaskExtraDescriptionOrderByWithRelationInput | Prisma.ProgramTaskExtraDescriptionOrderByWithRelationInput[]
  cursor?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProgramTaskExtraDescriptionScalarFieldEnum | Prisma.ProgramTaskExtraDescriptionScalarFieldEnum[]
}

/**
 * ProgramTask.ProgramTaskSubmission
 */
export type ProgramTask$ProgramTaskSubmissionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionInclude<ExtArgs> | null
  where?: Prisma.ProgramTaskSubmissionWhereInput
  orderBy?: Prisma.ProgramTaskSubmissionOrderByWithRelationInput | Prisma.ProgramTaskSubmissionOrderByWithRelationInput[]
  cursor?: Prisma.ProgramTaskSubmissionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProgramTaskSubmissionScalarFieldEnum | Prisma.ProgramTaskSubmissionScalarFieldEnum[]
}

/**
 * ProgramTask.Program
 */
export type ProgramTask$ProgramArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
  where?: Prisma.ProgramWhereInput
  orderBy?: Prisma.ProgramOrderByWithRelationInput | Prisma.ProgramOrderByWithRelationInput[]
  cursor?: Prisma.ProgramWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProgramScalarFieldEnum | Prisma.ProgramScalarFieldEnum[]
}

/**
 * ProgramTask without action
 */
export type ProgramTaskDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTask
   */
  select?: Prisma.ProgramTaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTask
   */
  omit?: Prisma.ProgramTaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskInclude<ExtArgs> | null
}
