
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ProgramTaskSubmission` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ProgramTaskSubmission
 * 
 */
export type ProgramTaskSubmissionModel = runtime.Types.Result.DefaultSelection<Prisma.$ProgramTaskSubmissionPayload>

export type AggregateProgramTaskSubmission = {
  _count: ProgramTaskSubmissionCountAggregateOutputType | null
  _min: ProgramTaskSubmissionMinAggregateOutputType | null
  _max: ProgramTaskSubmissionMaxAggregateOutputType | null
}

export type ProgramTaskSubmissionMinAggregateOutputType = {
  id: string | null
  fileUrl: string | null
  fileName: string | null
  status: $Enums.SUBMISSION_STATUS | null
  feedback: string | null
  taskId: string | null
  teamId: string | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
  submissionForProgram: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionMaxAggregateOutputType = {
  id: string | null
  fileUrl: string | null
  fileName: string | null
  status: $Enums.SUBMISSION_STATUS | null
  feedback: string | null
  taskId: string | null
  teamId: string | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
  submissionForProgram: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionCountAggregateOutputType = {
  id: number
  fileUrl: number
  fileName: number
  status: number
  feedback: number
  taskId: number
  teamId: number
  userId: number
  createdAt: number
  updatedAt: number
  submissionForProgram: number
  _all: number
}


export type ProgramTaskSubmissionMinAggregateInputType = {
  id?: true
  fileUrl?: true
  fileName?: true
  status?: true
  feedback?: true
  taskId?: true
  teamId?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
  submissionForProgram?: true
}

export type ProgramTaskSubmissionMaxAggregateInputType = {
  id?: true
  fileUrl?: true
  fileName?: true
  status?: true
  feedback?: true
  taskId?: true
  teamId?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
  submissionForProgram?: true
}

export type ProgramTaskSubmissionCountAggregateInputType = {
  id?: true
  fileUrl?: true
  fileName?: true
  status?: true
  feedback?: true
  taskId?: true
  teamId?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
  submissionForProgram?: true
  _all?: true
}

export type ProgramTaskSubmissionAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProgramTaskSubmission to aggregate.
   */
  where?: Prisma.ProgramTaskSubmissionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramTaskSubmissions to fetch.
   */
  orderBy?: Prisma.ProgramTaskSubmissionOrderByWithRelationInput | Prisma.ProgramTaskSubmissionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ProgramTaskSubmissionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramTaskSubmissions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramTaskSubmissions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ProgramTaskSubmissions
  **/
  _count?: true | ProgramTaskSubmissionCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProgramTaskSubmissionMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProgramTaskSubmissionMaxAggregateInputType
}

export type GetProgramTaskSubmissionAggregateType<T extends ProgramTaskSubmissionAggregateArgs> = {
      [P in keyof T & keyof AggregateProgramTaskSubmission]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProgramTaskSubmission[P]>
    : Prisma.GetScalarType<T[P], AggregateProgramTaskSubmission[P]>
}




export type ProgramTaskSubmissionGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProgramTaskSubmissionWhereInput
  orderBy?: Prisma.ProgramTaskSubmissionOrderByWithAggregationInput | Prisma.ProgramTaskSubmissionOrderByWithAggregationInput[]
  by: Prisma.ProgramTaskSubmissionScalarFieldEnum[] | Prisma.ProgramTaskSubmissionScalarFieldEnum
  having?: Prisma.ProgramTaskSubmissionScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProgramTaskSubmissionCountAggregateInputType | true
  _min?: ProgramTaskSubmissionMinAggregateInputType
  _max?: ProgramTaskSubmissionMaxAggregateInputType
}

export type ProgramTaskSubmissionGroupByOutputType = {
  id: string
  fileUrl: string
  fileName: string
  status: $Enums.SUBMISSION_STATUS
  feedback: string | null
  taskId: string
  teamId: string | null
  userId: string | null
  createdAt: Date
  updatedAt: Date
  submissionForProgram: $Enums.PROGRAM_CODE | null
  _count: ProgramTaskSubmissionCountAggregateOutputType | null
  _min: ProgramTaskSubmissionMinAggregateOutputType | null
  _max: ProgramTaskSubmissionMaxAggregateOutputType | null
}

type GetProgramTaskSubmissionGroupByPayload<T extends ProgramTaskSubmissionGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProgramTaskSubmissionGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProgramTaskSubmissionGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProgramTaskSubmissionGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProgramTaskSubmissionGroupByOutputType[P]>
      }
    >
  > 



export type ProgramTaskSubmissionWhereInput = {
  AND?: Prisma.ProgramTaskSubmissionWhereInput | Prisma.ProgramTaskSubmissionWhereInput[]
  OR?: Prisma.ProgramTaskSubmissionWhereInput[]
  NOT?: Prisma.ProgramTaskSubmissionWhereInput | Prisma.ProgramTaskSubmissionWhereInput[]
  id?: Prisma.StringFilter<"ProgramTaskSubmission"> | string
  fileUrl?: Prisma.StringFilter<"ProgramTaskSubmission"> | string
  fileName?: Prisma.StringFilter<"ProgramTaskSubmission"> | string
  status?: Prisma.EnumSUBMISSION_STATUSFilter<"ProgramTaskSubmission"> | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.StringNullableFilter<"ProgramTaskSubmission"> | string | null
  taskId?: Prisma.StringFilter<"ProgramTaskSubmission"> | string
  teamId?: Prisma.StringNullableFilter<"ProgramTaskSubmission"> | string | null
  userId?: Prisma.StringNullableFilter<"ProgramTaskSubmission"> | string | null
  createdAt?: Prisma.DateTimeFilter<"ProgramTaskSubmission"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProgramTaskSubmission"> | Date | string
  submissionForProgram?: Prisma.EnumPROGRAM_CODENullableFilter<"ProgramTaskSubmission"> | $Enums.PROGRAM_CODE | null
  ProgramTask?: Prisma.XOR<Prisma.ProgramTaskScalarRelationFilter, Prisma.ProgramTaskWhereInput>
  Team?: Prisma.XOR<Prisma.TeamNullableScalarRelationFilter, Prisma.TeamWhereInput> | null
  user?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.userWhereInput> | null
}

export type ProgramTaskSubmissionOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  fileUrl?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  status?: Prisma.SortOrder
  feedback?: Prisma.SortOrderInput | Prisma.SortOrder
  taskId?: Prisma.SortOrder
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder
  userId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  submissionForProgram?: Prisma.SortOrderInput | Prisma.SortOrder
  ProgramTask?: Prisma.ProgramTaskOrderByWithRelationInput
  Team?: Prisma.TeamOrderByWithRelationInput
  user?: Prisma.userOrderByWithRelationInput
}

export type ProgramTaskSubmissionWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  taskId_teamId_submissionForProgram?: Prisma.ProgramTaskSubmissionTaskIdTeamIdSubmissionForProgramCompoundUniqueInput
  taskId_userId_submissionForProgram?: Prisma.ProgramTaskSubmissionTaskIdUserIdSubmissionForProgramCompoundUniqueInput
  AND?: Prisma.ProgramTaskSubmissionWhereInput | Prisma.ProgramTaskSubmissionWhereInput[]
  OR?: Prisma.ProgramTaskSubmissionWhereInput[]
  NOT?: Prisma.ProgramTaskSubmissionWhereInput | Prisma.ProgramTaskSubmissionWhereInput[]
  fileUrl?: Prisma.StringFilter<"ProgramTaskSubmission"> | string
  fileName?: Prisma.StringFilter<"ProgramTaskSubmission"> | string
  status?: Prisma.EnumSUBMISSION_STATUSFilter<"ProgramTaskSubmission"> | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.StringNullableFilter<"ProgramTaskSubmission"> | string | null
  taskId?: Prisma.StringFilter<"ProgramTaskSubmission"> | string
  teamId?: Prisma.StringNullableFilter<"ProgramTaskSubmission"> | string | null
  userId?: Prisma.StringNullableFilter<"ProgramTaskSubmission"> | string | null
  createdAt?: Prisma.DateTimeFilter<"ProgramTaskSubmission"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProgramTaskSubmission"> | Date | string
  submissionForProgram?: Prisma.EnumPROGRAM_CODENullableFilter<"ProgramTaskSubmission"> | $Enums.PROGRAM_CODE | null
  ProgramTask?: Prisma.XOR<Prisma.ProgramTaskScalarRelationFilter, Prisma.ProgramTaskWhereInput>
  Team?: Prisma.XOR<Prisma.TeamNullableScalarRelationFilter, Prisma.TeamWhereInput> | null
  user?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.userWhereInput> | null
}, "id" | "taskId_teamId_submissionForProgram" | "taskId_userId_submissionForProgram">

export type ProgramTaskSubmissionOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  fileUrl?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  status?: Prisma.SortOrder
  feedback?: Prisma.SortOrderInput | Prisma.SortOrder
  taskId?: Prisma.SortOrder
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder
  userId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  submissionForProgram?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.ProgramTaskSubmissionCountOrderByAggregateInput
  _max?: Prisma.ProgramTaskSubmissionMaxOrderByAggregateInput
  _min?: Prisma.ProgramTaskSubmissionMinOrderByAggregateInput
}

export type ProgramTaskSubmissionScalarWhereWithAggregatesInput = {
  AND?: Prisma.ProgramTaskSubmissionScalarWhereWithAggregatesInput | Prisma.ProgramTaskSubmissionScalarWhereWithAggregatesInput[]
  OR?: Prisma.ProgramTaskSubmissionScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ProgramTaskSubmissionScalarWhereWithAggregatesInput | Prisma.ProgramTaskSubmissionScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ProgramTaskSubmission"> | string
  fileUrl?: Prisma.StringWithAggregatesFilter<"ProgramTaskSubmission"> | string
  fileName?: Prisma.StringWithAggregatesFilter<"ProgramTaskSubmission"> | string
  status?: Prisma.EnumSUBMISSION_STATUSWithAggregatesFilter<"ProgramTaskSubmission"> | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.StringNullableWithAggregatesFilter<"ProgramTaskSubmission"> | string | null
  taskId?: Prisma.StringWithAggregatesFilter<"ProgramTaskSubmission"> | string
  teamId?: Prisma.StringNullableWithAggregatesFilter<"ProgramTaskSubmission"> | string | null
  userId?: Prisma.StringNullableWithAggregatesFilter<"ProgramTaskSubmission"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ProgramTaskSubmission"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ProgramTaskSubmission"> | Date | string
  submissionForProgram?: Prisma.EnumPROGRAM_CODENullableWithAggregatesFilter<"ProgramTaskSubmission"> | $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionCreateInput = {
  id: string
  fileUrl: string
  fileName: string
  status?: $Enums.SUBMISSION_STATUS
  feedback?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  submissionForProgram?: $Enums.PROGRAM_CODE | null
  ProgramTask: Prisma.ProgramTaskCreateNestedOneWithoutProgramTaskSubmissionInput
  Team?: Prisma.TeamCreateNestedOneWithoutProgramTaskSubmissionInput
  user?: Prisma.userCreateNestedOneWithoutProgramTaskSubmissionInput
}

export type ProgramTaskSubmissionUncheckedCreateInput = {
  id: string
  fileUrl: string
  fileName: string
  status?: $Enums.SUBMISSION_STATUS
  feedback?: string | null
  taskId: string
  teamId?: string | null
  userId?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  submissionForProgram?: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
  ProgramTask?: Prisma.ProgramTaskUpdateOneRequiredWithoutProgramTaskSubmissionNestedInput
  Team?: Prisma.TeamUpdateOneWithoutProgramTaskSubmissionNestedInput
  user?: Prisma.userUpdateOneWithoutProgramTaskSubmissionNestedInput
}

export type ProgramTaskSubmissionUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  taskId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionCreateManyInput = {
  id: string
  fileUrl: string
  fileName: string
  status?: $Enums.SUBMISSION_STATUS
  feedback?: string | null
  taskId: string
  teamId?: string | null
  userId?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  submissionForProgram?: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  taskId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionListRelationFilter = {
  every?: Prisma.ProgramTaskSubmissionWhereInput
  some?: Prisma.ProgramTaskSubmissionWhereInput
  none?: Prisma.ProgramTaskSubmissionWhereInput
}

export type ProgramTaskSubmissionOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ProgramTaskSubmissionTaskIdTeamIdSubmissionForProgramCompoundUniqueInput = {
  taskId: string
  teamId: string
  submissionForProgram: $Enums.PROGRAM_CODE
}

export type ProgramTaskSubmissionTaskIdUserIdSubmissionForProgramCompoundUniqueInput = {
  taskId: string
  userId: string
  submissionForProgram: $Enums.PROGRAM_CODE
}

export type ProgramTaskSubmissionCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  fileUrl?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  status?: Prisma.SortOrder
  feedback?: Prisma.SortOrder
  taskId?: Prisma.SortOrder
  teamId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  submissionForProgram?: Prisma.SortOrder
}

export type ProgramTaskSubmissionMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  fileUrl?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  status?: Prisma.SortOrder
  feedback?: Prisma.SortOrder
  taskId?: Prisma.SortOrder
  teamId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  submissionForProgram?: Prisma.SortOrder
}

export type ProgramTaskSubmissionMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  fileUrl?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  status?: Prisma.SortOrder
  feedback?: Prisma.SortOrder
  taskId?: Prisma.SortOrder
  teamId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  submissionForProgram?: Prisma.SortOrder
}

export type ProgramTaskSubmissionCreateNestedManyWithoutProgramTaskInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutProgramTaskInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutProgramTaskInput> | Prisma.ProgramTaskSubmissionCreateWithoutProgramTaskInput[] | Prisma.ProgramTaskSubmissionUncheckedCreateWithoutProgramTaskInput[]
  connectOrCreate?: Prisma.ProgramTaskSubmissionCreateOrConnectWithoutProgramTaskInput | Prisma.ProgramTaskSubmissionCreateOrConnectWithoutProgramTaskInput[]
  createMany?: Prisma.ProgramTaskSubmissionCreateManyProgramTaskInputEnvelope
  connect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
}

export type ProgramTaskSubmissionUncheckedCreateNestedManyWithoutProgramTaskInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutProgramTaskInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutProgramTaskInput> | Prisma.ProgramTaskSubmissionCreateWithoutProgramTaskInput[] | Prisma.ProgramTaskSubmissionUncheckedCreateWithoutProgramTaskInput[]
  connectOrCreate?: Prisma.ProgramTaskSubmissionCreateOrConnectWithoutProgramTaskInput | Prisma.ProgramTaskSubmissionCreateOrConnectWithoutProgramTaskInput[]
  createMany?: Prisma.ProgramTaskSubmissionCreateManyProgramTaskInputEnvelope
  connect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
}

export type ProgramTaskSubmissionUpdateManyWithoutProgramTaskNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutProgramTaskInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutProgramTaskInput> | Prisma.ProgramTaskSubmissionCreateWithoutProgramTaskInput[] | Prisma.ProgramTaskSubmissionUncheckedCreateWithoutProgramTaskInput[]
  connectOrCreate?: Prisma.ProgramTaskSubmissionCreateOrConnectWithoutProgramTaskInput | Prisma.ProgramTaskSubmissionCreateOrConnectWithoutProgramTaskInput[]
  upsert?: Prisma.ProgramTaskSubmissionUpsertWithWhereUniqueWithoutProgramTaskInput | Prisma.ProgramTaskSubmissionUpsertWithWhereUniqueWithoutProgramTaskInput[]
  createMany?: Prisma.ProgramTaskSubmissionCreateManyProgramTaskInputEnvelope
  set?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  disconnect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  delete?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  connect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  update?: Prisma.ProgramTaskSubmissionUpdateWithWhereUniqueWithoutProgramTaskInput | Prisma.ProgramTaskSubmissionUpdateWithWhereUniqueWithoutProgramTaskInput[]
  updateMany?: Prisma.ProgramTaskSubmissionUpdateManyWithWhereWithoutProgramTaskInput | Prisma.ProgramTaskSubmissionUpdateManyWithWhereWithoutProgramTaskInput[]
  deleteMany?: Prisma.ProgramTaskSubmissionScalarWhereInput | Prisma.ProgramTaskSubmissionScalarWhereInput[]
}

export type ProgramTaskSubmissionUncheckedUpdateManyWithoutProgramTaskNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutProgramTaskInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutProgramTaskInput> | Prisma.ProgramTaskSubmissionCreateWithoutProgramTaskInput[] | Prisma.ProgramTaskSubmissionUncheckedCreateWithoutProgramTaskInput[]
  connectOrCreate?: Prisma.ProgramTaskSubmissionCreateOrConnectWithoutProgramTaskInput | Prisma.ProgramTaskSubmissionCreateOrConnectWithoutProgramTaskInput[]
  upsert?: Prisma.ProgramTaskSubmissionUpsertWithWhereUniqueWithoutProgramTaskInput | Prisma.ProgramTaskSubmissionUpsertWithWhereUniqueWithoutProgramTaskInput[]
  createMany?: Prisma.ProgramTaskSubmissionCreateManyProgramTaskInputEnvelope
  set?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  disconnect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  delete?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  connect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  update?: Prisma.ProgramTaskSubmissionUpdateWithWhereUniqueWithoutProgramTaskInput | Prisma.ProgramTaskSubmissionUpdateWithWhereUniqueWithoutProgramTaskInput[]
  updateMany?: Prisma.ProgramTaskSubmissionUpdateManyWithWhereWithoutProgramTaskInput | Prisma.ProgramTaskSubmissionUpdateManyWithWhereWithoutProgramTaskInput[]
  deleteMany?: Prisma.ProgramTaskSubmissionScalarWhereInput | Prisma.ProgramTaskSubmissionScalarWhereInput[]
}

export type EnumSUBMISSION_STATUSFieldUpdateOperationsInput = {
  set?: $Enums.SUBMISSION_STATUS
}

export type NullableEnumPROGRAM_CODEFieldUpdateOperationsInput = {
  set?: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionCreateNestedManyWithoutTeamInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutTeamInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutTeamInput> | Prisma.ProgramTaskSubmissionCreateWithoutTeamInput[] | Prisma.ProgramTaskSubmissionUncheckedCreateWithoutTeamInput[]
  connectOrCreate?: Prisma.ProgramTaskSubmissionCreateOrConnectWithoutTeamInput | Prisma.ProgramTaskSubmissionCreateOrConnectWithoutTeamInput[]
  createMany?: Prisma.ProgramTaskSubmissionCreateManyTeamInputEnvelope
  connect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
}

export type ProgramTaskSubmissionUncheckedCreateNestedManyWithoutTeamInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutTeamInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutTeamInput> | Prisma.ProgramTaskSubmissionCreateWithoutTeamInput[] | Prisma.ProgramTaskSubmissionUncheckedCreateWithoutTeamInput[]
  connectOrCreate?: Prisma.ProgramTaskSubmissionCreateOrConnectWithoutTeamInput | Prisma.ProgramTaskSubmissionCreateOrConnectWithoutTeamInput[]
  createMany?: Prisma.ProgramTaskSubmissionCreateManyTeamInputEnvelope
  connect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
}

export type ProgramTaskSubmissionUpdateManyWithoutTeamNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutTeamInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutTeamInput> | Prisma.ProgramTaskSubmissionCreateWithoutTeamInput[] | Prisma.ProgramTaskSubmissionUncheckedCreateWithoutTeamInput[]
  connectOrCreate?: Prisma.ProgramTaskSubmissionCreateOrConnectWithoutTeamInput | Prisma.ProgramTaskSubmissionCreateOrConnectWithoutTeamInput[]
  upsert?: Prisma.ProgramTaskSubmissionUpsertWithWhereUniqueWithoutTeamInput | Prisma.ProgramTaskSubmissionUpsertWithWhereUniqueWithoutTeamInput[]
  createMany?: Prisma.ProgramTaskSubmissionCreateManyTeamInputEnvelope
  set?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  disconnect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  delete?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  connect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  update?: Prisma.ProgramTaskSubmissionUpdateWithWhereUniqueWithoutTeamInput | Prisma.ProgramTaskSubmissionUpdateWithWhereUniqueWithoutTeamInput[]
  updateMany?: Prisma.ProgramTaskSubmissionUpdateManyWithWhereWithoutTeamInput | Prisma.ProgramTaskSubmissionUpdateManyWithWhereWithoutTeamInput[]
  deleteMany?: Prisma.ProgramTaskSubmissionScalarWhereInput | Prisma.ProgramTaskSubmissionScalarWhereInput[]
}

export type ProgramTaskSubmissionUncheckedUpdateManyWithoutTeamNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutTeamInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutTeamInput> | Prisma.ProgramTaskSubmissionCreateWithoutTeamInput[] | Prisma.ProgramTaskSubmissionUncheckedCreateWithoutTeamInput[]
  connectOrCreate?: Prisma.ProgramTaskSubmissionCreateOrConnectWithoutTeamInput | Prisma.ProgramTaskSubmissionCreateOrConnectWithoutTeamInput[]
  upsert?: Prisma.ProgramTaskSubmissionUpsertWithWhereUniqueWithoutTeamInput | Prisma.ProgramTaskSubmissionUpsertWithWhereUniqueWithoutTeamInput[]
  createMany?: Prisma.ProgramTaskSubmissionCreateManyTeamInputEnvelope
  set?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  disconnect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  delete?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  connect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  update?: Prisma.ProgramTaskSubmissionUpdateWithWhereUniqueWithoutTeamInput | Prisma.ProgramTaskSubmissionUpdateWithWhereUniqueWithoutTeamInput[]
  updateMany?: Prisma.ProgramTaskSubmissionUpdateManyWithWhereWithoutTeamInput | Prisma.ProgramTaskSubmissionUpdateManyWithWhereWithoutTeamInput[]
  deleteMany?: Prisma.ProgramTaskSubmissionScalarWhereInput | Prisma.ProgramTaskSubmissionScalarWhereInput[]
}

export type ProgramTaskSubmissionCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutUserInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutUserInput> | Prisma.ProgramTaskSubmissionCreateWithoutUserInput[] | Prisma.ProgramTaskSubmissionUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.ProgramTaskSubmissionCreateOrConnectWithoutUserInput | Prisma.ProgramTaskSubmissionCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.ProgramTaskSubmissionCreateManyUserInputEnvelope
  connect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
}

export type ProgramTaskSubmissionUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutUserInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutUserInput> | Prisma.ProgramTaskSubmissionCreateWithoutUserInput[] | Prisma.ProgramTaskSubmissionUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.ProgramTaskSubmissionCreateOrConnectWithoutUserInput | Prisma.ProgramTaskSubmissionCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.ProgramTaskSubmissionCreateManyUserInputEnvelope
  connect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
}

export type ProgramTaskSubmissionUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutUserInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutUserInput> | Prisma.ProgramTaskSubmissionCreateWithoutUserInput[] | Prisma.ProgramTaskSubmissionUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.ProgramTaskSubmissionCreateOrConnectWithoutUserInput | Prisma.ProgramTaskSubmissionCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.ProgramTaskSubmissionUpsertWithWhereUniqueWithoutUserInput | Prisma.ProgramTaskSubmissionUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.ProgramTaskSubmissionCreateManyUserInputEnvelope
  set?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  disconnect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  delete?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  connect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  update?: Prisma.ProgramTaskSubmissionUpdateWithWhereUniqueWithoutUserInput | Prisma.ProgramTaskSubmissionUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.ProgramTaskSubmissionUpdateManyWithWhereWithoutUserInput | Prisma.ProgramTaskSubmissionUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.ProgramTaskSubmissionScalarWhereInput | Prisma.ProgramTaskSubmissionScalarWhereInput[]
}

export type ProgramTaskSubmissionUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutUserInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutUserInput> | Prisma.ProgramTaskSubmissionCreateWithoutUserInput[] | Prisma.ProgramTaskSubmissionUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.ProgramTaskSubmissionCreateOrConnectWithoutUserInput | Prisma.ProgramTaskSubmissionCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.ProgramTaskSubmissionUpsertWithWhereUniqueWithoutUserInput | Prisma.ProgramTaskSubmissionUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.ProgramTaskSubmissionCreateManyUserInputEnvelope
  set?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  disconnect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  delete?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  connect?: Prisma.ProgramTaskSubmissionWhereUniqueInput | Prisma.ProgramTaskSubmissionWhereUniqueInput[]
  update?: Prisma.ProgramTaskSubmissionUpdateWithWhereUniqueWithoutUserInput | Prisma.ProgramTaskSubmissionUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.ProgramTaskSubmissionUpdateManyWithWhereWithoutUserInput | Prisma.ProgramTaskSubmissionUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.ProgramTaskSubmissionScalarWhereInput | Prisma.ProgramTaskSubmissionScalarWhereInput[]
}

export type ProgramTaskSubmissionCreateWithoutProgramTaskInput = {
  id: string
  fileUrl: string
  fileName: string
  status?: $Enums.SUBMISSION_STATUS
  feedback?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  submissionForProgram?: $Enums.PROGRAM_CODE | null
  Team?: Prisma.TeamCreateNestedOneWithoutProgramTaskSubmissionInput
  user?: Prisma.userCreateNestedOneWithoutProgramTaskSubmissionInput
}

export type ProgramTaskSubmissionUncheckedCreateWithoutProgramTaskInput = {
  id: string
  fileUrl: string
  fileName: string
  status?: $Enums.SUBMISSION_STATUS
  feedback?: string | null
  teamId?: string | null
  userId?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  submissionForProgram?: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionCreateOrConnectWithoutProgramTaskInput = {
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
  create: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutProgramTaskInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutProgramTaskInput>
}

export type ProgramTaskSubmissionCreateManyProgramTaskInputEnvelope = {
  data: Prisma.ProgramTaskSubmissionCreateManyProgramTaskInput | Prisma.ProgramTaskSubmissionCreateManyProgramTaskInput[]
  skipDuplicates?: boolean
}

export type ProgramTaskSubmissionUpsertWithWhereUniqueWithoutProgramTaskInput = {
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
  update: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateWithoutProgramTaskInput, Prisma.ProgramTaskSubmissionUncheckedUpdateWithoutProgramTaskInput>
  create: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutProgramTaskInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutProgramTaskInput>
}

export type ProgramTaskSubmissionUpdateWithWhereUniqueWithoutProgramTaskInput = {
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
  data: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateWithoutProgramTaskInput, Prisma.ProgramTaskSubmissionUncheckedUpdateWithoutProgramTaskInput>
}

export type ProgramTaskSubmissionUpdateManyWithWhereWithoutProgramTaskInput = {
  where: Prisma.ProgramTaskSubmissionScalarWhereInput
  data: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateManyMutationInput, Prisma.ProgramTaskSubmissionUncheckedUpdateManyWithoutProgramTaskInput>
}

export type ProgramTaskSubmissionScalarWhereInput = {
  AND?: Prisma.ProgramTaskSubmissionScalarWhereInput | Prisma.ProgramTaskSubmissionScalarWhereInput[]
  OR?: Prisma.ProgramTaskSubmissionScalarWhereInput[]
  NOT?: Prisma.ProgramTaskSubmissionScalarWhereInput | Prisma.ProgramTaskSubmissionScalarWhereInput[]
  id?: Prisma.StringFilter<"ProgramTaskSubmission"> | string
  fileUrl?: Prisma.StringFilter<"ProgramTaskSubmission"> | string
  fileName?: Prisma.StringFilter<"ProgramTaskSubmission"> | string
  status?: Prisma.EnumSUBMISSION_STATUSFilter<"ProgramTaskSubmission"> | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.StringNullableFilter<"ProgramTaskSubmission"> | string | null
  taskId?: Prisma.StringFilter<"ProgramTaskSubmission"> | string
  teamId?: Prisma.StringNullableFilter<"ProgramTaskSubmission"> | string | null
  userId?: Prisma.StringNullableFilter<"ProgramTaskSubmission"> | string | null
  createdAt?: Prisma.DateTimeFilter<"ProgramTaskSubmission"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProgramTaskSubmission"> | Date | string
  submissionForProgram?: Prisma.EnumPROGRAM_CODENullableFilter<"ProgramTaskSubmission"> | $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionCreateWithoutTeamInput = {
  id: string
  fileUrl: string
  fileName: string
  status?: $Enums.SUBMISSION_STATUS
  feedback?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  submissionForProgram?: $Enums.PROGRAM_CODE | null
  ProgramTask: Prisma.ProgramTaskCreateNestedOneWithoutProgramTaskSubmissionInput
  user?: Prisma.userCreateNestedOneWithoutProgramTaskSubmissionInput
}

export type ProgramTaskSubmissionUncheckedCreateWithoutTeamInput = {
  id: string
  fileUrl: string
  fileName: string
  status?: $Enums.SUBMISSION_STATUS
  feedback?: string | null
  taskId: string
  userId?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  submissionForProgram?: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionCreateOrConnectWithoutTeamInput = {
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
  create: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutTeamInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutTeamInput>
}

export type ProgramTaskSubmissionCreateManyTeamInputEnvelope = {
  data: Prisma.ProgramTaskSubmissionCreateManyTeamInput | Prisma.ProgramTaskSubmissionCreateManyTeamInput[]
  skipDuplicates?: boolean
}

export type ProgramTaskSubmissionUpsertWithWhereUniqueWithoutTeamInput = {
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
  update: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateWithoutTeamInput, Prisma.ProgramTaskSubmissionUncheckedUpdateWithoutTeamInput>
  create: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutTeamInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutTeamInput>
}

export type ProgramTaskSubmissionUpdateWithWhereUniqueWithoutTeamInput = {
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
  data: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateWithoutTeamInput, Prisma.ProgramTaskSubmissionUncheckedUpdateWithoutTeamInput>
}

export type ProgramTaskSubmissionUpdateManyWithWhereWithoutTeamInput = {
  where: Prisma.ProgramTaskSubmissionScalarWhereInput
  data: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateManyMutationInput, Prisma.ProgramTaskSubmissionUncheckedUpdateManyWithoutTeamInput>
}

export type ProgramTaskSubmissionCreateWithoutUserInput = {
  id: string
  fileUrl: string
  fileName: string
  status?: $Enums.SUBMISSION_STATUS
  feedback?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  submissionForProgram?: $Enums.PROGRAM_CODE | null
  ProgramTask: Prisma.ProgramTaskCreateNestedOneWithoutProgramTaskSubmissionInput
  Team?: Prisma.TeamCreateNestedOneWithoutProgramTaskSubmissionInput
}

export type ProgramTaskSubmissionUncheckedCreateWithoutUserInput = {
  id: string
  fileUrl: string
  fileName: string
  status?: $Enums.SUBMISSION_STATUS
  feedback?: string | null
  taskId: string
  teamId?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  submissionForProgram?: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionCreateOrConnectWithoutUserInput = {
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
  create: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutUserInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutUserInput>
}

export type ProgramTaskSubmissionCreateManyUserInputEnvelope = {
  data: Prisma.ProgramTaskSubmissionCreateManyUserInput | Prisma.ProgramTaskSubmissionCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type ProgramTaskSubmissionUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
  update: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateWithoutUserInput, Prisma.ProgramTaskSubmissionUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateWithoutUserInput, Prisma.ProgramTaskSubmissionUncheckedCreateWithoutUserInput>
}

export type ProgramTaskSubmissionUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
  data: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateWithoutUserInput, Prisma.ProgramTaskSubmissionUncheckedUpdateWithoutUserInput>
}

export type ProgramTaskSubmissionUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.ProgramTaskSubmissionScalarWhereInput
  data: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateManyMutationInput, Prisma.ProgramTaskSubmissionUncheckedUpdateManyWithoutUserInput>
}

export type ProgramTaskSubmissionCreateManyProgramTaskInput = {
  id: string
  fileUrl: string
  fileName: string
  status?: $Enums.SUBMISSION_STATUS
  feedback?: string | null
  teamId?: string | null
  userId?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  submissionForProgram?: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionUpdateWithoutProgramTaskInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
  Team?: Prisma.TeamUpdateOneWithoutProgramTaskSubmissionNestedInput
  user?: Prisma.userUpdateOneWithoutProgramTaskSubmissionNestedInput
}

export type ProgramTaskSubmissionUncheckedUpdateWithoutProgramTaskInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionUncheckedUpdateManyWithoutProgramTaskInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionCreateManyTeamInput = {
  id: string
  fileUrl: string
  fileName: string
  status?: $Enums.SUBMISSION_STATUS
  feedback?: string | null
  taskId: string
  userId?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  submissionForProgram?: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
  ProgramTask?: Prisma.ProgramTaskUpdateOneRequiredWithoutProgramTaskSubmissionNestedInput
  user?: Prisma.userUpdateOneWithoutProgramTaskSubmissionNestedInput
}

export type ProgramTaskSubmissionUncheckedUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  taskId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionUncheckedUpdateManyWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  taskId?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionCreateManyUserInput = {
  id: string
  fileUrl: string
  fileName: string
  status?: $Enums.SUBMISSION_STATUS
  feedback?: string | null
  taskId: string
  teamId?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  submissionForProgram?: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
  ProgramTask?: Prisma.ProgramTaskUpdateOneRequiredWithoutProgramTaskSubmissionNestedInput
  Team?: Prisma.TeamUpdateOneWithoutProgramTaskSubmissionNestedInput
}

export type ProgramTaskSubmissionUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  taskId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
}

export type ProgramTaskSubmissionUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  fileUrl?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumSUBMISSION_STATUSFieldUpdateOperationsInput | $Enums.SUBMISSION_STATUS
  feedback?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  taskId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissionForProgram?: Prisma.NullableEnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE | null
}



export type ProgramTaskSubmissionSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  fileUrl?: boolean
  fileName?: boolean
  status?: boolean
  feedback?: boolean
  taskId?: boolean
  teamId?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  submissionForProgram?: boolean
  ProgramTask?: boolean | Prisma.ProgramTaskDefaultArgs<ExtArgs>
  Team?: boolean | Prisma.ProgramTaskSubmission$TeamArgs<ExtArgs>
  user?: boolean | Prisma.ProgramTaskSubmission$userArgs<ExtArgs>
}, ExtArgs["result"]["programTaskSubmission"]>

export type ProgramTaskSubmissionSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  fileUrl?: boolean
  fileName?: boolean
  status?: boolean
  feedback?: boolean
  taskId?: boolean
  teamId?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  submissionForProgram?: boolean
  ProgramTask?: boolean | Prisma.ProgramTaskDefaultArgs<ExtArgs>
  Team?: boolean | Prisma.ProgramTaskSubmission$TeamArgs<ExtArgs>
  user?: boolean | Prisma.ProgramTaskSubmission$userArgs<ExtArgs>
}, ExtArgs["result"]["programTaskSubmission"]>

export type ProgramTaskSubmissionSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  fileUrl?: boolean
  fileName?: boolean
  status?: boolean
  feedback?: boolean
  taskId?: boolean
  teamId?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  submissionForProgram?: boolean
  ProgramTask?: boolean | Prisma.ProgramTaskDefaultArgs<ExtArgs>
  Team?: boolean | Prisma.ProgramTaskSubmission$TeamArgs<ExtArgs>
  user?: boolean | Prisma.ProgramTaskSubmission$userArgs<ExtArgs>
}, ExtArgs["result"]["programTaskSubmission"]>

export type ProgramTaskSubmissionSelectScalar = {
  id?: boolean
  fileUrl?: boolean
  fileName?: boolean
  status?: boolean
  feedback?: boolean
  taskId?: boolean
  teamId?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  submissionForProgram?: boolean
}

export type ProgramTaskSubmissionOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "fileUrl" | "fileName" | "status" | "feedback" | "taskId" | "teamId" | "userId" | "createdAt" | "updatedAt" | "submissionForProgram", ExtArgs["result"]["programTaskSubmission"]>
export type ProgramTaskSubmissionInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ProgramTask?: boolean | Prisma.ProgramTaskDefaultArgs<ExtArgs>
  Team?: boolean | Prisma.ProgramTaskSubmission$TeamArgs<ExtArgs>
  user?: boolean | Prisma.ProgramTaskSubmission$userArgs<ExtArgs>
}
export type ProgramTaskSubmissionIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ProgramTask?: boolean | Prisma.ProgramTaskDefaultArgs<ExtArgs>
  Team?: boolean | Prisma.ProgramTaskSubmission$TeamArgs<ExtArgs>
  user?: boolean | Prisma.ProgramTaskSubmission$userArgs<ExtArgs>
}
export type ProgramTaskSubmissionIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ProgramTask?: boolean | Prisma.ProgramTaskDefaultArgs<ExtArgs>
  Team?: boolean | Prisma.ProgramTaskSubmission$TeamArgs<ExtArgs>
  user?: boolean | Prisma.ProgramTaskSubmission$userArgs<ExtArgs>
}

export type $ProgramTaskSubmissionPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ProgramTaskSubmission"
  objects: {
    ProgramTask: Prisma.$ProgramTaskPayload<ExtArgs>
    Team: Prisma.$TeamPayload<ExtArgs> | null
    user: Prisma.$userPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    fileUrl: string
    fileName: string
    status: $Enums.SUBMISSION_STATUS
    feedback: string | null
    taskId: string
    teamId: string | null
    userId: string | null
    createdAt: Date
    updatedAt: Date
    submissionForProgram: $Enums.PROGRAM_CODE | null
  }, ExtArgs["result"]["programTaskSubmission"]>
  composites: {}
}

export type ProgramTaskSubmissionGetPayload<S extends boolean | null | undefined | ProgramTaskSubmissionDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload, S>

export type ProgramTaskSubmissionCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ProgramTaskSubmissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ProgramTaskSubmissionCountAggregateInputType | true
  }

export interface ProgramTaskSubmissionDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProgramTaskSubmission'], meta: { name: 'ProgramTaskSubmission' } }
  /**
   * Find zero or one ProgramTaskSubmission that matches the filter.
   * @param {ProgramTaskSubmissionFindUniqueArgs} args - Arguments to find a ProgramTaskSubmission
   * @example
   * // Get one ProgramTaskSubmission
   * const programTaskSubmission = await prisma.programTaskSubmission.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ProgramTaskSubmissionFindUniqueArgs>(args: Prisma.SelectSubset<T, ProgramTaskSubmissionFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskSubmissionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ProgramTaskSubmission that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ProgramTaskSubmissionFindUniqueOrThrowArgs} args - Arguments to find a ProgramTaskSubmission
   * @example
   * // Get one ProgramTaskSubmission
   * const programTaskSubmission = await prisma.programTaskSubmission.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ProgramTaskSubmissionFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ProgramTaskSubmissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskSubmissionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProgramTaskSubmission that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskSubmissionFindFirstArgs} args - Arguments to find a ProgramTaskSubmission
   * @example
   * // Get one ProgramTaskSubmission
   * const programTaskSubmission = await prisma.programTaskSubmission.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ProgramTaskSubmissionFindFirstArgs>(args?: Prisma.SelectSubset<T, ProgramTaskSubmissionFindFirstArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskSubmissionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProgramTaskSubmission that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskSubmissionFindFirstOrThrowArgs} args - Arguments to find a ProgramTaskSubmission
   * @example
   * // Get one ProgramTaskSubmission
   * const programTaskSubmission = await prisma.programTaskSubmission.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ProgramTaskSubmissionFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ProgramTaskSubmissionFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskSubmissionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ProgramTaskSubmissions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskSubmissionFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ProgramTaskSubmissions
   * const programTaskSubmissions = await prisma.programTaskSubmission.findMany()
   * 
   * // Get first 10 ProgramTaskSubmissions
   * const programTaskSubmissions = await prisma.programTaskSubmission.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const programTaskSubmissionWithIdOnly = await prisma.programTaskSubmission.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ProgramTaskSubmissionFindManyArgs>(args?: Prisma.SelectSubset<T, ProgramTaskSubmissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ProgramTaskSubmission.
   * @param {ProgramTaskSubmissionCreateArgs} args - Arguments to create a ProgramTaskSubmission.
   * @example
   * // Create one ProgramTaskSubmission
   * const ProgramTaskSubmission = await prisma.programTaskSubmission.create({
   *   data: {
   *     // ... data to create a ProgramTaskSubmission
   *   }
   * })
   * 
   */
  create<T extends ProgramTaskSubmissionCreateArgs>(args: Prisma.SelectSubset<T, ProgramTaskSubmissionCreateArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskSubmissionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ProgramTaskSubmissions.
   * @param {ProgramTaskSubmissionCreateManyArgs} args - Arguments to create many ProgramTaskSubmissions.
   * @example
   * // Create many ProgramTaskSubmissions
   * const programTaskSubmission = await prisma.programTaskSubmission.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ProgramTaskSubmissionCreateManyArgs>(args?: Prisma.SelectSubset<T, ProgramTaskSubmissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ProgramTaskSubmissions and returns the data saved in the database.
   * @param {ProgramTaskSubmissionCreateManyAndReturnArgs} args - Arguments to create many ProgramTaskSubmissions.
   * @example
   * // Create many ProgramTaskSubmissions
   * const programTaskSubmission = await prisma.programTaskSubmission.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ProgramTaskSubmissions and only return the `id`
   * const programTaskSubmissionWithIdOnly = await prisma.programTaskSubmission.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ProgramTaskSubmissionCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ProgramTaskSubmissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ProgramTaskSubmission.
   * @param {ProgramTaskSubmissionDeleteArgs} args - Arguments to delete one ProgramTaskSubmission.
   * @example
   * // Delete one ProgramTaskSubmission
   * const ProgramTaskSubmission = await prisma.programTaskSubmission.delete({
   *   where: {
   *     // ... filter to delete one ProgramTaskSubmission
   *   }
   * })
   * 
   */
  delete<T extends ProgramTaskSubmissionDeleteArgs>(args: Prisma.SelectSubset<T, ProgramTaskSubmissionDeleteArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskSubmissionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ProgramTaskSubmission.
   * @param {ProgramTaskSubmissionUpdateArgs} args - Arguments to update one ProgramTaskSubmission.
   * @example
   * // Update one ProgramTaskSubmission
   * const programTaskSubmission = await prisma.programTaskSubmission.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ProgramTaskSubmissionUpdateArgs>(args: Prisma.SelectSubset<T, ProgramTaskSubmissionUpdateArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskSubmissionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ProgramTaskSubmissions.
   * @param {ProgramTaskSubmissionDeleteManyArgs} args - Arguments to filter ProgramTaskSubmissions to delete.
   * @example
   * // Delete a few ProgramTaskSubmissions
   * const { count } = await prisma.programTaskSubmission.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ProgramTaskSubmissionDeleteManyArgs>(args?: Prisma.SelectSubset<T, ProgramTaskSubmissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProgramTaskSubmissions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskSubmissionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ProgramTaskSubmissions
   * const programTaskSubmission = await prisma.programTaskSubmission.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ProgramTaskSubmissionUpdateManyArgs>(args: Prisma.SelectSubset<T, ProgramTaskSubmissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProgramTaskSubmissions and returns the data updated in the database.
   * @param {ProgramTaskSubmissionUpdateManyAndReturnArgs} args - Arguments to update many ProgramTaskSubmissions.
   * @example
   * // Update many ProgramTaskSubmissions
   * const programTaskSubmission = await prisma.programTaskSubmission.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ProgramTaskSubmissions and only return the `id`
   * const programTaskSubmissionWithIdOnly = await prisma.programTaskSubmission.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ProgramTaskSubmissionUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ProgramTaskSubmissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ProgramTaskSubmission.
   * @param {ProgramTaskSubmissionUpsertArgs} args - Arguments to update or create a ProgramTaskSubmission.
   * @example
   * // Update or create a ProgramTaskSubmission
   * const programTaskSubmission = await prisma.programTaskSubmission.upsert({
   *   create: {
   *     // ... data to create a ProgramTaskSubmission
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ProgramTaskSubmission we want to update
   *   }
   * })
   */
  upsert<T extends ProgramTaskSubmissionUpsertArgs>(args: Prisma.SelectSubset<T, ProgramTaskSubmissionUpsertArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskSubmissionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskSubmissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ProgramTaskSubmissions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskSubmissionCountArgs} args - Arguments to filter ProgramTaskSubmissions to count.
   * @example
   * // Count the number of ProgramTaskSubmissions
   * const count = await prisma.programTaskSubmission.count({
   *   where: {
   *     // ... the filter for the ProgramTaskSubmissions we want to count
   *   }
   * })
  **/
  count<T extends ProgramTaskSubmissionCountArgs>(
    args?: Prisma.Subset<T, ProgramTaskSubmissionCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProgramTaskSubmissionCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ProgramTaskSubmission.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskSubmissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProgramTaskSubmissionAggregateArgs>(args: Prisma.Subset<T, ProgramTaskSubmissionAggregateArgs>): Prisma.PrismaPromise<GetProgramTaskSubmissionAggregateType<T>>

  /**
   * Group by ProgramTaskSubmission.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskSubmissionGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ProgramTaskSubmissionGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ProgramTaskSubmissionGroupByArgs['orderBy'] }
      : { orderBy?: ProgramTaskSubmissionGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ProgramTaskSubmissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgramTaskSubmissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ProgramTaskSubmission model
 */
readonly fields: ProgramTaskSubmissionFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ProgramTaskSubmission.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProgramTaskSubmissionClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  ProgramTask<T extends Prisma.ProgramTaskDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProgramTaskDefaultArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  Team<T extends Prisma.ProgramTaskSubmission$TeamArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProgramTaskSubmission$TeamArgs<ExtArgs>>): Prisma.Prisma__TeamClient<runtime.Types.Result.GetResult<Prisma.$TeamPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  user<T extends Prisma.ProgramTaskSubmission$userArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProgramTaskSubmission$userArgs<ExtArgs>>): Prisma.Prisma__userClient<runtime.Types.Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ProgramTaskSubmission model
 */
export interface ProgramTaskSubmissionFieldRefs {
  readonly id: Prisma.FieldRef<"ProgramTaskSubmission", 'String'>
  readonly fileUrl: Prisma.FieldRef<"ProgramTaskSubmission", 'String'>
  readonly fileName: Prisma.FieldRef<"ProgramTaskSubmission", 'String'>
  readonly status: Prisma.FieldRef<"ProgramTaskSubmission", 'SUBMISSION_STATUS'>
  readonly feedback: Prisma.FieldRef<"ProgramTaskSubmission", 'String'>
  readonly taskId: Prisma.FieldRef<"ProgramTaskSubmission", 'String'>
  readonly teamId: Prisma.FieldRef<"ProgramTaskSubmission", 'String'>
  readonly userId: Prisma.FieldRef<"ProgramTaskSubmission", 'String'>
  readonly createdAt: Prisma.FieldRef<"ProgramTaskSubmission", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ProgramTaskSubmission", 'DateTime'>
  readonly submissionForProgram: Prisma.FieldRef<"ProgramTaskSubmission", 'PROGRAM_CODE'>
}
    

// Custom InputTypes
/**
 * ProgramTaskSubmission findUnique
 */
export type ProgramTaskSubmissionFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTaskSubmission to fetch.
   */
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
}

/**
 * ProgramTaskSubmission findUniqueOrThrow
 */
export type ProgramTaskSubmissionFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTaskSubmission to fetch.
   */
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
}

/**
 * ProgramTaskSubmission findFirst
 */
export type ProgramTaskSubmissionFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTaskSubmission to fetch.
   */
  where?: Prisma.ProgramTaskSubmissionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramTaskSubmissions to fetch.
   */
  orderBy?: Prisma.ProgramTaskSubmissionOrderByWithRelationInput | Prisma.ProgramTaskSubmissionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProgramTaskSubmissions.
   */
  cursor?: Prisma.ProgramTaskSubmissionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramTaskSubmissions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramTaskSubmissions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProgramTaskSubmissions.
   */
  distinct?: Prisma.ProgramTaskSubmissionScalarFieldEnum | Prisma.ProgramTaskSubmissionScalarFieldEnum[]
}

/**
 * ProgramTaskSubmission findFirstOrThrow
 */
export type ProgramTaskSubmissionFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTaskSubmission to fetch.
   */
  where?: Prisma.ProgramTaskSubmissionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramTaskSubmissions to fetch.
   */
  orderBy?: Prisma.ProgramTaskSubmissionOrderByWithRelationInput | Prisma.ProgramTaskSubmissionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProgramTaskSubmissions.
   */
  cursor?: Prisma.ProgramTaskSubmissionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramTaskSubmissions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramTaskSubmissions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProgramTaskSubmissions.
   */
  distinct?: Prisma.ProgramTaskSubmissionScalarFieldEnum | Prisma.ProgramTaskSubmissionScalarFieldEnum[]
}

/**
 * ProgramTaskSubmission findMany
 */
export type ProgramTaskSubmissionFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTaskSubmissions to fetch.
   */
  where?: Prisma.ProgramTaskSubmissionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramTaskSubmissions to fetch.
   */
  orderBy?: Prisma.ProgramTaskSubmissionOrderByWithRelationInput | Prisma.ProgramTaskSubmissionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ProgramTaskSubmissions.
   */
  cursor?: Prisma.ProgramTaskSubmissionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramTaskSubmissions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramTaskSubmissions.
   */
  skip?: number
  distinct?: Prisma.ProgramTaskSubmissionScalarFieldEnum | Prisma.ProgramTaskSubmissionScalarFieldEnum[]
}

/**
 * ProgramTaskSubmission create
 */
export type ProgramTaskSubmissionCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionInclude<ExtArgs> | null
  /**
   * The data needed to create a ProgramTaskSubmission.
   */
  data: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateInput, Prisma.ProgramTaskSubmissionUncheckedCreateInput>
}

/**
 * ProgramTaskSubmission createMany
 */
export type ProgramTaskSubmissionCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ProgramTaskSubmissions.
   */
  data: Prisma.ProgramTaskSubmissionCreateManyInput | Prisma.ProgramTaskSubmissionCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ProgramTaskSubmission createManyAndReturn
 */
export type ProgramTaskSubmissionCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * The data used to create many ProgramTaskSubmissions.
   */
  data: Prisma.ProgramTaskSubmissionCreateManyInput | Prisma.ProgramTaskSubmissionCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ProgramTaskSubmission update
 */
export type ProgramTaskSubmissionUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionInclude<ExtArgs> | null
  /**
   * The data needed to update a ProgramTaskSubmission.
   */
  data: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateInput, Prisma.ProgramTaskSubmissionUncheckedUpdateInput>
  /**
   * Choose, which ProgramTaskSubmission to update.
   */
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
}

/**
 * ProgramTaskSubmission updateMany
 */
export type ProgramTaskSubmissionUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ProgramTaskSubmissions.
   */
  data: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateManyMutationInput, Prisma.ProgramTaskSubmissionUncheckedUpdateManyInput>
  /**
   * Filter which ProgramTaskSubmissions to update
   */
  where?: Prisma.ProgramTaskSubmissionWhereInput
  /**
   * Limit how many ProgramTaskSubmissions to update.
   */
  limit?: number
}

/**
 * ProgramTaskSubmission updateManyAndReturn
 */
export type ProgramTaskSubmissionUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * The data used to update ProgramTaskSubmissions.
   */
  data: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateManyMutationInput, Prisma.ProgramTaskSubmissionUncheckedUpdateManyInput>
  /**
   * Filter which ProgramTaskSubmissions to update
   */
  where?: Prisma.ProgramTaskSubmissionWhereInput
  /**
   * Limit how many ProgramTaskSubmissions to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ProgramTaskSubmission upsert
 */
export type ProgramTaskSubmissionUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionInclude<ExtArgs> | null
  /**
   * The filter to search for the ProgramTaskSubmission to update in case it exists.
   */
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
  /**
   * In case the ProgramTaskSubmission found by the `where` argument doesn't exist, create a new ProgramTaskSubmission with this data.
   */
  create: Prisma.XOR<Prisma.ProgramTaskSubmissionCreateInput, Prisma.ProgramTaskSubmissionUncheckedCreateInput>
  /**
   * In case the ProgramTaskSubmission was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ProgramTaskSubmissionUpdateInput, Prisma.ProgramTaskSubmissionUncheckedUpdateInput>
}

/**
 * ProgramTaskSubmission delete
 */
export type ProgramTaskSubmissionDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionInclude<ExtArgs> | null
  /**
   * Filter which ProgramTaskSubmission to delete.
   */
  where: Prisma.ProgramTaskSubmissionWhereUniqueInput
}

/**
 * ProgramTaskSubmission deleteMany
 */
export type ProgramTaskSubmissionDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProgramTaskSubmissions to delete
   */
  where?: Prisma.ProgramTaskSubmissionWhereInput
  /**
   * Limit how many ProgramTaskSubmissions to delete.
   */
  limit?: number
}

/**
 * ProgramTaskSubmission.Team
 */
export type ProgramTaskSubmission$TeamArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Team
   */
  select?: Prisma.TeamSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Team
   */
  omit?: Prisma.TeamOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeamInclude<ExtArgs> | null
  where?: Prisma.TeamWhereInput
}

/**
 * ProgramTaskSubmission.user
 */
export type ProgramTaskSubmission$userArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user
   */
  select?: Prisma.userSelect<ExtArgs> | null
  /**
   * Omit specific fields from the user
   */
  omit?: Prisma.userOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.userInclude<ExtArgs> | null
  where?: Prisma.userWhereInput
}

/**
 * ProgramTaskSubmission without action
 */
export type ProgramTaskSubmissionDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskSubmission
   */
  select?: Prisma.ProgramTaskSubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskSubmission
   */
  omit?: Prisma.ProgramTaskSubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskSubmissionInclude<ExtArgs> | null
}
