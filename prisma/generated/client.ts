
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'
import { fileURLToPath } from 'node:url'
const __dirname = path.dirname(fileURLToPath(import.meta.url))

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums"
import * as $Class from "./internal/class"
import * as Prisma from "./internal/prismaNamespace"

export * as $Enums from './enums'
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more AdWatchHistories
 * const adWatchHistories = await prisma.adWatchHistory.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions, Log = $Class.LogOptions<ClientOptions>, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<ClientOptions, Log, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-debian-openssl-3.0.x.so.node")
path.join(process.cwd(), "prisma/generated/libquery_engine-debian-openssl-3.0.x.so.node")

// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-debian-openssl-1.1.x.so.node")
path.join(process.cwd(), "prisma/generated/libquery_engine-debian-openssl-1.1.x.so.node")

/**
 * Model AdWatchHistory
 * 
 */
export type AdWatchHistory = Prisma.AdWatchHistoryModel
/**
 * Model AdWatchSession
 * 
 */
export type AdWatchSession = Prisma.AdWatchSessionModel
/**
 * Model Advertisement
 * 
 */
export type Advertisement = Prisma.AdvertisementModel
/**
 * Model Announcement
 * 
 */
export type Announcement = Prisma.AnnouncementModel
/**
 * Model Article
 * 
 */
export type Article = Prisma.ArticleModel
/**
 * Model CVClinicClaim
 * 
 */
export type CVClinicClaim = Prisma.CVClinicClaimModel
/**
 * Model CVClinicVouchers
 * 
 */
export type CVClinicVouchers = Prisma.CVClinicVouchersModel
/**
 * Model DashboardNotification
 * 
 */
export type DashboardNotification = Prisma.DashboardNotificationModel
/**
 * Model DashboardNotificationUserRead
 * 
 */
export type DashboardNotificationUserRead = Prisma.DashboardNotificationUserReadModel
/**
 * Model Event
 * 
 */
export type Event = Prisma.EventModel
/**
 * Model EventDate
 * 
 */
export type EventDate = Prisma.EventDateModel
/**
 * Model EventRegistration
 * 
 */
export type EventRegistration = Prisma.EventRegistrationModel
/**
 * Model Exhibitor
 * 
 */
export type Exhibitor = Prisma.ExhibitorModel
/**
 * Model ExploreITFunfact
 * 
 */
export type ExploreITFunfact = Prisma.ExploreITFunfactModel
/**
 * Model Feedback
 * 
 */
export type Feedback = Prisma.FeedbackModel
/**
 * Model FeedbackOption
 * 
 */
export type FeedbackOption = Prisma.FeedbackOptionModel
/**
 * Model FeedbackQuestion
 * 
 */
export type FeedbackQuestion = Prisma.FeedbackQuestionModel
/**
 * Model FeedbackSubmission
 * 
 */
export type FeedbackSubmission = Prisma.FeedbackSubmissionModel
/**
 * Model Game
 * 
 */
export type Game = Prisma.GameModel
/**
 * Model GameDeveloper
 * 
 */
export type GameDeveloper = Prisma.GameDeveloperModel
/**
 * Model GameRule
 * 
 */
export type GameRule = Prisma.GameRuleModel
/**
 * Model GrandLaunchingRegistration
 * 
 */
export type GrandLaunchingRegistration = Prisma.GrandLaunchingRegistrationModel
/**
 * Model LeaderBoardHistory
 * 
 */
export type LeaderBoardHistory = Prisma.LeaderBoardHistoryModel
/**
 * Model Member
 * 
 */
export type Member = Prisma.MemberModel
/**
 * Model MiniQuiz
 * 
 */
export type MiniQuiz = Prisma.MiniQuizModel
/**
 * Model MiniQuizAttempt
 * 
 */
export type MiniQuizAttempt = Prisma.MiniQuizAttemptModel
/**
 * Model MiniQuizQuestion
 * 
 */
export type MiniQuizQuestion = Prisma.MiniQuizQuestionModel
/**
 * Model Nominee
 * 
 */
export type Nominee = Prisma.NomineeModel
/**
 * Model NomineeVote
 * 
 */
export type NomineeVote = Prisma.NomineeVoteModel
/**
 * Model PlaygroundExpenseHistory
 * 
 */
export type PlaygroundExpenseHistory = Prisma.PlaygroundExpenseHistoryModel
/**
 * Model PlaygroundRewardHistory
 * 
 */
export type PlaygroundRewardHistory = Prisma.PlaygroundRewardHistoryModel
/**
 * Model PlaygroundToken
 * 
 */
export type PlaygroundToken = Prisma.PlaygroundTokenModel
/**
 * Model Program
 * 
 */
export type Program = Prisma.ProgramModel
/**
 * Model ProgramRegistration
 * 
 */
export type ProgramRegistration = Prisma.ProgramRegistrationModel
/**
 * Model ProgramTask
 * 
 */
export type ProgramTask = Prisma.ProgramTaskModel
/**
 * Model ProgramTaskExtraDescription
 * 
 */
export type ProgramTaskExtraDescription = Prisma.ProgramTaskExtraDescriptionModel
/**
 * Model ProgramTaskSubmission
 * 
 */
export type ProgramTaskSubmission = Prisma.ProgramTaskSubmissionModel
/**
 * Model Project
 * 
 */
export type Project = Prisma.ProjectModel
/**
 * Model ReferalCodeUsage
 * 
 */
export type ReferalCodeUsage = Prisma.ReferalCodeUsageModel
/**
 * Model SingleParticipant
 * 
 */
export type SingleParticipant = Prisma.SingleParticipantModel
/**
 * Model Team
 * 
 */
export type Team = Prisma.TeamModel
/**
 * Model UserData
 * 
 */
export type UserData = Prisma.UserDataModel
/**
 * Model UserPlayGameHistory
 * 
 */
export type UserPlayGameHistory = Prisma.UserPlayGameHistoryModel
/**
 * Model UserPlayground
 * 
 */
export type UserPlayground = Prisma.UserPlaygroundModel
/**
 * Model UserPlaygroundDetention
 * 
 */
export type UserPlaygroundDetention = Prisma.UserPlaygroundDetentionModel
/**
 * Model account
 * 
 */
export type account = Prisma.accountModel
/**
 * Model rateLimit
 * 
 */
export type rateLimit = Prisma.rateLimitModel
/**
 * Model session
 * 
 */
export type session = Prisma.sessionModel
/**
 * Model user
 * 
 */
export type user = Prisma.userModel
/**
 * Model verification
 * 
 */
export type verification = Prisma.verificationModel

export type ACADEMY_TYPE = $Enums.ACADEMY_TYPE
export const ACADEMY_TYPE = $Enums.ACADEMY_TYPE

export type CV_STATUS = $Enums.CV_STATUS
export const CV_STATUS = $Enums.CV_STATUS

export type DETENTION_STATE = $Enums.DETENTION_STATE
export const DETENTION_STATE = $Enums.DETENTION_STATE

export type EVENT_TYPE = $Enums.EVENT_TYPE
export const EVENT_TYPE = $Enums.EVENT_TYPE

export type FILE_TYPE = $Enums.FILE_TYPE
export const FILE_TYPE = $Enums.FILE_TYPE

export type GameOrientation = $Enums.GameOrientation
export const GameOrientation = $Enums.GameOrientation

export type INVITATION_STATUS = $Enums.INVITATION_STATUS
export const INVITATION_STATUS = $Enums.INVITATION_STATUS

export type KNOW_EVENT_SOURCE = $Enums.KNOW_EVENT_SOURCE
export const KNOW_EVENT_SOURCE = $Enums.KNOW_EVENT_SOURCE

export type NOMINEE_TYPE = $Enums.NOMINEE_TYPE
export const NOMINEE_TYPE = $Enums.NOMINEE_TYPE

export type PROGRAM_CODE = $Enums.PROGRAM_CODE
export const PROGRAM_CODE = $Enums.PROGRAM_CODE

export type PROGRAM_TASK_TYPE = $Enums.PROGRAM_TASK_TYPE
export const PROGRAM_TASK_TYPE = $Enums.PROGRAM_TASK_TYPE

export type PROGRAM_TYPE = $Enums.PROGRAM_TYPE
export const PROGRAM_TYPE = $Enums.PROGRAM_TYPE

export type QuestionType = $Enums.QuestionType
export const QuestionType = $Enums.QuestionType

export type RewardType = $Enums.RewardType
export const RewardType = $Enums.RewardType

export type SUBMISSION_STATUS = $Enums.SUBMISSION_STATUS
export const SUBMISSION_STATUS = $Enums.SUBMISSION_STATUS

export type TEAM_STATUS = $Enums.TEAM_STATUS
export const TEAM_STATUS = $Enums.TEAM_STATUS

export type TOKEN_TYPE = $Enums.TOKEN_TYPE
export const TOKEN_TYPE = $Enums.TOKEN_TYPE
