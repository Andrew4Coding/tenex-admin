
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ProgramTaskExtraDescription` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ProgramTaskExtraDescription
 * 
 */
export type ProgramTaskExtraDescriptionModel = runtime.Types.Result.DefaultSelection<Prisma.$ProgramTaskExtraDescriptionPayload>

export type AggregateProgramTaskExtraDescription = {
  _count: ProgramTaskExtraDescriptionCountAggregateOutputType | null
  _min: ProgramTaskExtraDescriptionMinAggregateOutputType | null
  _max: ProgramTaskExtraDescriptionMaxAggregateOutputType | null
}

export type ProgramTaskExtraDescriptionMinAggregateOutputType = {
  id: string | null
  taskId: string | null
  description: string | null
  createdAt: Date | null
  updatedAt: Date | null
  forProgram: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskExtraDescriptionMaxAggregateOutputType = {
  id: string | null
  taskId: string | null
  description: string | null
  createdAt: Date | null
  updatedAt: Date | null
  forProgram: $Enums.PROGRAM_CODE | null
}

export type ProgramTaskExtraDescriptionCountAggregateOutputType = {
  id: number
  taskId: number
  description: number
  createdAt: number
  updatedAt: number
  forProgram: number
  _all: number
}


export type ProgramTaskExtraDescriptionMinAggregateInputType = {
  id?: true
  taskId?: true
  description?: true
  createdAt?: true
  updatedAt?: true
  forProgram?: true
}

export type ProgramTaskExtraDescriptionMaxAggregateInputType = {
  id?: true
  taskId?: true
  description?: true
  createdAt?: true
  updatedAt?: true
  forProgram?: true
}

export type ProgramTaskExtraDescriptionCountAggregateInputType = {
  id?: true
  taskId?: true
  description?: true
  createdAt?: true
  updatedAt?: true
  forProgram?: true
  _all?: true
}

export type ProgramTaskExtraDescriptionAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProgramTaskExtraDescription to aggregate.
   */
  where?: Prisma.ProgramTaskExtraDescriptionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramTaskExtraDescriptions to fetch.
   */
  orderBy?: Prisma.ProgramTaskExtraDescriptionOrderByWithRelationInput | Prisma.ProgramTaskExtraDescriptionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramTaskExtraDescriptions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramTaskExtraDescriptions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ProgramTaskExtraDescriptions
  **/
  _count?: true | ProgramTaskExtraDescriptionCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProgramTaskExtraDescriptionMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProgramTaskExtraDescriptionMaxAggregateInputType
}

export type GetProgramTaskExtraDescriptionAggregateType<T extends ProgramTaskExtraDescriptionAggregateArgs> = {
      [P in keyof T & keyof AggregateProgramTaskExtraDescription]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProgramTaskExtraDescription[P]>
    : Prisma.GetScalarType<T[P], AggregateProgramTaskExtraDescription[P]>
}




export type ProgramTaskExtraDescriptionGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProgramTaskExtraDescriptionWhereInput
  orderBy?: Prisma.ProgramTaskExtraDescriptionOrderByWithAggregationInput | Prisma.ProgramTaskExtraDescriptionOrderByWithAggregationInput[]
  by: Prisma.ProgramTaskExtraDescriptionScalarFieldEnum[] | Prisma.ProgramTaskExtraDescriptionScalarFieldEnum
  having?: Prisma.ProgramTaskExtraDescriptionScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProgramTaskExtraDescriptionCountAggregateInputType | true
  _min?: ProgramTaskExtraDescriptionMinAggregateInputType
  _max?: ProgramTaskExtraDescriptionMaxAggregateInputType
}

export type ProgramTaskExtraDescriptionGroupByOutputType = {
  id: string
  taskId: string
  description: string
  createdAt: Date
  updatedAt: Date
  forProgram: $Enums.PROGRAM_CODE
  _count: ProgramTaskExtraDescriptionCountAggregateOutputType | null
  _min: ProgramTaskExtraDescriptionMinAggregateOutputType | null
  _max: ProgramTaskExtraDescriptionMaxAggregateOutputType | null
}

type GetProgramTaskExtraDescriptionGroupByPayload<T extends ProgramTaskExtraDescriptionGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProgramTaskExtraDescriptionGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProgramTaskExtraDescriptionGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProgramTaskExtraDescriptionGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProgramTaskExtraDescriptionGroupByOutputType[P]>
      }
    >
  > 



export type ProgramTaskExtraDescriptionWhereInput = {
  AND?: Prisma.ProgramTaskExtraDescriptionWhereInput | Prisma.ProgramTaskExtraDescriptionWhereInput[]
  OR?: Prisma.ProgramTaskExtraDescriptionWhereInput[]
  NOT?: Prisma.ProgramTaskExtraDescriptionWhereInput | Prisma.ProgramTaskExtraDescriptionWhereInput[]
  id?: Prisma.StringFilter<"ProgramTaskExtraDescription"> | string
  taskId?: Prisma.StringFilter<"ProgramTaskExtraDescription"> | string
  description?: Prisma.StringFilter<"ProgramTaskExtraDescription"> | string
  createdAt?: Prisma.DateTimeFilter<"ProgramTaskExtraDescription"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProgramTaskExtraDescription"> | Date | string
  forProgram?: Prisma.EnumPROGRAM_CODEFilter<"ProgramTaskExtraDescription"> | $Enums.PROGRAM_CODE
  ProgramTask?: Prisma.XOR<Prisma.ProgramTaskScalarRelationFilter, Prisma.ProgramTaskWhereInput>
}

export type ProgramTaskExtraDescriptionOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  taskId?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  forProgram?: Prisma.SortOrder
  ProgramTask?: Prisma.ProgramTaskOrderByWithRelationInput
}

export type ProgramTaskExtraDescriptionWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ProgramTaskExtraDescriptionWhereInput | Prisma.ProgramTaskExtraDescriptionWhereInput[]
  OR?: Prisma.ProgramTaskExtraDescriptionWhereInput[]
  NOT?: Prisma.ProgramTaskExtraDescriptionWhereInput | Prisma.ProgramTaskExtraDescriptionWhereInput[]
  taskId?: Prisma.StringFilter<"ProgramTaskExtraDescription"> | string
  description?: Prisma.StringFilter<"ProgramTaskExtraDescription"> | string
  createdAt?: Prisma.DateTimeFilter<"ProgramTaskExtraDescription"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProgramTaskExtraDescription"> | Date | string
  forProgram?: Prisma.EnumPROGRAM_CODEFilter<"ProgramTaskExtraDescription"> | $Enums.PROGRAM_CODE
  ProgramTask?: Prisma.XOR<Prisma.ProgramTaskScalarRelationFilter, Prisma.ProgramTaskWhereInput>
}, "id">

export type ProgramTaskExtraDescriptionOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  taskId?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  forProgram?: Prisma.SortOrder
  _count?: Prisma.ProgramTaskExtraDescriptionCountOrderByAggregateInput
  _max?: Prisma.ProgramTaskExtraDescriptionMaxOrderByAggregateInput
  _min?: Prisma.ProgramTaskExtraDescriptionMinOrderByAggregateInput
}

export type ProgramTaskExtraDescriptionScalarWhereWithAggregatesInput = {
  AND?: Prisma.ProgramTaskExtraDescriptionScalarWhereWithAggregatesInput | Prisma.ProgramTaskExtraDescriptionScalarWhereWithAggregatesInput[]
  OR?: Prisma.ProgramTaskExtraDescriptionScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ProgramTaskExtraDescriptionScalarWhereWithAggregatesInput | Prisma.ProgramTaskExtraDescriptionScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ProgramTaskExtraDescription"> | string
  taskId?: Prisma.StringWithAggregatesFilter<"ProgramTaskExtraDescription"> | string
  description?: Prisma.StringWithAggregatesFilter<"ProgramTaskExtraDescription"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ProgramTaskExtraDescription"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ProgramTaskExtraDescription"> | Date | string
  forProgram?: Prisma.EnumPROGRAM_CODEWithAggregatesFilter<"ProgramTaskExtraDescription"> | $Enums.PROGRAM_CODE
}

export type ProgramTaskExtraDescriptionCreateInput = {
  id: string
  description: string
  createdAt?: Date | string
  updatedAt: Date | string
  forProgram: $Enums.PROGRAM_CODE
  ProgramTask: Prisma.ProgramTaskCreateNestedOneWithoutProgramTaskExtraDescriptionInput
}

export type ProgramTaskExtraDescriptionUncheckedCreateInput = {
  id: string
  taskId: string
  description: string
  createdAt?: Date | string
  updatedAt: Date | string
  forProgram: $Enums.PROGRAM_CODE
}

export type ProgramTaskExtraDescriptionUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  forProgram?: Prisma.EnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE
  ProgramTask?: Prisma.ProgramTaskUpdateOneRequiredWithoutProgramTaskExtraDescriptionNestedInput
}

export type ProgramTaskExtraDescriptionUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  taskId?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  forProgram?: Prisma.EnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE
}

export type ProgramTaskExtraDescriptionCreateManyInput = {
  id: string
  taskId: string
  description: string
  createdAt?: Date | string
  updatedAt: Date | string
  forProgram: $Enums.PROGRAM_CODE
}

export type ProgramTaskExtraDescriptionUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  forProgram?: Prisma.EnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE
}

export type ProgramTaskExtraDescriptionUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  taskId?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  forProgram?: Prisma.EnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE
}

export type ProgramTaskExtraDescriptionListRelationFilter = {
  every?: Prisma.ProgramTaskExtraDescriptionWhereInput
  some?: Prisma.ProgramTaskExtraDescriptionWhereInput
  none?: Prisma.ProgramTaskExtraDescriptionWhereInput
}

export type ProgramTaskExtraDescriptionOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ProgramTaskExtraDescriptionCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  taskId?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  forProgram?: Prisma.SortOrder
}

export type ProgramTaskExtraDescriptionMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  taskId?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  forProgram?: Prisma.SortOrder
}

export type ProgramTaskExtraDescriptionMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  taskId?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  forProgram?: Prisma.SortOrder
}

export type ProgramTaskExtraDescriptionCreateNestedManyWithoutProgramTaskInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionCreateWithoutProgramTaskInput, Prisma.ProgramTaskExtraDescriptionUncheckedCreateWithoutProgramTaskInput> | Prisma.ProgramTaskExtraDescriptionCreateWithoutProgramTaskInput[] | Prisma.ProgramTaskExtraDescriptionUncheckedCreateWithoutProgramTaskInput[]
  connectOrCreate?: Prisma.ProgramTaskExtraDescriptionCreateOrConnectWithoutProgramTaskInput | Prisma.ProgramTaskExtraDescriptionCreateOrConnectWithoutProgramTaskInput[]
  createMany?: Prisma.ProgramTaskExtraDescriptionCreateManyProgramTaskInputEnvelope
  connect?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput | Prisma.ProgramTaskExtraDescriptionWhereUniqueInput[]
}

export type ProgramTaskExtraDescriptionUncheckedCreateNestedManyWithoutProgramTaskInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionCreateWithoutProgramTaskInput, Prisma.ProgramTaskExtraDescriptionUncheckedCreateWithoutProgramTaskInput> | Prisma.ProgramTaskExtraDescriptionCreateWithoutProgramTaskInput[] | Prisma.ProgramTaskExtraDescriptionUncheckedCreateWithoutProgramTaskInput[]
  connectOrCreate?: Prisma.ProgramTaskExtraDescriptionCreateOrConnectWithoutProgramTaskInput | Prisma.ProgramTaskExtraDescriptionCreateOrConnectWithoutProgramTaskInput[]
  createMany?: Prisma.ProgramTaskExtraDescriptionCreateManyProgramTaskInputEnvelope
  connect?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput | Prisma.ProgramTaskExtraDescriptionWhereUniqueInput[]
}

export type ProgramTaskExtraDescriptionUpdateManyWithoutProgramTaskNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionCreateWithoutProgramTaskInput, Prisma.ProgramTaskExtraDescriptionUncheckedCreateWithoutProgramTaskInput> | Prisma.ProgramTaskExtraDescriptionCreateWithoutProgramTaskInput[] | Prisma.ProgramTaskExtraDescriptionUncheckedCreateWithoutProgramTaskInput[]
  connectOrCreate?: Prisma.ProgramTaskExtraDescriptionCreateOrConnectWithoutProgramTaskInput | Prisma.ProgramTaskExtraDescriptionCreateOrConnectWithoutProgramTaskInput[]
  upsert?: Prisma.ProgramTaskExtraDescriptionUpsertWithWhereUniqueWithoutProgramTaskInput | Prisma.ProgramTaskExtraDescriptionUpsertWithWhereUniqueWithoutProgramTaskInput[]
  createMany?: Prisma.ProgramTaskExtraDescriptionCreateManyProgramTaskInputEnvelope
  set?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput | Prisma.ProgramTaskExtraDescriptionWhereUniqueInput[]
  disconnect?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput | Prisma.ProgramTaskExtraDescriptionWhereUniqueInput[]
  delete?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput | Prisma.ProgramTaskExtraDescriptionWhereUniqueInput[]
  connect?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput | Prisma.ProgramTaskExtraDescriptionWhereUniqueInput[]
  update?: Prisma.ProgramTaskExtraDescriptionUpdateWithWhereUniqueWithoutProgramTaskInput | Prisma.ProgramTaskExtraDescriptionUpdateWithWhereUniqueWithoutProgramTaskInput[]
  updateMany?: Prisma.ProgramTaskExtraDescriptionUpdateManyWithWhereWithoutProgramTaskInput | Prisma.ProgramTaskExtraDescriptionUpdateManyWithWhereWithoutProgramTaskInput[]
  deleteMany?: Prisma.ProgramTaskExtraDescriptionScalarWhereInput | Prisma.ProgramTaskExtraDescriptionScalarWhereInput[]
}

export type ProgramTaskExtraDescriptionUncheckedUpdateManyWithoutProgramTaskNestedInput = {
  create?: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionCreateWithoutProgramTaskInput, Prisma.ProgramTaskExtraDescriptionUncheckedCreateWithoutProgramTaskInput> | Prisma.ProgramTaskExtraDescriptionCreateWithoutProgramTaskInput[] | Prisma.ProgramTaskExtraDescriptionUncheckedCreateWithoutProgramTaskInput[]
  connectOrCreate?: Prisma.ProgramTaskExtraDescriptionCreateOrConnectWithoutProgramTaskInput | Prisma.ProgramTaskExtraDescriptionCreateOrConnectWithoutProgramTaskInput[]
  upsert?: Prisma.ProgramTaskExtraDescriptionUpsertWithWhereUniqueWithoutProgramTaskInput | Prisma.ProgramTaskExtraDescriptionUpsertWithWhereUniqueWithoutProgramTaskInput[]
  createMany?: Prisma.ProgramTaskExtraDescriptionCreateManyProgramTaskInputEnvelope
  set?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput | Prisma.ProgramTaskExtraDescriptionWhereUniqueInput[]
  disconnect?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput | Prisma.ProgramTaskExtraDescriptionWhereUniqueInput[]
  delete?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput | Prisma.ProgramTaskExtraDescriptionWhereUniqueInput[]
  connect?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput | Prisma.ProgramTaskExtraDescriptionWhereUniqueInput[]
  update?: Prisma.ProgramTaskExtraDescriptionUpdateWithWhereUniqueWithoutProgramTaskInput | Prisma.ProgramTaskExtraDescriptionUpdateWithWhereUniqueWithoutProgramTaskInput[]
  updateMany?: Prisma.ProgramTaskExtraDescriptionUpdateManyWithWhereWithoutProgramTaskInput | Prisma.ProgramTaskExtraDescriptionUpdateManyWithWhereWithoutProgramTaskInput[]
  deleteMany?: Prisma.ProgramTaskExtraDescriptionScalarWhereInput | Prisma.ProgramTaskExtraDescriptionScalarWhereInput[]
}

export type ProgramTaskExtraDescriptionCreateWithoutProgramTaskInput = {
  id: string
  description: string
  createdAt?: Date | string
  updatedAt: Date | string
  forProgram: $Enums.PROGRAM_CODE
}

export type ProgramTaskExtraDescriptionUncheckedCreateWithoutProgramTaskInput = {
  id: string
  description: string
  createdAt?: Date | string
  updatedAt: Date | string
  forProgram: $Enums.PROGRAM_CODE
}

export type ProgramTaskExtraDescriptionCreateOrConnectWithoutProgramTaskInput = {
  where: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
  create: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionCreateWithoutProgramTaskInput, Prisma.ProgramTaskExtraDescriptionUncheckedCreateWithoutProgramTaskInput>
}

export type ProgramTaskExtraDescriptionCreateManyProgramTaskInputEnvelope = {
  data: Prisma.ProgramTaskExtraDescriptionCreateManyProgramTaskInput | Prisma.ProgramTaskExtraDescriptionCreateManyProgramTaskInput[]
  skipDuplicates?: boolean
}

export type ProgramTaskExtraDescriptionUpsertWithWhereUniqueWithoutProgramTaskInput = {
  where: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
  update: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionUpdateWithoutProgramTaskInput, Prisma.ProgramTaskExtraDescriptionUncheckedUpdateWithoutProgramTaskInput>
  create: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionCreateWithoutProgramTaskInput, Prisma.ProgramTaskExtraDescriptionUncheckedCreateWithoutProgramTaskInput>
}

export type ProgramTaskExtraDescriptionUpdateWithWhereUniqueWithoutProgramTaskInput = {
  where: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
  data: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionUpdateWithoutProgramTaskInput, Prisma.ProgramTaskExtraDescriptionUncheckedUpdateWithoutProgramTaskInput>
}

export type ProgramTaskExtraDescriptionUpdateManyWithWhereWithoutProgramTaskInput = {
  where: Prisma.ProgramTaskExtraDescriptionScalarWhereInput
  data: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionUpdateManyMutationInput, Prisma.ProgramTaskExtraDescriptionUncheckedUpdateManyWithoutProgramTaskInput>
}

export type ProgramTaskExtraDescriptionScalarWhereInput = {
  AND?: Prisma.ProgramTaskExtraDescriptionScalarWhereInput | Prisma.ProgramTaskExtraDescriptionScalarWhereInput[]
  OR?: Prisma.ProgramTaskExtraDescriptionScalarWhereInput[]
  NOT?: Prisma.ProgramTaskExtraDescriptionScalarWhereInput | Prisma.ProgramTaskExtraDescriptionScalarWhereInput[]
  id?: Prisma.StringFilter<"ProgramTaskExtraDescription"> | string
  taskId?: Prisma.StringFilter<"ProgramTaskExtraDescription"> | string
  description?: Prisma.StringFilter<"ProgramTaskExtraDescription"> | string
  createdAt?: Prisma.DateTimeFilter<"ProgramTaskExtraDescription"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProgramTaskExtraDescription"> | Date | string
  forProgram?: Prisma.EnumPROGRAM_CODEFilter<"ProgramTaskExtraDescription"> | $Enums.PROGRAM_CODE
}

export type ProgramTaskExtraDescriptionCreateManyProgramTaskInput = {
  id: string
  description: string
  createdAt?: Date | string
  updatedAt: Date | string
  forProgram: $Enums.PROGRAM_CODE
}

export type ProgramTaskExtraDescriptionUpdateWithoutProgramTaskInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  forProgram?: Prisma.EnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE
}

export type ProgramTaskExtraDescriptionUncheckedUpdateWithoutProgramTaskInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  forProgram?: Prisma.EnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE
}

export type ProgramTaskExtraDescriptionUncheckedUpdateManyWithoutProgramTaskInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  forProgram?: Prisma.EnumPROGRAM_CODEFieldUpdateOperationsInput | $Enums.PROGRAM_CODE
}



export type ProgramTaskExtraDescriptionSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  taskId?: boolean
  description?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  forProgram?: boolean
  ProgramTask?: boolean | Prisma.ProgramTaskDefaultArgs<ExtArgs>
}, ExtArgs["result"]["programTaskExtraDescription"]>

export type ProgramTaskExtraDescriptionSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  taskId?: boolean
  description?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  forProgram?: boolean
  ProgramTask?: boolean | Prisma.ProgramTaskDefaultArgs<ExtArgs>
}, ExtArgs["result"]["programTaskExtraDescription"]>

export type ProgramTaskExtraDescriptionSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  taskId?: boolean
  description?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  forProgram?: boolean
  ProgramTask?: boolean | Prisma.ProgramTaskDefaultArgs<ExtArgs>
}, ExtArgs["result"]["programTaskExtraDescription"]>

export type ProgramTaskExtraDescriptionSelectScalar = {
  id?: boolean
  taskId?: boolean
  description?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  forProgram?: boolean
}

export type ProgramTaskExtraDescriptionOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "taskId" | "description" | "createdAt" | "updatedAt" | "forProgram", ExtArgs["result"]["programTaskExtraDescription"]>
export type ProgramTaskExtraDescriptionInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ProgramTask?: boolean | Prisma.ProgramTaskDefaultArgs<ExtArgs>
}
export type ProgramTaskExtraDescriptionIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ProgramTask?: boolean | Prisma.ProgramTaskDefaultArgs<ExtArgs>
}
export type ProgramTaskExtraDescriptionIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ProgramTask?: boolean | Prisma.ProgramTaskDefaultArgs<ExtArgs>
}

export type $ProgramTaskExtraDescriptionPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ProgramTaskExtraDescription"
  objects: {
    ProgramTask: Prisma.$ProgramTaskPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    taskId: string
    description: string
    createdAt: Date
    updatedAt: Date
    forProgram: $Enums.PROGRAM_CODE
  }, ExtArgs["result"]["programTaskExtraDescription"]>
  composites: {}
}

export type ProgramTaskExtraDescriptionGetPayload<S extends boolean | null | undefined | ProgramTaskExtraDescriptionDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload, S>

export type ProgramTaskExtraDescriptionCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ProgramTaskExtraDescriptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ProgramTaskExtraDescriptionCountAggregateInputType | true
  }

export interface ProgramTaskExtraDescriptionDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProgramTaskExtraDescription'], meta: { name: 'ProgramTaskExtraDescription' } }
  /**
   * Find zero or one ProgramTaskExtraDescription that matches the filter.
   * @param {ProgramTaskExtraDescriptionFindUniqueArgs} args - Arguments to find a ProgramTaskExtraDescription
   * @example
   * // Get one ProgramTaskExtraDescription
   * const programTaskExtraDescription = await prisma.programTaskExtraDescription.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ProgramTaskExtraDescriptionFindUniqueArgs>(args: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskExtraDescriptionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ProgramTaskExtraDescription that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ProgramTaskExtraDescriptionFindUniqueOrThrowArgs} args - Arguments to find a ProgramTaskExtraDescription
   * @example
   * // Get one ProgramTaskExtraDescription
   * const programTaskExtraDescription = await prisma.programTaskExtraDescription.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ProgramTaskExtraDescriptionFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskExtraDescriptionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProgramTaskExtraDescription that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskExtraDescriptionFindFirstArgs} args - Arguments to find a ProgramTaskExtraDescription
   * @example
   * // Get one ProgramTaskExtraDescription
   * const programTaskExtraDescription = await prisma.programTaskExtraDescription.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ProgramTaskExtraDescriptionFindFirstArgs>(args?: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionFindFirstArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskExtraDescriptionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProgramTaskExtraDescription that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskExtraDescriptionFindFirstOrThrowArgs} args - Arguments to find a ProgramTaskExtraDescription
   * @example
   * // Get one ProgramTaskExtraDescription
   * const programTaskExtraDescription = await prisma.programTaskExtraDescription.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ProgramTaskExtraDescriptionFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskExtraDescriptionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ProgramTaskExtraDescriptions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskExtraDescriptionFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ProgramTaskExtraDescriptions
   * const programTaskExtraDescriptions = await prisma.programTaskExtraDescription.findMany()
   * 
   * // Get first 10 ProgramTaskExtraDescriptions
   * const programTaskExtraDescriptions = await prisma.programTaskExtraDescription.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const programTaskExtraDescriptionWithIdOnly = await prisma.programTaskExtraDescription.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ProgramTaskExtraDescriptionFindManyArgs>(args?: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ProgramTaskExtraDescription.
   * @param {ProgramTaskExtraDescriptionCreateArgs} args - Arguments to create a ProgramTaskExtraDescription.
   * @example
   * // Create one ProgramTaskExtraDescription
   * const ProgramTaskExtraDescription = await prisma.programTaskExtraDescription.create({
   *   data: {
   *     // ... data to create a ProgramTaskExtraDescription
   *   }
   * })
   * 
   */
  create<T extends ProgramTaskExtraDescriptionCreateArgs>(args: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionCreateArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskExtraDescriptionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ProgramTaskExtraDescriptions.
   * @param {ProgramTaskExtraDescriptionCreateManyArgs} args - Arguments to create many ProgramTaskExtraDescriptions.
   * @example
   * // Create many ProgramTaskExtraDescriptions
   * const programTaskExtraDescription = await prisma.programTaskExtraDescription.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ProgramTaskExtraDescriptionCreateManyArgs>(args?: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ProgramTaskExtraDescriptions and returns the data saved in the database.
   * @param {ProgramTaskExtraDescriptionCreateManyAndReturnArgs} args - Arguments to create many ProgramTaskExtraDescriptions.
   * @example
   * // Create many ProgramTaskExtraDescriptions
   * const programTaskExtraDescription = await prisma.programTaskExtraDescription.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ProgramTaskExtraDescriptions and only return the `id`
   * const programTaskExtraDescriptionWithIdOnly = await prisma.programTaskExtraDescription.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ProgramTaskExtraDescriptionCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ProgramTaskExtraDescription.
   * @param {ProgramTaskExtraDescriptionDeleteArgs} args - Arguments to delete one ProgramTaskExtraDescription.
   * @example
   * // Delete one ProgramTaskExtraDescription
   * const ProgramTaskExtraDescription = await prisma.programTaskExtraDescription.delete({
   *   where: {
   *     // ... filter to delete one ProgramTaskExtraDescription
   *   }
   * })
   * 
   */
  delete<T extends ProgramTaskExtraDescriptionDeleteArgs>(args: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionDeleteArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskExtraDescriptionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ProgramTaskExtraDescription.
   * @param {ProgramTaskExtraDescriptionUpdateArgs} args - Arguments to update one ProgramTaskExtraDescription.
   * @example
   * // Update one ProgramTaskExtraDescription
   * const programTaskExtraDescription = await prisma.programTaskExtraDescription.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ProgramTaskExtraDescriptionUpdateArgs>(args: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionUpdateArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskExtraDescriptionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ProgramTaskExtraDescriptions.
   * @param {ProgramTaskExtraDescriptionDeleteManyArgs} args - Arguments to filter ProgramTaskExtraDescriptions to delete.
   * @example
   * // Delete a few ProgramTaskExtraDescriptions
   * const { count } = await prisma.programTaskExtraDescription.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ProgramTaskExtraDescriptionDeleteManyArgs>(args?: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProgramTaskExtraDescriptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskExtraDescriptionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ProgramTaskExtraDescriptions
   * const programTaskExtraDescription = await prisma.programTaskExtraDescription.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ProgramTaskExtraDescriptionUpdateManyArgs>(args: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProgramTaskExtraDescriptions and returns the data updated in the database.
   * @param {ProgramTaskExtraDescriptionUpdateManyAndReturnArgs} args - Arguments to update many ProgramTaskExtraDescriptions.
   * @example
   * // Update many ProgramTaskExtraDescriptions
   * const programTaskExtraDescription = await prisma.programTaskExtraDescription.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ProgramTaskExtraDescriptions and only return the `id`
   * const programTaskExtraDescriptionWithIdOnly = await prisma.programTaskExtraDescription.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ProgramTaskExtraDescriptionUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ProgramTaskExtraDescription.
   * @param {ProgramTaskExtraDescriptionUpsertArgs} args - Arguments to update or create a ProgramTaskExtraDescription.
   * @example
   * // Update or create a ProgramTaskExtraDescription
   * const programTaskExtraDescription = await prisma.programTaskExtraDescription.upsert({
   *   create: {
   *     // ... data to create a ProgramTaskExtraDescription
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ProgramTaskExtraDescription we want to update
   *   }
   * })
   */
  upsert<T extends ProgramTaskExtraDescriptionUpsertArgs>(args: Prisma.SelectSubset<T, ProgramTaskExtraDescriptionUpsertArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskExtraDescriptionClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskExtraDescriptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ProgramTaskExtraDescriptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskExtraDescriptionCountArgs} args - Arguments to filter ProgramTaskExtraDescriptions to count.
   * @example
   * // Count the number of ProgramTaskExtraDescriptions
   * const count = await prisma.programTaskExtraDescription.count({
   *   where: {
   *     // ... the filter for the ProgramTaskExtraDescriptions we want to count
   *   }
   * })
  **/
  count<T extends ProgramTaskExtraDescriptionCountArgs>(
    args?: Prisma.Subset<T, ProgramTaskExtraDescriptionCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProgramTaskExtraDescriptionCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ProgramTaskExtraDescription.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskExtraDescriptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProgramTaskExtraDescriptionAggregateArgs>(args: Prisma.Subset<T, ProgramTaskExtraDescriptionAggregateArgs>): Prisma.PrismaPromise<GetProgramTaskExtraDescriptionAggregateType<T>>

  /**
   * Group by ProgramTaskExtraDescription.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProgramTaskExtraDescriptionGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ProgramTaskExtraDescriptionGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ProgramTaskExtraDescriptionGroupByArgs['orderBy'] }
      : { orderBy?: ProgramTaskExtraDescriptionGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ProgramTaskExtraDescriptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgramTaskExtraDescriptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ProgramTaskExtraDescription model
 */
readonly fields: ProgramTaskExtraDescriptionFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ProgramTaskExtraDescription.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProgramTaskExtraDescriptionClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  ProgramTask<T extends Prisma.ProgramTaskDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProgramTaskDefaultArgs<ExtArgs>>): Prisma.Prisma__ProgramTaskClient<runtime.Types.Result.GetResult<Prisma.$ProgramTaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ProgramTaskExtraDescription model
 */
export interface ProgramTaskExtraDescriptionFieldRefs {
  readonly id: Prisma.FieldRef<"ProgramTaskExtraDescription", 'String'>
  readonly taskId: Prisma.FieldRef<"ProgramTaskExtraDescription", 'String'>
  readonly description: Prisma.FieldRef<"ProgramTaskExtraDescription", 'String'>
  readonly createdAt: Prisma.FieldRef<"ProgramTaskExtraDescription", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ProgramTaskExtraDescription", 'DateTime'>
  readonly forProgram: Prisma.FieldRef<"ProgramTaskExtraDescription", 'PROGRAM_CODE'>
}
    

// Custom InputTypes
/**
 * ProgramTaskExtraDescription findUnique
 */
export type ProgramTaskExtraDescriptionFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTaskExtraDescription to fetch.
   */
  where: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
}

/**
 * ProgramTaskExtraDescription findUniqueOrThrow
 */
export type ProgramTaskExtraDescriptionFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTaskExtraDescription to fetch.
   */
  where: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
}

/**
 * ProgramTaskExtraDescription findFirst
 */
export type ProgramTaskExtraDescriptionFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTaskExtraDescription to fetch.
   */
  where?: Prisma.ProgramTaskExtraDescriptionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramTaskExtraDescriptions to fetch.
   */
  orderBy?: Prisma.ProgramTaskExtraDescriptionOrderByWithRelationInput | Prisma.ProgramTaskExtraDescriptionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProgramTaskExtraDescriptions.
   */
  cursor?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramTaskExtraDescriptions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramTaskExtraDescriptions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProgramTaskExtraDescriptions.
   */
  distinct?: Prisma.ProgramTaskExtraDescriptionScalarFieldEnum | Prisma.ProgramTaskExtraDescriptionScalarFieldEnum[]
}

/**
 * ProgramTaskExtraDescription findFirstOrThrow
 */
export type ProgramTaskExtraDescriptionFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTaskExtraDescription to fetch.
   */
  where?: Prisma.ProgramTaskExtraDescriptionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramTaskExtraDescriptions to fetch.
   */
  orderBy?: Prisma.ProgramTaskExtraDescriptionOrderByWithRelationInput | Prisma.ProgramTaskExtraDescriptionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProgramTaskExtraDescriptions.
   */
  cursor?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramTaskExtraDescriptions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramTaskExtraDescriptions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProgramTaskExtraDescriptions.
   */
  distinct?: Prisma.ProgramTaskExtraDescriptionScalarFieldEnum | Prisma.ProgramTaskExtraDescriptionScalarFieldEnum[]
}

/**
 * ProgramTaskExtraDescription findMany
 */
export type ProgramTaskExtraDescriptionFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionInclude<ExtArgs> | null
  /**
   * Filter, which ProgramTaskExtraDescriptions to fetch.
   */
  where?: Prisma.ProgramTaskExtraDescriptionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProgramTaskExtraDescriptions to fetch.
   */
  orderBy?: Prisma.ProgramTaskExtraDescriptionOrderByWithRelationInput | Prisma.ProgramTaskExtraDescriptionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ProgramTaskExtraDescriptions.
   */
  cursor?: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProgramTaskExtraDescriptions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProgramTaskExtraDescriptions.
   */
  skip?: number
  distinct?: Prisma.ProgramTaskExtraDescriptionScalarFieldEnum | Prisma.ProgramTaskExtraDescriptionScalarFieldEnum[]
}

/**
 * ProgramTaskExtraDescription create
 */
export type ProgramTaskExtraDescriptionCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionInclude<ExtArgs> | null
  /**
   * The data needed to create a ProgramTaskExtraDescription.
   */
  data: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionCreateInput, Prisma.ProgramTaskExtraDescriptionUncheckedCreateInput>
}

/**
 * ProgramTaskExtraDescription createMany
 */
export type ProgramTaskExtraDescriptionCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ProgramTaskExtraDescriptions.
   */
  data: Prisma.ProgramTaskExtraDescriptionCreateManyInput | Prisma.ProgramTaskExtraDescriptionCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ProgramTaskExtraDescription createManyAndReturn
 */
export type ProgramTaskExtraDescriptionCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * The data used to create many ProgramTaskExtraDescriptions.
   */
  data: Prisma.ProgramTaskExtraDescriptionCreateManyInput | Prisma.ProgramTaskExtraDescriptionCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ProgramTaskExtraDescription update
 */
export type ProgramTaskExtraDescriptionUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionInclude<ExtArgs> | null
  /**
   * The data needed to update a ProgramTaskExtraDescription.
   */
  data: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionUpdateInput, Prisma.ProgramTaskExtraDescriptionUncheckedUpdateInput>
  /**
   * Choose, which ProgramTaskExtraDescription to update.
   */
  where: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
}

/**
 * ProgramTaskExtraDescription updateMany
 */
export type ProgramTaskExtraDescriptionUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ProgramTaskExtraDescriptions.
   */
  data: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionUpdateManyMutationInput, Prisma.ProgramTaskExtraDescriptionUncheckedUpdateManyInput>
  /**
   * Filter which ProgramTaskExtraDescriptions to update
   */
  where?: Prisma.ProgramTaskExtraDescriptionWhereInput
  /**
   * Limit how many ProgramTaskExtraDescriptions to update.
   */
  limit?: number
}

/**
 * ProgramTaskExtraDescription updateManyAndReturn
 */
export type ProgramTaskExtraDescriptionUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * The data used to update ProgramTaskExtraDescriptions.
   */
  data: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionUpdateManyMutationInput, Prisma.ProgramTaskExtraDescriptionUncheckedUpdateManyInput>
  /**
   * Filter which ProgramTaskExtraDescriptions to update
   */
  where?: Prisma.ProgramTaskExtraDescriptionWhereInput
  /**
   * Limit how many ProgramTaskExtraDescriptions to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ProgramTaskExtraDescription upsert
 */
export type ProgramTaskExtraDescriptionUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionInclude<ExtArgs> | null
  /**
   * The filter to search for the ProgramTaskExtraDescription to update in case it exists.
   */
  where: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
  /**
   * In case the ProgramTaskExtraDescription found by the `where` argument doesn't exist, create a new ProgramTaskExtraDescription with this data.
   */
  create: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionCreateInput, Prisma.ProgramTaskExtraDescriptionUncheckedCreateInput>
  /**
   * In case the ProgramTaskExtraDescription was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ProgramTaskExtraDescriptionUpdateInput, Prisma.ProgramTaskExtraDescriptionUncheckedUpdateInput>
}

/**
 * ProgramTaskExtraDescription delete
 */
export type ProgramTaskExtraDescriptionDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionInclude<ExtArgs> | null
  /**
   * Filter which ProgramTaskExtraDescription to delete.
   */
  where: Prisma.ProgramTaskExtraDescriptionWhereUniqueInput
}

/**
 * ProgramTaskExtraDescription deleteMany
 */
export type ProgramTaskExtraDescriptionDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProgramTaskExtraDescriptions to delete
   */
  where?: Prisma.ProgramTaskExtraDescriptionWhereInput
  /**
   * Limit how many ProgramTaskExtraDescriptions to delete.
   */
  limit?: number
}

/**
 * ProgramTaskExtraDescription without action
 */
export type ProgramTaskExtraDescriptionDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProgramTaskExtraDescription
   */
  select?: Prisma.ProgramTaskExtraDescriptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProgramTaskExtraDescription
   */
  omit?: Prisma.ProgramTaskExtraDescriptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramTaskExtraDescriptionInclude<ExtArgs> | null
}
