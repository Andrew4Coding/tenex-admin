
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `NomineeVote` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model NomineeVote
 * 
 */
export type NomineeVoteModel = runtime.Types.Result.DefaultSelection<Prisma.$NomineeVotePayload>

export type AggregateNomineeVote = {
  _count: NomineeVoteCountAggregateOutputType | null
  _min: NomineeVoteMinAggregateOutputType | null
  _max: NomineeVoteMaxAggregateOutputType | null
}

export type NomineeVoteMinAggregateOutputType = {
  id: string | null
  type: $Enums.NOMINEE_TYPE | null
  firstChoiceNomineeId: string | null
  secondChoiceNomineeId: string | null
  thirdChoiceNomineeId: string | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type NomineeVoteMaxAggregateOutputType = {
  id: string | null
  type: $Enums.NOMINEE_TYPE | null
  firstChoiceNomineeId: string | null
  secondChoiceNomineeId: string | null
  thirdChoiceNomineeId: string | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type NomineeVoteCountAggregateOutputType = {
  id: number
  type: number
  firstChoiceNomineeId: number
  secondChoiceNomineeId: number
  thirdChoiceNomineeId: number
  userId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type NomineeVoteMinAggregateInputType = {
  id?: true
  type?: true
  firstChoiceNomineeId?: true
  secondChoiceNomineeId?: true
  thirdChoiceNomineeId?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
}

export type NomineeVoteMaxAggregateInputType = {
  id?: true
  type?: true
  firstChoiceNomineeId?: true
  secondChoiceNomineeId?: true
  thirdChoiceNomineeId?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
}

export type NomineeVoteCountAggregateInputType = {
  id?: true
  type?: true
  firstChoiceNomineeId?: true
  secondChoiceNomineeId?: true
  thirdChoiceNomineeId?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type NomineeVoteAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which NomineeVote to aggregate.
   */
  where?: Prisma.NomineeVoteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of NomineeVotes to fetch.
   */
  orderBy?: Prisma.NomineeVoteOrderByWithRelationInput | Prisma.NomineeVoteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.NomineeVoteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` NomineeVotes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` NomineeVotes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned NomineeVotes
  **/
  _count?: true | NomineeVoteCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: NomineeVoteMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: NomineeVoteMaxAggregateInputType
}

export type GetNomineeVoteAggregateType<T extends NomineeVoteAggregateArgs> = {
      [P in keyof T & keyof AggregateNomineeVote]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateNomineeVote[P]>
    : Prisma.GetScalarType<T[P], AggregateNomineeVote[P]>
}




export type NomineeVoteGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.NomineeVoteWhereInput
  orderBy?: Prisma.NomineeVoteOrderByWithAggregationInput | Prisma.NomineeVoteOrderByWithAggregationInput[]
  by: Prisma.NomineeVoteScalarFieldEnum[] | Prisma.NomineeVoteScalarFieldEnum
  having?: Prisma.NomineeVoteScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: NomineeVoteCountAggregateInputType | true
  _min?: NomineeVoteMinAggregateInputType
  _max?: NomineeVoteMaxAggregateInputType
}

export type NomineeVoteGroupByOutputType = {
  id: string
  type: $Enums.NOMINEE_TYPE
  firstChoiceNomineeId: string | null
  secondChoiceNomineeId: string | null
  thirdChoiceNomineeId: string | null
  userId: string
  createdAt: Date
  updatedAt: Date
  _count: NomineeVoteCountAggregateOutputType | null
  _min: NomineeVoteMinAggregateOutputType | null
  _max: NomineeVoteMaxAggregateOutputType | null
}

type GetNomineeVoteGroupByPayload<T extends NomineeVoteGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<NomineeVoteGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof NomineeVoteGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], NomineeVoteGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], NomineeVoteGroupByOutputType[P]>
      }
    >
  > 



export type NomineeVoteWhereInput = {
  AND?: Prisma.NomineeVoteWhereInput | Prisma.NomineeVoteWhereInput[]
  OR?: Prisma.NomineeVoteWhereInput[]
  NOT?: Prisma.NomineeVoteWhereInput | Prisma.NomineeVoteWhereInput[]
  id?: Prisma.StringFilter<"NomineeVote"> | string
  type?: Prisma.EnumNOMINEE_TYPEFilter<"NomineeVote"> | $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: Prisma.StringNullableFilter<"NomineeVote"> | string | null
  secondChoiceNomineeId?: Prisma.StringNullableFilter<"NomineeVote"> | string | null
  thirdChoiceNomineeId?: Prisma.StringNullableFilter<"NomineeVote"> | string | null
  userId?: Prisma.StringFilter<"NomineeVote"> | string
  createdAt?: Prisma.DateTimeFilter<"NomineeVote"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"NomineeVote"> | Date | string
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: Prisma.XOR<Prisma.NomineeNullableScalarRelationFilter, Prisma.NomineeWhereInput> | null
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: Prisma.XOR<Prisma.NomineeNullableScalarRelationFilter, Prisma.NomineeWhereInput> | null
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: Prisma.XOR<Prisma.NomineeNullableScalarRelationFilter, Prisma.NomineeWhereInput> | null
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.userWhereInput>
}

export type NomineeVoteOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  firstChoiceNomineeId?: Prisma.SortOrderInput | Prisma.SortOrder
  secondChoiceNomineeId?: Prisma.SortOrderInput | Prisma.SortOrder
  thirdChoiceNomineeId?: Prisma.SortOrderInput | Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: Prisma.NomineeOrderByWithRelationInput
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: Prisma.NomineeOrderByWithRelationInput
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: Prisma.NomineeOrderByWithRelationInput
  user?: Prisma.userOrderByWithRelationInput
}

export type NomineeVoteWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.NomineeVoteWhereInput | Prisma.NomineeVoteWhereInput[]
  OR?: Prisma.NomineeVoteWhereInput[]
  NOT?: Prisma.NomineeVoteWhereInput | Prisma.NomineeVoteWhereInput[]
  type?: Prisma.EnumNOMINEE_TYPEFilter<"NomineeVote"> | $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: Prisma.StringNullableFilter<"NomineeVote"> | string | null
  secondChoiceNomineeId?: Prisma.StringNullableFilter<"NomineeVote"> | string | null
  thirdChoiceNomineeId?: Prisma.StringNullableFilter<"NomineeVote"> | string | null
  userId?: Prisma.StringFilter<"NomineeVote"> | string
  createdAt?: Prisma.DateTimeFilter<"NomineeVote"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"NomineeVote"> | Date | string
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: Prisma.XOR<Prisma.NomineeNullableScalarRelationFilter, Prisma.NomineeWhereInput> | null
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: Prisma.XOR<Prisma.NomineeNullableScalarRelationFilter, Prisma.NomineeWhereInput> | null
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: Prisma.XOR<Prisma.NomineeNullableScalarRelationFilter, Prisma.NomineeWhereInput> | null
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.userWhereInput>
}, "id">

export type NomineeVoteOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  firstChoiceNomineeId?: Prisma.SortOrderInput | Prisma.SortOrder
  secondChoiceNomineeId?: Prisma.SortOrderInput | Prisma.SortOrder
  thirdChoiceNomineeId?: Prisma.SortOrderInput | Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.NomineeVoteCountOrderByAggregateInput
  _max?: Prisma.NomineeVoteMaxOrderByAggregateInput
  _min?: Prisma.NomineeVoteMinOrderByAggregateInput
}

export type NomineeVoteScalarWhereWithAggregatesInput = {
  AND?: Prisma.NomineeVoteScalarWhereWithAggregatesInput | Prisma.NomineeVoteScalarWhereWithAggregatesInput[]
  OR?: Prisma.NomineeVoteScalarWhereWithAggregatesInput[]
  NOT?: Prisma.NomineeVoteScalarWhereWithAggregatesInput | Prisma.NomineeVoteScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"NomineeVote"> | string
  type?: Prisma.EnumNOMINEE_TYPEWithAggregatesFilter<"NomineeVote"> | $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: Prisma.StringNullableWithAggregatesFilter<"NomineeVote"> | string | null
  secondChoiceNomineeId?: Prisma.StringNullableWithAggregatesFilter<"NomineeVote"> | string | null
  thirdChoiceNomineeId?: Prisma.StringNullableWithAggregatesFilter<"NomineeVote"> | string | null
  userId?: Prisma.StringWithAggregatesFilter<"NomineeVote"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"NomineeVote"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"NomineeVote"> | Date | string
}

export type NomineeVoteCreateInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: Prisma.NomineeCreateNestedOneWithoutNomineeVote_NomineeVote_firstChoiceNomineeIdToNomineeInput
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: Prisma.NomineeCreateNestedOneWithoutNomineeVote_NomineeVote_secondChoiceNomineeIdToNomineeInput
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: Prisma.NomineeCreateNestedOneWithoutNomineeVote_NomineeVote_thirdChoiceNomineeIdToNomineeInput
  user: Prisma.userCreateNestedOneWithoutNomineeVoteInput
}

export type NomineeVoteUncheckedCreateInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: string | null
  secondChoiceNomineeId?: string | null
  thirdChoiceNomineeId?: string | null
  userId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type NomineeVoteUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: Prisma.NomineeUpdateOneWithoutNomineeVote_NomineeVote_firstChoiceNomineeIdToNomineeNestedInput
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: Prisma.NomineeUpdateOneWithoutNomineeVote_NomineeVote_secondChoiceNomineeIdToNomineeNestedInput
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: Prisma.NomineeUpdateOneWithoutNomineeVote_NomineeVote_thirdChoiceNomineeIdToNomineeNestedInput
  user?: Prisma.userUpdateOneRequiredWithoutNomineeVoteNestedInput
}

export type NomineeVoteUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thirdChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type NomineeVoteCreateManyInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: string | null
  secondChoiceNomineeId?: string | null
  thirdChoiceNomineeId?: string | null
  userId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type NomineeVoteUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type NomineeVoteUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thirdChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type NomineeVoteListRelationFilter = {
  every?: Prisma.NomineeVoteWhereInput
  some?: Prisma.NomineeVoteWhereInput
  none?: Prisma.NomineeVoteWhereInput
}

export type NomineeVoteOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type NomineeVoteCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  firstChoiceNomineeId?: Prisma.SortOrder
  secondChoiceNomineeId?: Prisma.SortOrder
  thirdChoiceNomineeId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type NomineeVoteMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  firstChoiceNomineeId?: Prisma.SortOrder
  secondChoiceNomineeId?: Prisma.SortOrder
  thirdChoiceNomineeId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type NomineeVoteMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  type?: Prisma.SortOrder
  firstChoiceNomineeId?: Prisma.SortOrder
  secondChoiceNomineeId?: Prisma.SortOrder
  thirdChoiceNomineeId?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type NomineeVoteCreateNestedManyWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput> | Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[] | Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  createMany?: Prisma.NomineeVoteCreateManyNominee_NomineeVote_firstChoiceNomineeIdToNomineeInputEnvelope
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
}

export type NomineeVoteCreateNestedManyWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput> | Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[] | Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  createMany?: Prisma.NomineeVoteCreateManyNominee_NomineeVote_secondChoiceNomineeIdToNomineeInputEnvelope
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
}

export type NomineeVoteCreateNestedManyWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput> | Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[] | Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  createMany?: Prisma.NomineeVoteCreateManyNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInputEnvelope
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
}

export type NomineeVoteUncheckedCreateNestedManyWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput> | Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[] | Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  createMany?: Prisma.NomineeVoteCreateManyNominee_NomineeVote_firstChoiceNomineeIdToNomineeInputEnvelope
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
}

export type NomineeVoteUncheckedCreateNestedManyWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput> | Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[] | Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  createMany?: Prisma.NomineeVoteCreateManyNominee_NomineeVote_secondChoiceNomineeIdToNomineeInputEnvelope
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
}

export type NomineeVoteUncheckedCreateNestedManyWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput> | Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[] | Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  createMany?: Prisma.NomineeVoteCreateManyNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInputEnvelope
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
}

export type NomineeVoteUpdateManyWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeNestedInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput> | Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[] | Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  upsert?: Prisma.NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  createMany?: Prisma.NomineeVoteCreateManyNominee_NomineeVote_firstChoiceNomineeIdToNomineeInputEnvelope
  set?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  disconnect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  delete?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  update?: Prisma.NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  updateMany?: Prisma.NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  deleteMany?: Prisma.NomineeVoteScalarWhereInput | Prisma.NomineeVoteScalarWhereInput[]
}

export type NomineeVoteUpdateManyWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeNestedInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput> | Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[] | Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  upsert?: Prisma.NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  createMany?: Prisma.NomineeVoteCreateManyNominee_NomineeVote_secondChoiceNomineeIdToNomineeInputEnvelope
  set?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  disconnect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  delete?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  update?: Prisma.NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  updateMany?: Prisma.NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  deleteMany?: Prisma.NomineeVoteScalarWhereInput | Prisma.NomineeVoteScalarWhereInput[]
}

export type NomineeVoteUpdateManyWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeNestedInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput> | Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[] | Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  upsert?: Prisma.NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  createMany?: Prisma.NomineeVoteCreateManyNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInputEnvelope
  set?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  disconnect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  delete?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  update?: Prisma.NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  updateMany?: Prisma.NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  deleteMany?: Prisma.NomineeVoteScalarWhereInput | Prisma.NomineeVoteScalarWhereInput[]
}

export type NomineeVoteUncheckedUpdateManyWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeNestedInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput> | Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[] | Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  upsert?: Prisma.NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  createMany?: Prisma.NomineeVoteCreateManyNominee_NomineeVote_firstChoiceNomineeIdToNomineeInputEnvelope
  set?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  disconnect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  delete?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  update?: Prisma.NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  updateMany?: Prisma.NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  deleteMany?: Prisma.NomineeVoteScalarWhereInput | Prisma.NomineeVoteScalarWhereInput[]
}

export type NomineeVoteUncheckedUpdateManyWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeNestedInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput> | Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[] | Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  upsert?: Prisma.NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  createMany?: Prisma.NomineeVoteCreateManyNominee_NomineeVote_secondChoiceNomineeIdToNomineeInputEnvelope
  set?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  disconnect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  delete?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  update?: Prisma.NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  updateMany?: Prisma.NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  deleteMany?: Prisma.NomineeVoteScalarWhereInput | Prisma.NomineeVoteScalarWhereInput[]
}

export type NomineeVoteUncheckedUpdateManyWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeNestedInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput> | Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[] | Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  upsert?: Prisma.NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  createMany?: Prisma.NomineeVoteCreateManyNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInputEnvelope
  set?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  disconnect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  delete?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  update?: Prisma.NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  updateMany?: Prisma.NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  deleteMany?: Prisma.NomineeVoteScalarWhereInput | Prisma.NomineeVoteScalarWhereInput[]
}

export type NomineeVoteCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutUserInput, Prisma.NomineeVoteUncheckedCreateWithoutUserInput> | Prisma.NomineeVoteCreateWithoutUserInput[] | Prisma.NomineeVoteUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutUserInput | Prisma.NomineeVoteCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.NomineeVoteCreateManyUserInputEnvelope
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
}

export type NomineeVoteUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutUserInput, Prisma.NomineeVoteUncheckedCreateWithoutUserInput> | Prisma.NomineeVoteCreateWithoutUserInput[] | Prisma.NomineeVoteUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutUserInput | Prisma.NomineeVoteCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.NomineeVoteCreateManyUserInputEnvelope
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
}

export type NomineeVoteUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutUserInput, Prisma.NomineeVoteUncheckedCreateWithoutUserInput> | Prisma.NomineeVoteCreateWithoutUserInput[] | Prisma.NomineeVoteUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutUserInput | Prisma.NomineeVoteCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.NomineeVoteUpsertWithWhereUniqueWithoutUserInput | Prisma.NomineeVoteUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.NomineeVoteCreateManyUserInputEnvelope
  set?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  disconnect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  delete?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  update?: Prisma.NomineeVoteUpdateWithWhereUniqueWithoutUserInput | Prisma.NomineeVoteUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.NomineeVoteUpdateManyWithWhereWithoutUserInput | Prisma.NomineeVoteUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.NomineeVoteScalarWhereInput | Prisma.NomineeVoteScalarWhereInput[]
}

export type NomineeVoteUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.NomineeVoteCreateWithoutUserInput, Prisma.NomineeVoteUncheckedCreateWithoutUserInput> | Prisma.NomineeVoteCreateWithoutUserInput[] | Prisma.NomineeVoteUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.NomineeVoteCreateOrConnectWithoutUserInput | Prisma.NomineeVoteCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.NomineeVoteUpsertWithWhereUniqueWithoutUserInput | Prisma.NomineeVoteUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.NomineeVoteCreateManyUserInputEnvelope
  set?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  disconnect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  delete?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  connect?: Prisma.NomineeVoteWhereUniqueInput | Prisma.NomineeVoteWhereUniqueInput[]
  update?: Prisma.NomineeVoteUpdateWithWhereUniqueWithoutUserInput | Prisma.NomineeVoteUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.NomineeVoteUpdateManyWithWhereWithoutUserInput | Prisma.NomineeVoteUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.NomineeVoteScalarWhereInput | Prisma.NomineeVoteScalarWhereInput[]
}

export type NomineeVoteCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: Prisma.NomineeCreateNestedOneWithoutNomineeVote_NomineeVote_secondChoiceNomineeIdToNomineeInput
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: Prisma.NomineeCreateNestedOneWithoutNomineeVote_NomineeVote_thirdChoiceNomineeIdToNomineeInput
  user: Prisma.userCreateNestedOneWithoutNomineeVoteInput
}

export type NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  secondChoiceNomineeId?: string | null
  thirdChoiceNomineeId?: string | null
  userId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput = {
  where: Prisma.NomineeVoteWhereUniqueInput
  create: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput>
}

export type NomineeVoteCreateManyNominee_NomineeVote_firstChoiceNomineeIdToNomineeInputEnvelope = {
  data: Prisma.NomineeVoteCreateManyNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateManyNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput[]
  skipDuplicates?: boolean
}

export type NomineeVoteCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: Prisma.NomineeCreateNestedOneWithoutNomineeVote_NomineeVote_firstChoiceNomineeIdToNomineeInput
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: Prisma.NomineeCreateNestedOneWithoutNomineeVote_NomineeVote_thirdChoiceNomineeIdToNomineeInput
  user: Prisma.userCreateNestedOneWithoutNomineeVoteInput
}

export type NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: string | null
  thirdChoiceNomineeId?: string | null
  userId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput = {
  where: Prisma.NomineeVoteWhereUniqueInput
  create: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput>
}

export type NomineeVoteCreateManyNominee_NomineeVote_secondChoiceNomineeIdToNomineeInputEnvelope = {
  data: Prisma.NomineeVoteCreateManyNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateManyNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput[]
  skipDuplicates?: boolean
}

export type NomineeVoteCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: Prisma.NomineeCreateNestedOneWithoutNomineeVote_NomineeVote_firstChoiceNomineeIdToNomineeInput
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: Prisma.NomineeCreateNestedOneWithoutNomineeVote_NomineeVote_secondChoiceNomineeIdToNomineeInput
  user: Prisma.userCreateNestedOneWithoutNomineeVoteInput
}

export type NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: string | null
  secondChoiceNomineeId?: string | null
  userId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type NomineeVoteCreateOrConnectWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput = {
  where: Prisma.NomineeVoteWhereUniqueInput
  create: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput>
}

export type NomineeVoteCreateManyNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInputEnvelope = {
  data: Prisma.NomineeVoteCreateManyNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput | Prisma.NomineeVoteCreateManyNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput[]
  skipDuplicates?: boolean
}

export type NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput = {
  where: Prisma.NomineeVoteWhereUniqueInput
  update: Prisma.XOR<Prisma.NomineeVoteUpdateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedUpdateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput>
  create: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput>
}

export type NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput = {
  where: Prisma.NomineeVoteWhereUniqueInput
  data: Prisma.XOR<Prisma.NomineeVoteUpdateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedUpdateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput>
}

export type NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput = {
  where: Prisma.NomineeVoteScalarWhereInput
  data: Prisma.XOR<Prisma.NomineeVoteUpdateManyMutationInput, Prisma.NomineeVoteUncheckedUpdateManyWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput>
}

export type NomineeVoteScalarWhereInput = {
  AND?: Prisma.NomineeVoteScalarWhereInput | Prisma.NomineeVoteScalarWhereInput[]
  OR?: Prisma.NomineeVoteScalarWhereInput[]
  NOT?: Prisma.NomineeVoteScalarWhereInput | Prisma.NomineeVoteScalarWhereInput[]
  id?: Prisma.StringFilter<"NomineeVote"> | string
  type?: Prisma.EnumNOMINEE_TYPEFilter<"NomineeVote"> | $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: Prisma.StringNullableFilter<"NomineeVote"> | string | null
  secondChoiceNomineeId?: Prisma.StringNullableFilter<"NomineeVote"> | string | null
  thirdChoiceNomineeId?: Prisma.StringNullableFilter<"NomineeVote"> | string | null
  userId?: Prisma.StringFilter<"NomineeVote"> | string
  createdAt?: Prisma.DateTimeFilter<"NomineeVote"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"NomineeVote"> | Date | string
}

export type NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput = {
  where: Prisma.NomineeVoteWhereUniqueInput
  update: Prisma.XOR<Prisma.NomineeVoteUpdateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedUpdateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput>
  create: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput>
}

export type NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput = {
  where: Prisma.NomineeVoteWhereUniqueInput
  data: Prisma.XOR<Prisma.NomineeVoteUpdateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedUpdateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput>
}

export type NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput = {
  where: Prisma.NomineeVoteScalarWhereInput
  data: Prisma.XOR<Prisma.NomineeVoteUpdateManyMutationInput, Prisma.NomineeVoteUncheckedUpdateManyWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput>
}

export type NomineeVoteUpsertWithWhereUniqueWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput = {
  where: Prisma.NomineeVoteWhereUniqueInput
  update: Prisma.XOR<Prisma.NomineeVoteUpdateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedUpdateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput>
  create: Prisma.XOR<Prisma.NomineeVoteCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedCreateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput>
}

export type NomineeVoteUpdateWithWhereUniqueWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput = {
  where: Prisma.NomineeVoteWhereUniqueInput
  data: Prisma.XOR<Prisma.NomineeVoteUpdateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput, Prisma.NomineeVoteUncheckedUpdateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput>
}

export type NomineeVoteUpdateManyWithWhereWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput = {
  where: Prisma.NomineeVoteScalarWhereInput
  data: Prisma.XOR<Prisma.NomineeVoteUpdateManyMutationInput, Prisma.NomineeVoteUncheckedUpdateManyWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput>
}

export type NomineeVoteCreateWithoutUserInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  createdAt?: Date | string
  updatedAt: Date | string
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: Prisma.NomineeCreateNestedOneWithoutNomineeVote_NomineeVote_firstChoiceNomineeIdToNomineeInput
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: Prisma.NomineeCreateNestedOneWithoutNomineeVote_NomineeVote_secondChoiceNomineeIdToNomineeInput
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: Prisma.NomineeCreateNestedOneWithoutNomineeVote_NomineeVote_thirdChoiceNomineeIdToNomineeInput
}

export type NomineeVoteUncheckedCreateWithoutUserInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: string | null
  secondChoiceNomineeId?: string | null
  thirdChoiceNomineeId?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
}

export type NomineeVoteCreateOrConnectWithoutUserInput = {
  where: Prisma.NomineeVoteWhereUniqueInput
  create: Prisma.XOR<Prisma.NomineeVoteCreateWithoutUserInput, Prisma.NomineeVoteUncheckedCreateWithoutUserInput>
}

export type NomineeVoteCreateManyUserInputEnvelope = {
  data: Prisma.NomineeVoteCreateManyUserInput | Prisma.NomineeVoteCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type NomineeVoteUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.NomineeVoteWhereUniqueInput
  update: Prisma.XOR<Prisma.NomineeVoteUpdateWithoutUserInput, Prisma.NomineeVoteUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.NomineeVoteCreateWithoutUserInput, Prisma.NomineeVoteUncheckedCreateWithoutUserInput>
}

export type NomineeVoteUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.NomineeVoteWhereUniqueInput
  data: Prisma.XOR<Prisma.NomineeVoteUpdateWithoutUserInput, Prisma.NomineeVoteUncheckedUpdateWithoutUserInput>
}

export type NomineeVoteUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.NomineeVoteScalarWhereInput
  data: Prisma.XOR<Prisma.NomineeVoteUpdateManyMutationInput, Prisma.NomineeVoteUncheckedUpdateManyWithoutUserInput>
}

export type NomineeVoteCreateManyNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  secondChoiceNomineeId?: string | null
  thirdChoiceNomineeId?: string | null
  userId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type NomineeVoteCreateManyNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: string | null
  thirdChoiceNomineeId?: string | null
  userId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type NomineeVoteCreateManyNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: string | null
  secondChoiceNomineeId?: string | null
  userId: string
  createdAt?: Date | string
  updatedAt: Date | string
}

export type NomineeVoteUpdateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: Prisma.NomineeUpdateOneWithoutNomineeVote_NomineeVote_secondChoiceNomineeIdToNomineeNestedInput
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: Prisma.NomineeUpdateOneWithoutNomineeVote_NomineeVote_thirdChoiceNomineeIdToNomineeNestedInput
  user?: Prisma.userUpdateOneRequiredWithoutNomineeVoteNestedInput
}

export type NomineeVoteUncheckedUpdateWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  secondChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thirdChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type NomineeVoteUncheckedUpdateManyWithoutNominee_NomineeVote_firstChoiceNomineeIdToNomineeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  secondChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thirdChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type NomineeVoteUpdateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: Prisma.NomineeUpdateOneWithoutNomineeVote_NomineeVote_firstChoiceNomineeIdToNomineeNestedInput
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: Prisma.NomineeUpdateOneWithoutNomineeVote_NomineeVote_thirdChoiceNomineeIdToNomineeNestedInput
  user?: Prisma.userUpdateOneRequiredWithoutNomineeVoteNestedInput
}

export type NomineeVoteUncheckedUpdateWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thirdChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type NomineeVoteUncheckedUpdateManyWithoutNominee_NomineeVote_secondChoiceNomineeIdToNomineeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thirdChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type NomineeVoteUpdateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: Prisma.NomineeUpdateOneWithoutNomineeVote_NomineeVote_firstChoiceNomineeIdToNomineeNestedInput
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: Prisma.NomineeUpdateOneWithoutNomineeVote_NomineeVote_secondChoiceNomineeIdToNomineeNestedInput
  user?: Prisma.userUpdateOneRequiredWithoutNomineeVoteNestedInput
}

export type NomineeVoteUncheckedUpdateWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type NomineeVoteUncheckedUpdateManyWithoutNominee_NomineeVote_thirdChoiceNomineeIdToNomineeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type NomineeVoteCreateManyUserInput = {
  id: string
  type: $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: string | null
  secondChoiceNomineeId?: string | null
  thirdChoiceNomineeId?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
}

export type NomineeVoteUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: Prisma.NomineeUpdateOneWithoutNomineeVote_NomineeVote_firstChoiceNomineeIdToNomineeNestedInput
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: Prisma.NomineeUpdateOneWithoutNomineeVote_NomineeVote_secondChoiceNomineeIdToNomineeNestedInput
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: Prisma.NomineeUpdateOneWithoutNomineeVote_NomineeVote_thirdChoiceNomineeIdToNomineeNestedInput
}

export type NomineeVoteUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thirdChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type NomineeVoteUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.EnumNOMINEE_TYPEFieldUpdateOperationsInput | $Enums.NOMINEE_TYPE
  firstChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  secondChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thirdChoiceNomineeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type NomineeVoteSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  firstChoiceNomineeId?: boolean
  secondChoiceNomineeId?: boolean
  thirdChoiceNomineeId?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_firstChoiceNomineeIdToNomineeArgs<ExtArgs>
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_secondChoiceNomineeIdToNomineeArgs<ExtArgs>
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_thirdChoiceNomineeIdToNomineeArgs<ExtArgs>
  user?: boolean | Prisma.userDefaultArgs<ExtArgs>
}, ExtArgs["result"]["nomineeVote"]>

export type NomineeVoteSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  firstChoiceNomineeId?: boolean
  secondChoiceNomineeId?: boolean
  thirdChoiceNomineeId?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_firstChoiceNomineeIdToNomineeArgs<ExtArgs>
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_secondChoiceNomineeIdToNomineeArgs<ExtArgs>
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_thirdChoiceNomineeIdToNomineeArgs<ExtArgs>
  user?: boolean | Prisma.userDefaultArgs<ExtArgs>
}, ExtArgs["result"]["nomineeVote"]>

export type NomineeVoteSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  type?: boolean
  firstChoiceNomineeId?: boolean
  secondChoiceNomineeId?: boolean
  thirdChoiceNomineeId?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_firstChoiceNomineeIdToNomineeArgs<ExtArgs>
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_secondChoiceNomineeIdToNomineeArgs<ExtArgs>
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_thirdChoiceNomineeIdToNomineeArgs<ExtArgs>
  user?: boolean | Prisma.userDefaultArgs<ExtArgs>
}, ExtArgs["result"]["nomineeVote"]>

export type NomineeVoteSelectScalar = {
  id?: boolean
  type?: boolean
  firstChoiceNomineeId?: boolean
  secondChoiceNomineeId?: boolean
  thirdChoiceNomineeId?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type NomineeVoteOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "type" | "firstChoiceNomineeId" | "secondChoiceNomineeId" | "thirdChoiceNomineeId" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["nomineeVote"]>
export type NomineeVoteInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_firstChoiceNomineeIdToNomineeArgs<ExtArgs>
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_secondChoiceNomineeIdToNomineeArgs<ExtArgs>
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_thirdChoiceNomineeIdToNomineeArgs<ExtArgs>
  user?: boolean | Prisma.userDefaultArgs<ExtArgs>
}
export type NomineeVoteIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_firstChoiceNomineeIdToNomineeArgs<ExtArgs>
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_secondChoiceNomineeIdToNomineeArgs<ExtArgs>
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_thirdChoiceNomineeIdToNomineeArgs<ExtArgs>
  user?: boolean | Prisma.userDefaultArgs<ExtArgs>
}
export type NomineeVoteIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_firstChoiceNomineeIdToNomineeArgs<ExtArgs>
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_secondChoiceNomineeIdToNomineeArgs<ExtArgs>
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee?: boolean | Prisma.NomineeVote$Nominee_NomineeVote_thirdChoiceNomineeIdToNomineeArgs<ExtArgs>
  user?: boolean | Prisma.userDefaultArgs<ExtArgs>
}

export type $NomineeVotePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "NomineeVote"
  objects: {
    Nominee_NomineeVote_firstChoiceNomineeIdToNominee: Prisma.$NomineePayload<ExtArgs> | null
    Nominee_NomineeVote_secondChoiceNomineeIdToNominee: Prisma.$NomineePayload<ExtArgs> | null
    Nominee_NomineeVote_thirdChoiceNomineeIdToNominee: Prisma.$NomineePayload<ExtArgs> | null
    user: Prisma.$userPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    type: $Enums.NOMINEE_TYPE
    firstChoiceNomineeId: string | null
    secondChoiceNomineeId: string | null
    thirdChoiceNomineeId: string | null
    userId: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["nomineeVote"]>
  composites: {}
}

export type NomineeVoteGetPayload<S extends boolean | null | undefined | NomineeVoteDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$NomineeVotePayload, S>

export type NomineeVoteCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<NomineeVoteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: NomineeVoteCountAggregateInputType | true
  }

export interface NomineeVoteDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['NomineeVote'], meta: { name: 'NomineeVote' } }
  /**
   * Find zero or one NomineeVote that matches the filter.
   * @param {NomineeVoteFindUniqueArgs} args - Arguments to find a NomineeVote
   * @example
   * // Get one NomineeVote
   * const nomineeVote = await prisma.nomineeVote.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends NomineeVoteFindUniqueArgs>(args: Prisma.SelectSubset<T, NomineeVoteFindUniqueArgs<ExtArgs>>): Prisma.Prisma__NomineeVoteClient<runtime.Types.Result.GetResult<Prisma.$NomineeVotePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one NomineeVote that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {NomineeVoteFindUniqueOrThrowArgs} args - Arguments to find a NomineeVote
   * @example
   * // Get one NomineeVote
   * const nomineeVote = await prisma.nomineeVote.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends NomineeVoteFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, NomineeVoteFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__NomineeVoteClient<runtime.Types.Result.GetResult<Prisma.$NomineeVotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first NomineeVote that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {NomineeVoteFindFirstArgs} args - Arguments to find a NomineeVote
   * @example
   * // Get one NomineeVote
   * const nomineeVote = await prisma.nomineeVote.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends NomineeVoteFindFirstArgs>(args?: Prisma.SelectSubset<T, NomineeVoteFindFirstArgs<ExtArgs>>): Prisma.Prisma__NomineeVoteClient<runtime.Types.Result.GetResult<Prisma.$NomineeVotePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first NomineeVote that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {NomineeVoteFindFirstOrThrowArgs} args - Arguments to find a NomineeVote
   * @example
   * // Get one NomineeVote
   * const nomineeVote = await prisma.nomineeVote.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends NomineeVoteFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, NomineeVoteFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__NomineeVoteClient<runtime.Types.Result.GetResult<Prisma.$NomineeVotePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more NomineeVotes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {NomineeVoteFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all NomineeVotes
   * const nomineeVotes = await prisma.nomineeVote.findMany()
   * 
   * // Get first 10 NomineeVotes
   * const nomineeVotes = await prisma.nomineeVote.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const nomineeVoteWithIdOnly = await prisma.nomineeVote.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends NomineeVoteFindManyArgs>(args?: Prisma.SelectSubset<T, NomineeVoteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NomineeVotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a NomineeVote.
   * @param {NomineeVoteCreateArgs} args - Arguments to create a NomineeVote.
   * @example
   * // Create one NomineeVote
   * const NomineeVote = await prisma.nomineeVote.create({
   *   data: {
   *     // ... data to create a NomineeVote
   *   }
   * })
   * 
   */
  create<T extends NomineeVoteCreateArgs>(args: Prisma.SelectSubset<T, NomineeVoteCreateArgs<ExtArgs>>): Prisma.Prisma__NomineeVoteClient<runtime.Types.Result.GetResult<Prisma.$NomineeVotePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many NomineeVotes.
   * @param {NomineeVoteCreateManyArgs} args - Arguments to create many NomineeVotes.
   * @example
   * // Create many NomineeVotes
   * const nomineeVote = await prisma.nomineeVote.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends NomineeVoteCreateManyArgs>(args?: Prisma.SelectSubset<T, NomineeVoteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many NomineeVotes and returns the data saved in the database.
   * @param {NomineeVoteCreateManyAndReturnArgs} args - Arguments to create many NomineeVotes.
   * @example
   * // Create many NomineeVotes
   * const nomineeVote = await prisma.nomineeVote.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many NomineeVotes and only return the `id`
   * const nomineeVoteWithIdOnly = await prisma.nomineeVote.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends NomineeVoteCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, NomineeVoteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NomineeVotePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a NomineeVote.
   * @param {NomineeVoteDeleteArgs} args - Arguments to delete one NomineeVote.
   * @example
   * // Delete one NomineeVote
   * const NomineeVote = await prisma.nomineeVote.delete({
   *   where: {
   *     // ... filter to delete one NomineeVote
   *   }
   * })
   * 
   */
  delete<T extends NomineeVoteDeleteArgs>(args: Prisma.SelectSubset<T, NomineeVoteDeleteArgs<ExtArgs>>): Prisma.Prisma__NomineeVoteClient<runtime.Types.Result.GetResult<Prisma.$NomineeVotePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one NomineeVote.
   * @param {NomineeVoteUpdateArgs} args - Arguments to update one NomineeVote.
   * @example
   * // Update one NomineeVote
   * const nomineeVote = await prisma.nomineeVote.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends NomineeVoteUpdateArgs>(args: Prisma.SelectSubset<T, NomineeVoteUpdateArgs<ExtArgs>>): Prisma.Prisma__NomineeVoteClient<runtime.Types.Result.GetResult<Prisma.$NomineeVotePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more NomineeVotes.
   * @param {NomineeVoteDeleteManyArgs} args - Arguments to filter NomineeVotes to delete.
   * @example
   * // Delete a few NomineeVotes
   * const { count } = await prisma.nomineeVote.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends NomineeVoteDeleteManyArgs>(args?: Prisma.SelectSubset<T, NomineeVoteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more NomineeVotes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {NomineeVoteUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many NomineeVotes
   * const nomineeVote = await prisma.nomineeVote.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends NomineeVoteUpdateManyArgs>(args: Prisma.SelectSubset<T, NomineeVoteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more NomineeVotes and returns the data updated in the database.
   * @param {NomineeVoteUpdateManyAndReturnArgs} args - Arguments to update many NomineeVotes.
   * @example
   * // Update many NomineeVotes
   * const nomineeVote = await prisma.nomineeVote.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more NomineeVotes and only return the `id`
   * const nomineeVoteWithIdOnly = await prisma.nomineeVote.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends NomineeVoteUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, NomineeVoteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NomineeVotePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one NomineeVote.
   * @param {NomineeVoteUpsertArgs} args - Arguments to update or create a NomineeVote.
   * @example
   * // Update or create a NomineeVote
   * const nomineeVote = await prisma.nomineeVote.upsert({
   *   create: {
   *     // ... data to create a NomineeVote
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the NomineeVote we want to update
   *   }
   * })
   */
  upsert<T extends NomineeVoteUpsertArgs>(args: Prisma.SelectSubset<T, NomineeVoteUpsertArgs<ExtArgs>>): Prisma.Prisma__NomineeVoteClient<runtime.Types.Result.GetResult<Prisma.$NomineeVotePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of NomineeVotes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {NomineeVoteCountArgs} args - Arguments to filter NomineeVotes to count.
   * @example
   * // Count the number of NomineeVotes
   * const count = await prisma.nomineeVote.count({
   *   where: {
   *     // ... the filter for the NomineeVotes we want to count
   *   }
   * })
  **/
  count<T extends NomineeVoteCountArgs>(
    args?: Prisma.Subset<T, NomineeVoteCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], NomineeVoteCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a NomineeVote.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {NomineeVoteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends NomineeVoteAggregateArgs>(args: Prisma.Subset<T, NomineeVoteAggregateArgs>): Prisma.PrismaPromise<GetNomineeVoteAggregateType<T>>

  /**
   * Group by NomineeVote.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {NomineeVoteGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends NomineeVoteGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: NomineeVoteGroupByArgs['orderBy'] }
      : { orderBy?: NomineeVoteGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, NomineeVoteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNomineeVoteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the NomineeVote model
 */
readonly fields: NomineeVoteFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for NomineeVote.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__NomineeVoteClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Nominee_NomineeVote_firstChoiceNomineeIdToNominee<T extends Prisma.NomineeVote$Nominee_NomineeVote_firstChoiceNomineeIdToNomineeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.NomineeVote$Nominee_NomineeVote_firstChoiceNomineeIdToNomineeArgs<ExtArgs>>): Prisma.Prisma__NomineeClient<runtime.Types.Result.GetResult<Prisma.$NomineePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  Nominee_NomineeVote_secondChoiceNomineeIdToNominee<T extends Prisma.NomineeVote$Nominee_NomineeVote_secondChoiceNomineeIdToNomineeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.NomineeVote$Nominee_NomineeVote_secondChoiceNomineeIdToNomineeArgs<ExtArgs>>): Prisma.Prisma__NomineeClient<runtime.Types.Result.GetResult<Prisma.$NomineePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  Nominee_NomineeVote_thirdChoiceNomineeIdToNominee<T extends Prisma.NomineeVote$Nominee_NomineeVote_thirdChoiceNomineeIdToNomineeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.NomineeVote$Nominee_NomineeVote_thirdChoiceNomineeIdToNomineeArgs<ExtArgs>>): Prisma.Prisma__NomineeClient<runtime.Types.Result.GetResult<Prisma.$NomineePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  user<T extends Prisma.userDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.userDefaultArgs<ExtArgs>>): Prisma.Prisma__userClient<runtime.Types.Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the NomineeVote model
 */
export interface NomineeVoteFieldRefs {
  readonly id: Prisma.FieldRef<"NomineeVote", 'String'>
  readonly type: Prisma.FieldRef<"NomineeVote", 'NOMINEE_TYPE'>
  readonly firstChoiceNomineeId: Prisma.FieldRef<"NomineeVote", 'String'>
  readonly secondChoiceNomineeId: Prisma.FieldRef<"NomineeVote", 'String'>
  readonly thirdChoiceNomineeId: Prisma.FieldRef<"NomineeVote", 'String'>
  readonly userId: Prisma.FieldRef<"NomineeVote", 'String'>
  readonly createdAt: Prisma.FieldRef<"NomineeVote", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"NomineeVote", 'DateTime'>
}
    

// Custom InputTypes
/**
 * NomineeVote findUnique
 */
export type NomineeVoteFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NomineeVote
   */
  select?: Prisma.NomineeVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the NomineeVote
   */
  omit?: Prisma.NomineeVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeVoteInclude<ExtArgs> | null
  /**
   * Filter, which NomineeVote to fetch.
   */
  where: Prisma.NomineeVoteWhereUniqueInput
}

/**
 * NomineeVote findUniqueOrThrow
 */
export type NomineeVoteFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NomineeVote
   */
  select?: Prisma.NomineeVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the NomineeVote
   */
  omit?: Prisma.NomineeVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeVoteInclude<ExtArgs> | null
  /**
   * Filter, which NomineeVote to fetch.
   */
  where: Prisma.NomineeVoteWhereUniqueInput
}

/**
 * NomineeVote findFirst
 */
export type NomineeVoteFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NomineeVote
   */
  select?: Prisma.NomineeVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the NomineeVote
   */
  omit?: Prisma.NomineeVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeVoteInclude<ExtArgs> | null
  /**
   * Filter, which NomineeVote to fetch.
   */
  where?: Prisma.NomineeVoteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of NomineeVotes to fetch.
   */
  orderBy?: Prisma.NomineeVoteOrderByWithRelationInput | Prisma.NomineeVoteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for NomineeVotes.
   */
  cursor?: Prisma.NomineeVoteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` NomineeVotes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` NomineeVotes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of NomineeVotes.
   */
  distinct?: Prisma.NomineeVoteScalarFieldEnum | Prisma.NomineeVoteScalarFieldEnum[]
}

/**
 * NomineeVote findFirstOrThrow
 */
export type NomineeVoteFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NomineeVote
   */
  select?: Prisma.NomineeVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the NomineeVote
   */
  omit?: Prisma.NomineeVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeVoteInclude<ExtArgs> | null
  /**
   * Filter, which NomineeVote to fetch.
   */
  where?: Prisma.NomineeVoteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of NomineeVotes to fetch.
   */
  orderBy?: Prisma.NomineeVoteOrderByWithRelationInput | Prisma.NomineeVoteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for NomineeVotes.
   */
  cursor?: Prisma.NomineeVoteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` NomineeVotes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` NomineeVotes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of NomineeVotes.
   */
  distinct?: Prisma.NomineeVoteScalarFieldEnum | Prisma.NomineeVoteScalarFieldEnum[]
}

/**
 * NomineeVote findMany
 */
export type NomineeVoteFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NomineeVote
   */
  select?: Prisma.NomineeVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the NomineeVote
   */
  omit?: Prisma.NomineeVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeVoteInclude<ExtArgs> | null
  /**
   * Filter, which NomineeVotes to fetch.
   */
  where?: Prisma.NomineeVoteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of NomineeVotes to fetch.
   */
  orderBy?: Prisma.NomineeVoteOrderByWithRelationInput | Prisma.NomineeVoteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing NomineeVotes.
   */
  cursor?: Prisma.NomineeVoteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` NomineeVotes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` NomineeVotes.
   */
  skip?: number
  distinct?: Prisma.NomineeVoteScalarFieldEnum | Prisma.NomineeVoteScalarFieldEnum[]
}

/**
 * NomineeVote create
 */
export type NomineeVoteCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NomineeVote
   */
  select?: Prisma.NomineeVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the NomineeVote
   */
  omit?: Prisma.NomineeVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeVoteInclude<ExtArgs> | null
  /**
   * The data needed to create a NomineeVote.
   */
  data: Prisma.XOR<Prisma.NomineeVoteCreateInput, Prisma.NomineeVoteUncheckedCreateInput>
}

/**
 * NomineeVote createMany
 */
export type NomineeVoteCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many NomineeVotes.
   */
  data: Prisma.NomineeVoteCreateManyInput | Prisma.NomineeVoteCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * NomineeVote createManyAndReturn
 */
export type NomineeVoteCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NomineeVote
   */
  select?: Prisma.NomineeVoteSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the NomineeVote
   */
  omit?: Prisma.NomineeVoteOmit<ExtArgs> | null
  /**
   * The data used to create many NomineeVotes.
   */
  data: Prisma.NomineeVoteCreateManyInput | Prisma.NomineeVoteCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeVoteIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * NomineeVote update
 */
export type NomineeVoteUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NomineeVote
   */
  select?: Prisma.NomineeVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the NomineeVote
   */
  omit?: Prisma.NomineeVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeVoteInclude<ExtArgs> | null
  /**
   * The data needed to update a NomineeVote.
   */
  data: Prisma.XOR<Prisma.NomineeVoteUpdateInput, Prisma.NomineeVoteUncheckedUpdateInput>
  /**
   * Choose, which NomineeVote to update.
   */
  where: Prisma.NomineeVoteWhereUniqueInput
}

/**
 * NomineeVote updateMany
 */
export type NomineeVoteUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update NomineeVotes.
   */
  data: Prisma.XOR<Prisma.NomineeVoteUpdateManyMutationInput, Prisma.NomineeVoteUncheckedUpdateManyInput>
  /**
   * Filter which NomineeVotes to update
   */
  where?: Prisma.NomineeVoteWhereInput
  /**
   * Limit how many NomineeVotes to update.
   */
  limit?: number
}

/**
 * NomineeVote updateManyAndReturn
 */
export type NomineeVoteUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NomineeVote
   */
  select?: Prisma.NomineeVoteSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the NomineeVote
   */
  omit?: Prisma.NomineeVoteOmit<ExtArgs> | null
  /**
   * The data used to update NomineeVotes.
   */
  data: Prisma.XOR<Prisma.NomineeVoteUpdateManyMutationInput, Prisma.NomineeVoteUncheckedUpdateManyInput>
  /**
   * Filter which NomineeVotes to update
   */
  where?: Prisma.NomineeVoteWhereInput
  /**
   * Limit how many NomineeVotes to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeVoteIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * NomineeVote upsert
 */
export type NomineeVoteUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NomineeVote
   */
  select?: Prisma.NomineeVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the NomineeVote
   */
  omit?: Prisma.NomineeVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeVoteInclude<ExtArgs> | null
  /**
   * The filter to search for the NomineeVote to update in case it exists.
   */
  where: Prisma.NomineeVoteWhereUniqueInput
  /**
   * In case the NomineeVote found by the `where` argument doesn't exist, create a new NomineeVote with this data.
   */
  create: Prisma.XOR<Prisma.NomineeVoteCreateInput, Prisma.NomineeVoteUncheckedCreateInput>
  /**
   * In case the NomineeVote was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.NomineeVoteUpdateInput, Prisma.NomineeVoteUncheckedUpdateInput>
}

/**
 * NomineeVote delete
 */
export type NomineeVoteDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NomineeVote
   */
  select?: Prisma.NomineeVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the NomineeVote
   */
  omit?: Prisma.NomineeVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeVoteInclude<ExtArgs> | null
  /**
   * Filter which NomineeVote to delete.
   */
  where: Prisma.NomineeVoteWhereUniqueInput
}

/**
 * NomineeVote deleteMany
 */
export type NomineeVoteDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which NomineeVotes to delete
   */
  where?: Prisma.NomineeVoteWhereInput
  /**
   * Limit how many NomineeVotes to delete.
   */
  limit?: number
}

/**
 * NomineeVote.Nominee_NomineeVote_firstChoiceNomineeIdToNominee
 */
export type NomineeVote$Nominee_NomineeVote_firstChoiceNomineeIdToNomineeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Nominee
   */
  select?: Prisma.NomineeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Nominee
   */
  omit?: Prisma.NomineeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeInclude<ExtArgs> | null
  where?: Prisma.NomineeWhereInput
}

/**
 * NomineeVote.Nominee_NomineeVote_secondChoiceNomineeIdToNominee
 */
export type NomineeVote$Nominee_NomineeVote_secondChoiceNomineeIdToNomineeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Nominee
   */
  select?: Prisma.NomineeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Nominee
   */
  omit?: Prisma.NomineeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeInclude<ExtArgs> | null
  where?: Prisma.NomineeWhereInput
}

/**
 * NomineeVote.Nominee_NomineeVote_thirdChoiceNomineeIdToNominee
 */
export type NomineeVote$Nominee_NomineeVote_thirdChoiceNomineeIdToNomineeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Nominee
   */
  select?: Prisma.NomineeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Nominee
   */
  omit?: Prisma.NomineeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeInclude<ExtArgs> | null
  where?: Prisma.NomineeWhereInput
}

/**
 * NomineeVote without action
 */
export type NomineeVoteDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the NomineeVote
   */
  select?: Prisma.NomineeVoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the NomineeVote
   */
  omit?: Prisma.NomineeVoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NomineeVoteInclude<ExtArgs> | null
}
