
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ReferalCodeUsage` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ReferalCodeUsage
 * 
 */
export type ReferalCodeUsageModel = runtime.Types.Result.DefaultSelection<Prisma.$ReferalCodeUsagePayload>

export type AggregateReferalCodeUsage = {
  _count: ReferalCodeUsageCountAggregateOutputType | null
  _min: ReferalCodeUsageMinAggregateOutputType | null
  _max: ReferalCodeUsageMaxAggregateOutputType | null
}

export type ReferalCodeUsageMinAggregateOutputType = {
  id: string | null
  provideById: string | null
  usedById: string | null
  createdAt: Date | null
  updatedAt: Date | null
  isValidated: boolean | null
}

export type ReferalCodeUsageMaxAggregateOutputType = {
  id: string | null
  provideById: string | null
  usedById: string | null
  createdAt: Date | null
  updatedAt: Date | null
  isValidated: boolean | null
}

export type ReferalCodeUsageCountAggregateOutputType = {
  id: number
  provideById: number
  usedById: number
  createdAt: number
  updatedAt: number
  isValidated: number
  _all: number
}


export type ReferalCodeUsageMinAggregateInputType = {
  id?: true
  provideById?: true
  usedById?: true
  createdAt?: true
  updatedAt?: true
  isValidated?: true
}

export type ReferalCodeUsageMaxAggregateInputType = {
  id?: true
  provideById?: true
  usedById?: true
  createdAt?: true
  updatedAt?: true
  isValidated?: true
}

export type ReferalCodeUsageCountAggregateInputType = {
  id?: true
  provideById?: true
  usedById?: true
  createdAt?: true
  updatedAt?: true
  isValidated?: true
  _all?: true
}

export type ReferalCodeUsageAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ReferalCodeUsage to aggregate.
   */
  where?: Prisma.ReferalCodeUsageWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ReferalCodeUsages to fetch.
   */
  orderBy?: Prisma.ReferalCodeUsageOrderByWithRelationInput | Prisma.ReferalCodeUsageOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ReferalCodeUsageWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ReferalCodeUsages from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ReferalCodeUsages.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ReferalCodeUsages
  **/
  _count?: true | ReferalCodeUsageCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ReferalCodeUsageMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ReferalCodeUsageMaxAggregateInputType
}

export type GetReferalCodeUsageAggregateType<T extends ReferalCodeUsageAggregateArgs> = {
      [P in keyof T & keyof AggregateReferalCodeUsage]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateReferalCodeUsage[P]>
    : Prisma.GetScalarType<T[P], AggregateReferalCodeUsage[P]>
}




export type ReferalCodeUsageGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ReferalCodeUsageWhereInput
  orderBy?: Prisma.ReferalCodeUsageOrderByWithAggregationInput | Prisma.ReferalCodeUsageOrderByWithAggregationInput[]
  by: Prisma.ReferalCodeUsageScalarFieldEnum[] | Prisma.ReferalCodeUsageScalarFieldEnum
  having?: Prisma.ReferalCodeUsageScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ReferalCodeUsageCountAggregateInputType | true
  _min?: ReferalCodeUsageMinAggregateInputType
  _max?: ReferalCodeUsageMaxAggregateInputType
}

export type ReferalCodeUsageGroupByOutputType = {
  id: string
  provideById: string
  usedById: string
  createdAt: Date
  updatedAt: Date
  isValidated: boolean
  _count: ReferalCodeUsageCountAggregateOutputType | null
  _min: ReferalCodeUsageMinAggregateOutputType | null
  _max: ReferalCodeUsageMaxAggregateOutputType | null
}

type GetReferalCodeUsageGroupByPayload<T extends ReferalCodeUsageGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ReferalCodeUsageGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ReferalCodeUsageGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ReferalCodeUsageGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ReferalCodeUsageGroupByOutputType[P]>
      }
    >
  > 



export type ReferalCodeUsageWhereInput = {
  AND?: Prisma.ReferalCodeUsageWhereInput | Prisma.ReferalCodeUsageWhereInput[]
  OR?: Prisma.ReferalCodeUsageWhereInput[]
  NOT?: Prisma.ReferalCodeUsageWhereInput | Prisma.ReferalCodeUsageWhereInput[]
  id?: Prisma.StringFilter<"ReferalCodeUsage"> | string
  provideById?: Prisma.StringFilter<"ReferalCodeUsage"> | string
  usedById?: Prisma.StringFilter<"ReferalCodeUsage"> | string
  createdAt?: Prisma.DateTimeFilter<"ReferalCodeUsage"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ReferalCodeUsage"> | Date | string
  isValidated?: Prisma.BoolFilter<"ReferalCodeUsage"> | boolean
  UserData_ReferalCodeUsage_provideByIdToUserData?: Prisma.XOR<Prisma.UserDataScalarRelationFilter, Prisma.UserDataWhereInput>
  UserData_ReferalCodeUsage_usedByIdToUserData?: Prisma.XOR<Prisma.UserDataScalarRelationFilter, Prisma.UserDataWhereInput>
}

export type ReferalCodeUsageOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  provideById?: Prisma.SortOrder
  usedById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  isValidated?: Prisma.SortOrder
  UserData_ReferalCodeUsage_provideByIdToUserData?: Prisma.UserDataOrderByWithRelationInput
  UserData_ReferalCodeUsage_usedByIdToUserData?: Prisma.UserDataOrderByWithRelationInput
}

export type ReferalCodeUsageWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ReferalCodeUsageWhereInput | Prisma.ReferalCodeUsageWhereInput[]
  OR?: Prisma.ReferalCodeUsageWhereInput[]
  NOT?: Prisma.ReferalCodeUsageWhereInput | Prisma.ReferalCodeUsageWhereInput[]
  provideById?: Prisma.StringFilter<"ReferalCodeUsage"> | string
  usedById?: Prisma.StringFilter<"ReferalCodeUsage"> | string
  createdAt?: Prisma.DateTimeFilter<"ReferalCodeUsage"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ReferalCodeUsage"> | Date | string
  isValidated?: Prisma.BoolFilter<"ReferalCodeUsage"> | boolean
  UserData_ReferalCodeUsage_provideByIdToUserData?: Prisma.XOR<Prisma.UserDataScalarRelationFilter, Prisma.UserDataWhereInput>
  UserData_ReferalCodeUsage_usedByIdToUserData?: Prisma.XOR<Prisma.UserDataScalarRelationFilter, Prisma.UserDataWhereInput>
}, "id">

export type ReferalCodeUsageOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  provideById?: Prisma.SortOrder
  usedById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  isValidated?: Prisma.SortOrder
  _count?: Prisma.ReferalCodeUsageCountOrderByAggregateInput
  _max?: Prisma.ReferalCodeUsageMaxOrderByAggregateInput
  _min?: Prisma.ReferalCodeUsageMinOrderByAggregateInput
}

export type ReferalCodeUsageScalarWhereWithAggregatesInput = {
  AND?: Prisma.ReferalCodeUsageScalarWhereWithAggregatesInput | Prisma.ReferalCodeUsageScalarWhereWithAggregatesInput[]
  OR?: Prisma.ReferalCodeUsageScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ReferalCodeUsageScalarWhereWithAggregatesInput | Prisma.ReferalCodeUsageScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ReferalCodeUsage"> | string
  provideById?: Prisma.StringWithAggregatesFilter<"ReferalCodeUsage"> | string
  usedById?: Prisma.StringWithAggregatesFilter<"ReferalCodeUsage"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ReferalCodeUsage"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ReferalCodeUsage"> | Date | string
  isValidated?: Prisma.BoolWithAggregatesFilter<"ReferalCodeUsage"> | boolean
}

export type ReferalCodeUsageCreateInput = {
  id: string
  createdAt?: Date | string
  updatedAt: Date | string
  isValidated?: boolean
  UserData_ReferalCodeUsage_provideByIdToUserData: Prisma.UserDataCreateNestedOneWithoutReferalCodeUsage_ReferalCodeUsage_provideByIdToUserDataInput
  UserData_ReferalCodeUsage_usedByIdToUserData: Prisma.UserDataCreateNestedOneWithoutReferalCodeUsage_ReferalCodeUsage_usedByIdToUserDataInput
}

export type ReferalCodeUsageUncheckedCreateInput = {
  id: string
  provideById: string
  usedById: string
  createdAt?: Date | string
  updatedAt: Date | string
  isValidated?: boolean
}

export type ReferalCodeUsageUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
  UserData_ReferalCodeUsage_provideByIdToUserData?: Prisma.UserDataUpdateOneRequiredWithoutReferalCodeUsage_ReferalCodeUsage_provideByIdToUserDataNestedInput
  UserData_ReferalCodeUsage_usedByIdToUserData?: Prisma.UserDataUpdateOneRequiredWithoutReferalCodeUsage_ReferalCodeUsage_usedByIdToUserDataNestedInput
}

export type ReferalCodeUsageUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  provideById?: Prisma.StringFieldUpdateOperationsInput | string
  usedById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type ReferalCodeUsageCreateManyInput = {
  id: string
  provideById: string
  usedById: string
  createdAt?: Date | string
  updatedAt: Date | string
  isValidated?: boolean
}

export type ReferalCodeUsageUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type ReferalCodeUsageUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  provideById?: Prisma.StringFieldUpdateOperationsInput | string
  usedById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type ReferalCodeUsageCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  provideById?: Prisma.SortOrder
  usedById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  isValidated?: Prisma.SortOrder
}

export type ReferalCodeUsageMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  provideById?: Prisma.SortOrder
  usedById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  isValidated?: Prisma.SortOrder
}

export type ReferalCodeUsageMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  provideById?: Prisma.SortOrder
  usedById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  isValidated?: Prisma.SortOrder
}

export type ReferalCodeUsageListRelationFilter = {
  every?: Prisma.ReferalCodeUsageWhereInput
  some?: Prisma.ReferalCodeUsageWhereInput
  none?: Prisma.ReferalCodeUsageWhereInput
}

export type ReferalCodeUsageOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ReferalCodeUsageCreateNestedManyWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput = {
  create?: Prisma.XOR<Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput> | Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[] | Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  connectOrCreate?: Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput | Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  createMany?: Prisma.ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_provideByIdToUserDataInputEnvelope
  connect?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
}

export type ReferalCodeUsageCreateNestedManyWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput = {
  create?: Prisma.XOR<Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput> | Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[] | Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  connectOrCreate?: Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput | Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  createMany?: Prisma.ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_usedByIdToUserDataInputEnvelope
  connect?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
}

export type ReferalCodeUsageUncheckedCreateNestedManyWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput = {
  create?: Prisma.XOR<Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput> | Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[] | Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  connectOrCreate?: Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput | Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  createMany?: Prisma.ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_provideByIdToUserDataInputEnvelope
  connect?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
}

export type ReferalCodeUsageUncheckedCreateNestedManyWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput = {
  create?: Prisma.XOR<Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput> | Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[] | Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  connectOrCreate?: Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput | Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  createMany?: Prisma.ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_usedByIdToUserDataInputEnvelope
  connect?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
}

export type ReferalCodeUsageUpdateManyWithoutUserData_ReferalCodeUsage_provideByIdToUserDataNestedInput = {
  create?: Prisma.XOR<Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput> | Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[] | Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  connectOrCreate?: Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput | Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  upsert?: Prisma.ReferalCodeUsageUpsertWithWhereUniqueWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput | Prisma.ReferalCodeUsageUpsertWithWhereUniqueWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  createMany?: Prisma.ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_provideByIdToUserDataInputEnvelope
  set?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  disconnect?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  delete?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  connect?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  update?: Prisma.ReferalCodeUsageUpdateWithWhereUniqueWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput | Prisma.ReferalCodeUsageUpdateWithWhereUniqueWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  updateMany?: Prisma.ReferalCodeUsageUpdateManyWithWhereWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput | Prisma.ReferalCodeUsageUpdateManyWithWhereWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  deleteMany?: Prisma.ReferalCodeUsageScalarWhereInput | Prisma.ReferalCodeUsageScalarWhereInput[]
}

export type ReferalCodeUsageUpdateManyWithoutUserData_ReferalCodeUsage_usedByIdToUserDataNestedInput = {
  create?: Prisma.XOR<Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput> | Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[] | Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  connectOrCreate?: Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput | Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  upsert?: Prisma.ReferalCodeUsageUpsertWithWhereUniqueWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput | Prisma.ReferalCodeUsageUpsertWithWhereUniqueWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  createMany?: Prisma.ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_usedByIdToUserDataInputEnvelope
  set?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  disconnect?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  delete?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  connect?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  update?: Prisma.ReferalCodeUsageUpdateWithWhereUniqueWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput | Prisma.ReferalCodeUsageUpdateWithWhereUniqueWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  updateMany?: Prisma.ReferalCodeUsageUpdateManyWithWhereWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput | Prisma.ReferalCodeUsageUpdateManyWithWhereWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  deleteMany?: Prisma.ReferalCodeUsageScalarWhereInput | Prisma.ReferalCodeUsageScalarWhereInput[]
}

export type ReferalCodeUsageUncheckedUpdateManyWithoutUserData_ReferalCodeUsage_provideByIdToUserDataNestedInput = {
  create?: Prisma.XOR<Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput> | Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[] | Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  connectOrCreate?: Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput | Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  upsert?: Prisma.ReferalCodeUsageUpsertWithWhereUniqueWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput | Prisma.ReferalCodeUsageUpsertWithWhereUniqueWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  createMany?: Prisma.ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_provideByIdToUserDataInputEnvelope
  set?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  disconnect?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  delete?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  connect?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  update?: Prisma.ReferalCodeUsageUpdateWithWhereUniqueWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput | Prisma.ReferalCodeUsageUpdateWithWhereUniqueWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  updateMany?: Prisma.ReferalCodeUsageUpdateManyWithWhereWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput | Prisma.ReferalCodeUsageUpdateManyWithWhereWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  deleteMany?: Prisma.ReferalCodeUsageScalarWhereInput | Prisma.ReferalCodeUsageScalarWhereInput[]
}

export type ReferalCodeUsageUncheckedUpdateManyWithoutUserData_ReferalCodeUsage_usedByIdToUserDataNestedInput = {
  create?: Prisma.XOR<Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput> | Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[] | Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  connectOrCreate?: Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput | Prisma.ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  upsert?: Prisma.ReferalCodeUsageUpsertWithWhereUniqueWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput | Prisma.ReferalCodeUsageUpsertWithWhereUniqueWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  createMany?: Prisma.ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_usedByIdToUserDataInputEnvelope
  set?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  disconnect?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  delete?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  connect?: Prisma.ReferalCodeUsageWhereUniqueInput | Prisma.ReferalCodeUsageWhereUniqueInput[]
  update?: Prisma.ReferalCodeUsageUpdateWithWhereUniqueWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput | Prisma.ReferalCodeUsageUpdateWithWhereUniqueWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  updateMany?: Prisma.ReferalCodeUsageUpdateManyWithWhereWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput | Prisma.ReferalCodeUsageUpdateManyWithWhereWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  deleteMany?: Prisma.ReferalCodeUsageScalarWhereInput | Prisma.ReferalCodeUsageScalarWhereInput[]
}

export type ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput = {
  id: string
  createdAt?: Date | string
  updatedAt: Date | string
  isValidated?: boolean
  UserData_ReferalCodeUsage_usedByIdToUserData: Prisma.UserDataCreateNestedOneWithoutReferalCodeUsage_ReferalCodeUsage_usedByIdToUserDataInput
}

export type ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput = {
  id: string
  usedById: string
  createdAt?: Date | string
  updatedAt: Date | string
  isValidated?: boolean
}

export type ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput = {
  where: Prisma.ReferalCodeUsageWhereUniqueInput
  create: Prisma.XOR<Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput>
}

export type ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_provideByIdToUserDataInputEnvelope = {
  data: Prisma.ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_provideByIdToUserDataInput | Prisma.ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_provideByIdToUserDataInput[]
  skipDuplicates?: boolean
}

export type ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput = {
  id: string
  createdAt?: Date | string
  updatedAt: Date | string
  isValidated?: boolean
  UserData_ReferalCodeUsage_provideByIdToUserData: Prisma.UserDataCreateNestedOneWithoutReferalCodeUsage_ReferalCodeUsage_provideByIdToUserDataInput
}

export type ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput = {
  id: string
  provideById: string
  createdAt?: Date | string
  updatedAt: Date | string
  isValidated?: boolean
}

export type ReferalCodeUsageCreateOrConnectWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput = {
  where: Prisma.ReferalCodeUsageWhereUniqueInput
  create: Prisma.XOR<Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput>
}

export type ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_usedByIdToUserDataInputEnvelope = {
  data: Prisma.ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_usedByIdToUserDataInput | Prisma.ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_usedByIdToUserDataInput[]
  skipDuplicates?: boolean
}

export type ReferalCodeUsageUpsertWithWhereUniqueWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput = {
  where: Prisma.ReferalCodeUsageWhereUniqueInput
  update: Prisma.XOR<Prisma.ReferalCodeUsageUpdateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedUpdateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput>
  create: Prisma.XOR<Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput>
}

export type ReferalCodeUsageUpdateWithWhereUniqueWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput = {
  where: Prisma.ReferalCodeUsageWhereUniqueInput
  data: Prisma.XOR<Prisma.ReferalCodeUsageUpdateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedUpdateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput>
}

export type ReferalCodeUsageUpdateManyWithWhereWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput = {
  where: Prisma.ReferalCodeUsageScalarWhereInput
  data: Prisma.XOR<Prisma.ReferalCodeUsageUpdateManyMutationInput, Prisma.ReferalCodeUsageUncheckedUpdateManyWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput>
}

export type ReferalCodeUsageScalarWhereInput = {
  AND?: Prisma.ReferalCodeUsageScalarWhereInput | Prisma.ReferalCodeUsageScalarWhereInput[]
  OR?: Prisma.ReferalCodeUsageScalarWhereInput[]
  NOT?: Prisma.ReferalCodeUsageScalarWhereInput | Prisma.ReferalCodeUsageScalarWhereInput[]
  id?: Prisma.StringFilter<"ReferalCodeUsage"> | string
  provideById?: Prisma.StringFilter<"ReferalCodeUsage"> | string
  usedById?: Prisma.StringFilter<"ReferalCodeUsage"> | string
  createdAt?: Prisma.DateTimeFilter<"ReferalCodeUsage"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ReferalCodeUsage"> | Date | string
  isValidated?: Prisma.BoolFilter<"ReferalCodeUsage"> | boolean
}

export type ReferalCodeUsageUpsertWithWhereUniqueWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput = {
  where: Prisma.ReferalCodeUsageWhereUniqueInput
  update: Prisma.XOR<Prisma.ReferalCodeUsageUpdateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedUpdateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput>
  create: Prisma.XOR<Prisma.ReferalCodeUsageCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedCreateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput>
}

export type ReferalCodeUsageUpdateWithWhereUniqueWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput = {
  where: Prisma.ReferalCodeUsageWhereUniqueInput
  data: Prisma.XOR<Prisma.ReferalCodeUsageUpdateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput, Prisma.ReferalCodeUsageUncheckedUpdateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput>
}

export type ReferalCodeUsageUpdateManyWithWhereWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput = {
  where: Prisma.ReferalCodeUsageScalarWhereInput
  data: Prisma.XOR<Prisma.ReferalCodeUsageUpdateManyMutationInput, Prisma.ReferalCodeUsageUncheckedUpdateManyWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput>
}

export type ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_provideByIdToUserDataInput = {
  id: string
  usedById: string
  createdAt?: Date | string
  updatedAt: Date | string
  isValidated?: boolean
}

export type ReferalCodeUsageCreateManyUserData_ReferalCodeUsage_usedByIdToUserDataInput = {
  id: string
  provideById: string
  createdAt?: Date | string
  updatedAt: Date | string
  isValidated?: boolean
}

export type ReferalCodeUsageUpdateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
  UserData_ReferalCodeUsage_usedByIdToUserData?: Prisma.UserDataUpdateOneRequiredWithoutReferalCodeUsage_ReferalCodeUsage_usedByIdToUserDataNestedInput
}

export type ReferalCodeUsageUncheckedUpdateWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  usedById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type ReferalCodeUsageUncheckedUpdateManyWithoutUserData_ReferalCodeUsage_provideByIdToUserDataInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  usedById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type ReferalCodeUsageUpdateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
  UserData_ReferalCodeUsage_provideByIdToUserData?: Prisma.UserDataUpdateOneRequiredWithoutReferalCodeUsage_ReferalCodeUsage_provideByIdToUserDataNestedInput
}

export type ReferalCodeUsageUncheckedUpdateWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  provideById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type ReferalCodeUsageUncheckedUpdateManyWithoutUserData_ReferalCodeUsage_usedByIdToUserDataInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  provideById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  isValidated?: Prisma.BoolFieldUpdateOperationsInput | boolean
}



export type ReferalCodeUsageSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  provideById?: boolean
  usedById?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  isValidated?: boolean
  UserData_ReferalCodeUsage_provideByIdToUserData?: boolean | Prisma.UserDataDefaultArgs<ExtArgs>
  UserData_ReferalCodeUsage_usedByIdToUserData?: boolean | Prisma.UserDataDefaultArgs<ExtArgs>
}, ExtArgs["result"]["referalCodeUsage"]>

export type ReferalCodeUsageSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  provideById?: boolean
  usedById?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  isValidated?: boolean
  UserData_ReferalCodeUsage_provideByIdToUserData?: boolean | Prisma.UserDataDefaultArgs<ExtArgs>
  UserData_ReferalCodeUsage_usedByIdToUserData?: boolean | Prisma.UserDataDefaultArgs<ExtArgs>
}, ExtArgs["result"]["referalCodeUsage"]>

export type ReferalCodeUsageSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  provideById?: boolean
  usedById?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  isValidated?: boolean
  UserData_ReferalCodeUsage_provideByIdToUserData?: boolean | Prisma.UserDataDefaultArgs<ExtArgs>
  UserData_ReferalCodeUsage_usedByIdToUserData?: boolean | Prisma.UserDataDefaultArgs<ExtArgs>
}, ExtArgs["result"]["referalCodeUsage"]>

export type ReferalCodeUsageSelectScalar = {
  id?: boolean
  provideById?: boolean
  usedById?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  isValidated?: boolean
}

export type ReferalCodeUsageOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "provideById" | "usedById" | "createdAt" | "updatedAt" | "isValidated", ExtArgs["result"]["referalCodeUsage"]>
export type ReferalCodeUsageInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  UserData_ReferalCodeUsage_provideByIdToUserData?: boolean | Prisma.UserDataDefaultArgs<ExtArgs>
  UserData_ReferalCodeUsage_usedByIdToUserData?: boolean | Prisma.UserDataDefaultArgs<ExtArgs>
}
export type ReferalCodeUsageIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  UserData_ReferalCodeUsage_provideByIdToUserData?: boolean | Prisma.UserDataDefaultArgs<ExtArgs>
  UserData_ReferalCodeUsage_usedByIdToUserData?: boolean | Prisma.UserDataDefaultArgs<ExtArgs>
}
export type ReferalCodeUsageIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  UserData_ReferalCodeUsage_provideByIdToUserData?: boolean | Prisma.UserDataDefaultArgs<ExtArgs>
  UserData_ReferalCodeUsage_usedByIdToUserData?: boolean | Prisma.UserDataDefaultArgs<ExtArgs>
}

export type $ReferalCodeUsagePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ReferalCodeUsage"
  objects: {
    UserData_ReferalCodeUsage_provideByIdToUserData: Prisma.$UserDataPayload<ExtArgs>
    UserData_ReferalCodeUsage_usedByIdToUserData: Prisma.$UserDataPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    provideById: string
    usedById: string
    createdAt: Date
    updatedAt: Date
    isValidated: boolean
  }, ExtArgs["result"]["referalCodeUsage"]>
  composites: {}
}

export type ReferalCodeUsageGetPayload<S extends boolean | null | undefined | ReferalCodeUsageDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ReferalCodeUsagePayload, S>

export type ReferalCodeUsageCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ReferalCodeUsageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ReferalCodeUsageCountAggregateInputType | true
  }

export interface ReferalCodeUsageDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReferalCodeUsage'], meta: { name: 'ReferalCodeUsage' } }
  /**
   * Find zero or one ReferalCodeUsage that matches the filter.
   * @param {ReferalCodeUsageFindUniqueArgs} args - Arguments to find a ReferalCodeUsage
   * @example
   * // Get one ReferalCodeUsage
   * const referalCodeUsage = await prisma.referalCodeUsage.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ReferalCodeUsageFindUniqueArgs>(args: Prisma.SelectSubset<T, ReferalCodeUsageFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ReferalCodeUsageClient<runtime.Types.Result.GetResult<Prisma.$ReferalCodeUsagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ReferalCodeUsage that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ReferalCodeUsageFindUniqueOrThrowArgs} args - Arguments to find a ReferalCodeUsage
   * @example
   * // Get one ReferalCodeUsage
   * const referalCodeUsage = await prisma.referalCodeUsage.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ReferalCodeUsageFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ReferalCodeUsageFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ReferalCodeUsageClient<runtime.Types.Result.GetResult<Prisma.$ReferalCodeUsagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ReferalCodeUsage that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReferalCodeUsageFindFirstArgs} args - Arguments to find a ReferalCodeUsage
   * @example
   * // Get one ReferalCodeUsage
   * const referalCodeUsage = await prisma.referalCodeUsage.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ReferalCodeUsageFindFirstArgs>(args?: Prisma.SelectSubset<T, ReferalCodeUsageFindFirstArgs<ExtArgs>>): Prisma.Prisma__ReferalCodeUsageClient<runtime.Types.Result.GetResult<Prisma.$ReferalCodeUsagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ReferalCodeUsage that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReferalCodeUsageFindFirstOrThrowArgs} args - Arguments to find a ReferalCodeUsage
   * @example
   * // Get one ReferalCodeUsage
   * const referalCodeUsage = await prisma.referalCodeUsage.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ReferalCodeUsageFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ReferalCodeUsageFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ReferalCodeUsageClient<runtime.Types.Result.GetResult<Prisma.$ReferalCodeUsagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ReferalCodeUsages that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReferalCodeUsageFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ReferalCodeUsages
   * const referalCodeUsages = await prisma.referalCodeUsage.findMany()
   * 
   * // Get first 10 ReferalCodeUsages
   * const referalCodeUsages = await prisma.referalCodeUsage.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const referalCodeUsageWithIdOnly = await prisma.referalCodeUsage.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ReferalCodeUsageFindManyArgs>(args?: Prisma.SelectSubset<T, ReferalCodeUsageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReferalCodeUsagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ReferalCodeUsage.
   * @param {ReferalCodeUsageCreateArgs} args - Arguments to create a ReferalCodeUsage.
   * @example
   * // Create one ReferalCodeUsage
   * const ReferalCodeUsage = await prisma.referalCodeUsage.create({
   *   data: {
   *     // ... data to create a ReferalCodeUsage
   *   }
   * })
   * 
   */
  create<T extends ReferalCodeUsageCreateArgs>(args: Prisma.SelectSubset<T, ReferalCodeUsageCreateArgs<ExtArgs>>): Prisma.Prisma__ReferalCodeUsageClient<runtime.Types.Result.GetResult<Prisma.$ReferalCodeUsagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ReferalCodeUsages.
   * @param {ReferalCodeUsageCreateManyArgs} args - Arguments to create many ReferalCodeUsages.
   * @example
   * // Create many ReferalCodeUsages
   * const referalCodeUsage = await prisma.referalCodeUsage.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ReferalCodeUsageCreateManyArgs>(args?: Prisma.SelectSubset<T, ReferalCodeUsageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ReferalCodeUsages and returns the data saved in the database.
   * @param {ReferalCodeUsageCreateManyAndReturnArgs} args - Arguments to create many ReferalCodeUsages.
   * @example
   * // Create many ReferalCodeUsages
   * const referalCodeUsage = await prisma.referalCodeUsage.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ReferalCodeUsages and only return the `id`
   * const referalCodeUsageWithIdOnly = await prisma.referalCodeUsage.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ReferalCodeUsageCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ReferalCodeUsageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReferalCodeUsagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ReferalCodeUsage.
   * @param {ReferalCodeUsageDeleteArgs} args - Arguments to delete one ReferalCodeUsage.
   * @example
   * // Delete one ReferalCodeUsage
   * const ReferalCodeUsage = await prisma.referalCodeUsage.delete({
   *   where: {
   *     // ... filter to delete one ReferalCodeUsage
   *   }
   * })
   * 
   */
  delete<T extends ReferalCodeUsageDeleteArgs>(args: Prisma.SelectSubset<T, ReferalCodeUsageDeleteArgs<ExtArgs>>): Prisma.Prisma__ReferalCodeUsageClient<runtime.Types.Result.GetResult<Prisma.$ReferalCodeUsagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ReferalCodeUsage.
   * @param {ReferalCodeUsageUpdateArgs} args - Arguments to update one ReferalCodeUsage.
   * @example
   * // Update one ReferalCodeUsage
   * const referalCodeUsage = await prisma.referalCodeUsage.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ReferalCodeUsageUpdateArgs>(args: Prisma.SelectSubset<T, ReferalCodeUsageUpdateArgs<ExtArgs>>): Prisma.Prisma__ReferalCodeUsageClient<runtime.Types.Result.GetResult<Prisma.$ReferalCodeUsagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ReferalCodeUsages.
   * @param {ReferalCodeUsageDeleteManyArgs} args - Arguments to filter ReferalCodeUsages to delete.
   * @example
   * // Delete a few ReferalCodeUsages
   * const { count } = await prisma.referalCodeUsage.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ReferalCodeUsageDeleteManyArgs>(args?: Prisma.SelectSubset<T, ReferalCodeUsageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ReferalCodeUsages.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReferalCodeUsageUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ReferalCodeUsages
   * const referalCodeUsage = await prisma.referalCodeUsage.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ReferalCodeUsageUpdateManyArgs>(args: Prisma.SelectSubset<T, ReferalCodeUsageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ReferalCodeUsages and returns the data updated in the database.
   * @param {ReferalCodeUsageUpdateManyAndReturnArgs} args - Arguments to update many ReferalCodeUsages.
   * @example
   * // Update many ReferalCodeUsages
   * const referalCodeUsage = await prisma.referalCodeUsage.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ReferalCodeUsages and only return the `id`
   * const referalCodeUsageWithIdOnly = await prisma.referalCodeUsage.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ReferalCodeUsageUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ReferalCodeUsageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReferalCodeUsagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ReferalCodeUsage.
   * @param {ReferalCodeUsageUpsertArgs} args - Arguments to update or create a ReferalCodeUsage.
   * @example
   * // Update or create a ReferalCodeUsage
   * const referalCodeUsage = await prisma.referalCodeUsage.upsert({
   *   create: {
   *     // ... data to create a ReferalCodeUsage
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ReferalCodeUsage we want to update
   *   }
   * })
   */
  upsert<T extends ReferalCodeUsageUpsertArgs>(args: Prisma.SelectSubset<T, ReferalCodeUsageUpsertArgs<ExtArgs>>): Prisma.Prisma__ReferalCodeUsageClient<runtime.Types.Result.GetResult<Prisma.$ReferalCodeUsagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ReferalCodeUsages.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReferalCodeUsageCountArgs} args - Arguments to filter ReferalCodeUsages to count.
   * @example
   * // Count the number of ReferalCodeUsages
   * const count = await prisma.referalCodeUsage.count({
   *   where: {
   *     // ... the filter for the ReferalCodeUsages we want to count
   *   }
   * })
  **/
  count<T extends ReferalCodeUsageCountArgs>(
    args?: Prisma.Subset<T, ReferalCodeUsageCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ReferalCodeUsageCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ReferalCodeUsage.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReferalCodeUsageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ReferalCodeUsageAggregateArgs>(args: Prisma.Subset<T, ReferalCodeUsageAggregateArgs>): Prisma.PrismaPromise<GetReferalCodeUsageAggregateType<T>>

  /**
   * Group by ReferalCodeUsage.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ReferalCodeUsageGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ReferalCodeUsageGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ReferalCodeUsageGroupByArgs['orderBy'] }
      : { orderBy?: ReferalCodeUsageGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ReferalCodeUsageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReferalCodeUsageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ReferalCodeUsage model
 */
readonly fields: ReferalCodeUsageFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ReferalCodeUsage.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ReferalCodeUsageClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  UserData_ReferalCodeUsage_provideByIdToUserData<T extends Prisma.UserDataDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDataDefaultArgs<ExtArgs>>): Prisma.Prisma__UserDataClient<runtime.Types.Result.GetResult<Prisma.$UserDataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  UserData_ReferalCodeUsage_usedByIdToUserData<T extends Prisma.UserDataDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDataDefaultArgs<ExtArgs>>): Prisma.Prisma__UserDataClient<runtime.Types.Result.GetResult<Prisma.$UserDataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ReferalCodeUsage model
 */
export interface ReferalCodeUsageFieldRefs {
  readonly id: Prisma.FieldRef<"ReferalCodeUsage", 'String'>
  readonly provideById: Prisma.FieldRef<"ReferalCodeUsage", 'String'>
  readonly usedById: Prisma.FieldRef<"ReferalCodeUsage", 'String'>
  readonly createdAt: Prisma.FieldRef<"ReferalCodeUsage", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ReferalCodeUsage", 'DateTime'>
  readonly isValidated: Prisma.FieldRef<"ReferalCodeUsage", 'Boolean'>
}
    

// Custom InputTypes
/**
 * ReferalCodeUsage findUnique
 */
export type ReferalCodeUsageFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ReferalCodeUsage
   */
  select?: Prisma.ReferalCodeUsageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ReferalCodeUsage
   */
  omit?: Prisma.ReferalCodeUsageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferalCodeUsageInclude<ExtArgs> | null
  /**
   * Filter, which ReferalCodeUsage to fetch.
   */
  where: Prisma.ReferalCodeUsageWhereUniqueInput
}

/**
 * ReferalCodeUsage findUniqueOrThrow
 */
export type ReferalCodeUsageFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ReferalCodeUsage
   */
  select?: Prisma.ReferalCodeUsageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ReferalCodeUsage
   */
  omit?: Prisma.ReferalCodeUsageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferalCodeUsageInclude<ExtArgs> | null
  /**
   * Filter, which ReferalCodeUsage to fetch.
   */
  where: Prisma.ReferalCodeUsageWhereUniqueInput
}

/**
 * ReferalCodeUsage findFirst
 */
export type ReferalCodeUsageFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ReferalCodeUsage
   */
  select?: Prisma.ReferalCodeUsageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ReferalCodeUsage
   */
  omit?: Prisma.ReferalCodeUsageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferalCodeUsageInclude<ExtArgs> | null
  /**
   * Filter, which ReferalCodeUsage to fetch.
   */
  where?: Prisma.ReferalCodeUsageWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ReferalCodeUsages to fetch.
   */
  orderBy?: Prisma.ReferalCodeUsageOrderByWithRelationInput | Prisma.ReferalCodeUsageOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ReferalCodeUsages.
   */
  cursor?: Prisma.ReferalCodeUsageWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ReferalCodeUsages from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ReferalCodeUsages.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ReferalCodeUsages.
   */
  distinct?: Prisma.ReferalCodeUsageScalarFieldEnum | Prisma.ReferalCodeUsageScalarFieldEnum[]
}

/**
 * ReferalCodeUsage findFirstOrThrow
 */
export type ReferalCodeUsageFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ReferalCodeUsage
   */
  select?: Prisma.ReferalCodeUsageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ReferalCodeUsage
   */
  omit?: Prisma.ReferalCodeUsageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferalCodeUsageInclude<ExtArgs> | null
  /**
   * Filter, which ReferalCodeUsage to fetch.
   */
  where?: Prisma.ReferalCodeUsageWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ReferalCodeUsages to fetch.
   */
  orderBy?: Prisma.ReferalCodeUsageOrderByWithRelationInput | Prisma.ReferalCodeUsageOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ReferalCodeUsages.
   */
  cursor?: Prisma.ReferalCodeUsageWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ReferalCodeUsages from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ReferalCodeUsages.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ReferalCodeUsages.
   */
  distinct?: Prisma.ReferalCodeUsageScalarFieldEnum | Prisma.ReferalCodeUsageScalarFieldEnum[]
}

/**
 * ReferalCodeUsage findMany
 */
export type ReferalCodeUsageFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ReferalCodeUsage
   */
  select?: Prisma.ReferalCodeUsageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ReferalCodeUsage
   */
  omit?: Prisma.ReferalCodeUsageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferalCodeUsageInclude<ExtArgs> | null
  /**
   * Filter, which ReferalCodeUsages to fetch.
   */
  where?: Prisma.ReferalCodeUsageWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ReferalCodeUsages to fetch.
   */
  orderBy?: Prisma.ReferalCodeUsageOrderByWithRelationInput | Prisma.ReferalCodeUsageOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ReferalCodeUsages.
   */
  cursor?: Prisma.ReferalCodeUsageWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ReferalCodeUsages from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ReferalCodeUsages.
   */
  skip?: number
  distinct?: Prisma.ReferalCodeUsageScalarFieldEnum | Prisma.ReferalCodeUsageScalarFieldEnum[]
}

/**
 * ReferalCodeUsage create
 */
export type ReferalCodeUsageCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ReferalCodeUsage
   */
  select?: Prisma.ReferalCodeUsageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ReferalCodeUsage
   */
  omit?: Prisma.ReferalCodeUsageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferalCodeUsageInclude<ExtArgs> | null
  /**
   * The data needed to create a ReferalCodeUsage.
   */
  data: Prisma.XOR<Prisma.ReferalCodeUsageCreateInput, Prisma.ReferalCodeUsageUncheckedCreateInput>
}

/**
 * ReferalCodeUsage createMany
 */
export type ReferalCodeUsageCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ReferalCodeUsages.
   */
  data: Prisma.ReferalCodeUsageCreateManyInput | Prisma.ReferalCodeUsageCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ReferalCodeUsage createManyAndReturn
 */
export type ReferalCodeUsageCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ReferalCodeUsage
   */
  select?: Prisma.ReferalCodeUsageSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ReferalCodeUsage
   */
  omit?: Prisma.ReferalCodeUsageOmit<ExtArgs> | null
  /**
   * The data used to create many ReferalCodeUsages.
   */
  data: Prisma.ReferalCodeUsageCreateManyInput | Prisma.ReferalCodeUsageCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferalCodeUsageIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ReferalCodeUsage update
 */
export type ReferalCodeUsageUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ReferalCodeUsage
   */
  select?: Prisma.ReferalCodeUsageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ReferalCodeUsage
   */
  omit?: Prisma.ReferalCodeUsageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferalCodeUsageInclude<ExtArgs> | null
  /**
   * The data needed to update a ReferalCodeUsage.
   */
  data: Prisma.XOR<Prisma.ReferalCodeUsageUpdateInput, Prisma.ReferalCodeUsageUncheckedUpdateInput>
  /**
   * Choose, which ReferalCodeUsage to update.
   */
  where: Prisma.ReferalCodeUsageWhereUniqueInput
}

/**
 * ReferalCodeUsage updateMany
 */
export type ReferalCodeUsageUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ReferalCodeUsages.
   */
  data: Prisma.XOR<Prisma.ReferalCodeUsageUpdateManyMutationInput, Prisma.ReferalCodeUsageUncheckedUpdateManyInput>
  /**
   * Filter which ReferalCodeUsages to update
   */
  where?: Prisma.ReferalCodeUsageWhereInput
  /**
   * Limit how many ReferalCodeUsages to update.
   */
  limit?: number
}

/**
 * ReferalCodeUsage updateManyAndReturn
 */
export type ReferalCodeUsageUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ReferalCodeUsage
   */
  select?: Prisma.ReferalCodeUsageSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ReferalCodeUsage
   */
  omit?: Prisma.ReferalCodeUsageOmit<ExtArgs> | null
  /**
   * The data used to update ReferalCodeUsages.
   */
  data: Prisma.XOR<Prisma.ReferalCodeUsageUpdateManyMutationInput, Prisma.ReferalCodeUsageUncheckedUpdateManyInput>
  /**
   * Filter which ReferalCodeUsages to update
   */
  where?: Prisma.ReferalCodeUsageWhereInput
  /**
   * Limit how many ReferalCodeUsages to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferalCodeUsageIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ReferalCodeUsage upsert
 */
export type ReferalCodeUsageUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ReferalCodeUsage
   */
  select?: Prisma.ReferalCodeUsageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ReferalCodeUsage
   */
  omit?: Prisma.ReferalCodeUsageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferalCodeUsageInclude<ExtArgs> | null
  /**
   * The filter to search for the ReferalCodeUsage to update in case it exists.
   */
  where: Prisma.ReferalCodeUsageWhereUniqueInput
  /**
   * In case the ReferalCodeUsage found by the `where` argument doesn't exist, create a new ReferalCodeUsage with this data.
   */
  create: Prisma.XOR<Prisma.ReferalCodeUsageCreateInput, Prisma.ReferalCodeUsageUncheckedCreateInput>
  /**
   * In case the ReferalCodeUsage was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ReferalCodeUsageUpdateInput, Prisma.ReferalCodeUsageUncheckedUpdateInput>
}

/**
 * ReferalCodeUsage delete
 */
export type ReferalCodeUsageDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ReferalCodeUsage
   */
  select?: Prisma.ReferalCodeUsageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ReferalCodeUsage
   */
  omit?: Prisma.ReferalCodeUsageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferalCodeUsageInclude<ExtArgs> | null
  /**
   * Filter which ReferalCodeUsage to delete.
   */
  where: Prisma.ReferalCodeUsageWhereUniqueInput
}

/**
 * ReferalCodeUsage deleteMany
 */
export type ReferalCodeUsageDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ReferalCodeUsages to delete
   */
  where?: Prisma.ReferalCodeUsageWhereInput
  /**
   * Limit how many ReferalCodeUsages to delete.
   */
  limit?: number
}

/**
 * ReferalCodeUsage without action
 */
export type ReferalCodeUsageDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ReferalCodeUsage
   */
  select?: Prisma.ReferalCodeUsageSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ReferalCodeUsage
   */
  omit?: Prisma.ReferalCodeUsageOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferalCodeUsageInclude<ExtArgs> | null
}
